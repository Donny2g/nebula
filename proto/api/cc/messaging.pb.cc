// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messaging.proto

#include "messaging.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace zproto {
class SendMessageReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SendMessageReq>
      _instance;
} _SendMessageReq_default_instance_;
class MessageReceivedReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageReceivedReq>
      _instance;
} _MessageReceivedReq_default_instance_;
class MessageReadReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageReadReq>
      _instance;
} _MessageReadReq_default_instance_;
class DeleteMessageReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteMessageReq>
      _instance;
} _DeleteMessageReq_default_instance_;
class ClearChatReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClearChatReq>
      _instance;
} _ClearChatReq_default_instance_;
class DeleteChatReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteChatReq>
      _instance;
} _DeleteChatReq_default_instance_;
class MessageNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageNotify>
      _instance;
} _MessageNotify_default_instance_;
class MessageContentChangedNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageContentChangedNotify>
      _instance;
} _MessageContentChangedNotify_default_instance_;
class MessageDateChangedNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageDateChangedNotify>
      _instance;
} _MessageDateChangedNotify_default_instance_;
class MessageSentNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageSentNotify>
      _instance;
} _MessageSentNotify_default_instance_;
class MessageReceivedNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageReceivedNotify>
      _instance;
} _MessageReceivedNotify_default_instance_;
class MessageReadNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageReadNotify>
      _instance;
} _MessageReadNotify_default_instance_;
class MessageReadByMeNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageReadByMeNotify>
      _instance;
} _MessageReadByMeNotify_default_instance_;
class MessageDeleteNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageDeleteNotify>
      _instance;
} _MessageDeleteNotify_default_instance_;
class ChatClearNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChatClearNotify>
      _instance;
} _ChatClearNotify_default_instance_;
class ChatDeleteNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChatDeleteNotify>
      _instance;
} _ChatDeleteNotify_default_instance_;
class DialogShortDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DialogShort>
      _instance;
} _DialogShort_default_instance_;
class DialogGroupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DialogGroup>
      _instance;
} _DialogGroup_default_instance_;
class ChatGroupsChangedNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChatGroupsChangedNotify>
      _instance;
} _ChatGroupsChangedNotify_default_instance_;
class LoadHistoryReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoadHistoryReq>
      _instance;
} _LoadHistoryReq_default_instance_;
class LoadHistoryRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoadHistoryRsp>
      _instance;
} _LoadHistoryRsp_default_instance_;
}  // namespace zproto
namespace protobuf_messaging_2eproto {
void InitDefaultsSendMessageReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_peers_2eproto::InitDefaultsOutPeer();
  protobuf_messaging_5fbase_2eproto::InitDefaultsInstantMessage();
  {
    void* ptr = &::zproto::_SendMessageReq_default_instance_;
    new (ptr) ::zproto::SendMessageReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::SendMessageReq::InitAsDefaultInstance();
}

void InitDefaultsSendMessageReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSendMessageReqImpl);
}

void InitDefaultsMessageReceivedReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_peers_2eproto::InitDefaultsOutPeer();
  {
    void* ptr = &::zproto::_MessageReceivedReq_default_instance_;
    new (ptr) ::zproto::MessageReceivedReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::MessageReceivedReq::InitAsDefaultInstance();
}

void InitDefaultsMessageReceivedReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMessageReceivedReqImpl);
}

void InitDefaultsMessageReadReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_peers_2eproto::InitDefaultsOutPeer();
  {
    void* ptr = &::zproto::_MessageReadReq_default_instance_;
    new (ptr) ::zproto::MessageReadReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::MessageReadReq::InitAsDefaultInstance();
}

void InitDefaultsMessageReadReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMessageReadReqImpl);
}

void InitDefaultsDeleteMessageReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_peers_2eproto::InitDefaultsOutPeer();
  {
    void* ptr = &::zproto::_DeleteMessageReq_default_instance_;
    new (ptr) ::zproto::DeleteMessageReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::DeleteMessageReq::InitAsDefaultInstance();
}

void InitDefaultsDeleteMessageReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDeleteMessageReqImpl);
}

void InitDefaultsClearChatReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_peers_2eproto::InitDefaultsOutPeer();
  {
    void* ptr = &::zproto::_ClearChatReq_default_instance_;
    new (ptr) ::zproto::ClearChatReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::ClearChatReq::InitAsDefaultInstance();
}

void InitDefaultsClearChatReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsClearChatReqImpl);
}

void InitDefaultsDeleteChatReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_peers_2eproto::InitDefaultsOutPeer();
  {
    void* ptr = &::zproto::_DeleteChatReq_default_instance_;
    new (ptr) ::zproto::DeleteChatReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::DeleteChatReq::InitAsDefaultInstance();
}

void InitDefaultsDeleteChatReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDeleteChatReqImpl);
}

void InitDefaultsMessageNotifyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_peers_2eproto::InitDefaultsPeer();
  protobuf_messaging_5fbase_2eproto::InitDefaultsInstantMessage();
  {
    void* ptr = &::zproto::_MessageNotify_default_instance_;
    new (ptr) ::zproto::MessageNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::MessageNotify::InitAsDefaultInstance();
}

void InitDefaultsMessageNotify() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMessageNotifyImpl);
}

void InitDefaultsMessageContentChangedNotifyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_peers_2eproto::InitDefaultsPeer();
  protobuf_messaging_5fbase_2eproto::InitDefaultsInstantMessage();
  {
    void* ptr = &::zproto::_MessageContentChangedNotify_default_instance_;
    new (ptr) ::zproto::MessageContentChangedNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::MessageContentChangedNotify::InitAsDefaultInstance();
}

void InitDefaultsMessageContentChangedNotify() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMessageContentChangedNotifyImpl);
}

void InitDefaultsMessageDateChangedNotifyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_peers_2eproto::InitDefaultsPeer();
  {
    void* ptr = &::zproto::_MessageDateChangedNotify_default_instance_;
    new (ptr) ::zproto::MessageDateChangedNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::MessageDateChangedNotify::InitAsDefaultInstance();
}

void InitDefaultsMessageDateChangedNotify() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMessageDateChangedNotifyImpl);
}

void InitDefaultsMessageSentNotifyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_peers_2eproto::InitDefaultsPeer();
  {
    void* ptr = &::zproto::_MessageSentNotify_default_instance_;
    new (ptr) ::zproto::MessageSentNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::MessageSentNotify::InitAsDefaultInstance();
}

void InitDefaultsMessageSentNotify() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMessageSentNotifyImpl);
}

void InitDefaultsMessageReceivedNotifyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_peers_2eproto::InitDefaultsPeer();
  {
    void* ptr = &::zproto::_MessageReceivedNotify_default_instance_;
    new (ptr) ::zproto::MessageReceivedNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::MessageReceivedNotify::InitAsDefaultInstance();
}

void InitDefaultsMessageReceivedNotify() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMessageReceivedNotifyImpl);
}

void InitDefaultsMessageReadNotifyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_peers_2eproto::InitDefaultsPeer();
  {
    void* ptr = &::zproto::_MessageReadNotify_default_instance_;
    new (ptr) ::zproto::MessageReadNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::MessageReadNotify::InitAsDefaultInstance();
}

void InitDefaultsMessageReadNotify() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMessageReadNotifyImpl);
}

void InitDefaultsMessageReadByMeNotifyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_peers_2eproto::InitDefaultsPeer();
  {
    void* ptr = &::zproto::_MessageReadByMeNotify_default_instance_;
    new (ptr) ::zproto::MessageReadByMeNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::MessageReadByMeNotify::InitAsDefaultInstance();
}

void InitDefaultsMessageReadByMeNotify() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMessageReadByMeNotifyImpl);
}

void InitDefaultsMessageDeleteNotifyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_peers_2eproto::InitDefaultsPeer();
  {
    void* ptr = &::zproto::_MessageDeleteNotify_default_instance_;
    new (ptr) ::zproto::MessageDeleteNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::MessageDeleteNotify::InitAsDefaultInstance();
}

void InitDefaultsMessageDeleteNotify() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMessageDeleteNotifyImpl);
}

void InitDefaultsChatClearNotifyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_peers_2eproto::InitDefaultsPeer();
  {
    void* ptr = &::zproto::_ChatClearNotify_default_instance_;
    new (ptr) ::zproto::ChatClearNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::ChatClearNotify::InitAsDefaultInstance();
}

void InitDefaultsChatClearNotify() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsChatClearNotifyImpl);
}

void InitDefaultsChatDeleteNotifyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_peers_2eproto::InitDefaultsPeer();
  {
    void* ptr = &::zproto::_ChatDeleteNotify_default_instance_;
    new (ptr) ::zproto::ChatDeleteNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::ChatDeleteNotify::InitAsDefaultInstance();
}

void InitDefaultsChatDeleteNotify() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsChatDeleteNotifyImpl);
}

void InitDefaultsDialogShortImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_peers_2eproto::InitDefaultsPeer();
  {
    void* ptr = &::zproto::_DialogShort_default_instance_;
    new (ptr) ::zproto::DialogShort();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::DialogShort::InitAsDefaultInstance();
}

void InitDefaultsDialogShort() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDialogShortImpl);
}

void InitDefaultsDialogGroupImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2eproto::InitDefaultsDialogShort();
  {
    void* ptr = &::zproto::_DialogGroup_default_instance_;
    new (ptr) ::zproto::DialogGroup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::DialogGroup::InitAsDefaultInstance();
}

void InitDefaultsDialogGroup() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDialogGroupImpl);
}

void InitDefaultsChatGroupsChangedNotifyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2eproto::InitDefaultsDialogGroup();
  {
    void* ptr = &::zproto::_ChatGroupsChangedNotify_default_instance_;
    new (ptr) ::zproto::ChatGroupsChangedNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::ChatGroupsChangedNotify::InitAsDefaultInstance();
}

void InitDefaultsChatGroupsChangedNotify() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsChatGroupsChangedNotifyImpl);
}

void InitDefaultsLoadHistoryReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_peers_2eproto::InitDefaultsOutPeer();
  {
    void* ptr = &::zproto::_LoadHistoryReq_default_instance_;
    new (ptr) ::zproto::LoadHistoryReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::LoadHistoryReq::InitAsDefaultInstance();
}

void InitDefaultsLoadHistoryReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLoadHistoryReqImpl);
}

void InitDefaultsLoadHistoryRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_5fbase_2eproto::InitDefaultsMessageContainer();
  protobuf_users_2eproto::InitDefaultsUser();
  protobuf_peers_2eproto::InitDefaultsUserOutPeer();
  protobuf_group_5fbase_2eproto::InitDefaultsGroup();
  protobuf_peers_2eproto::InitDefaultsGroupOutPeer();
  {
    void* ptr = &::zproto::_LoadHistoryRsp_default_instance_;
    new (ptr) ::zproto::LoadHistoryRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::LoadHistoryRsp::InitAsDefaultInstance();
}

void InitDefaultsLoadHistoryRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLoadHistoryRspImpl);
}

::google::protobuf::Metadata file_level_metadata[21];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::SendMessageReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::SendMessageReq, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::SendMessageReq, rid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::SendMessageReq, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::SendMessageReq, passthrough_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageReceivedReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageReceivedReq, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageReceivedReq, date_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageReadReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageReadReq, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageReadReq, date_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::DeleteMessageReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::DeleteMessageReq, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::DeleteMessageReq, rids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::ClearChatReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::ClearChatReq, peer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::DeleteChatReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::DeleteChatReq, peer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageNotify, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageNotify, sender_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageNotify, date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageNotify, rid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageNotify, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageContentChangedNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageContentChangedNotify, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageContentChangedNotify, rid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageContentChangedNotify, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageDateChangedNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageDateChangedNotify, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageDateChangedNotify, rid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageDateChangedNotify, date_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageSentNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageSentNotify, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageSentNotify, rid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageSentNotify, date_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageReceivedNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageReceivedNotify, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageReceivedNotify, start_date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageReceivedNotify, received_date_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageReadNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageReadNotify, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageReadNotify, start_date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageReadNotify, read_date_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageReadByMeNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageReadByMeNotify, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageReadByMeNotify, start_date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageReadByMeNotify, unread_counter_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageDeleteNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageDeleteNotify, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageDeleteNotify, rids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::ChatClearNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::ChatClearNotify, peer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::ChatDeleteNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::ChatDeleteNotify, peer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::DialogShort, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::DialogShort, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::DialogShort, counter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::DialogShort, date_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::DialogGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::DialogGroup, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::DialogGroup, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::DialogGroup, dialogs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::ChatGroupsChangedNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::ChatGroupsChangedNotify, dialogs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::LoadHistoryReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::LoadHistoryReq, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::LoadHistoryReq, date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::LoadHistoryReq, load_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::LoadHistoryReq, limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::LoadHistoryReq, optimizations_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::LoadHistoryRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::LoadHistoryRsp, history_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::LoadHistoryRsp, users_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::LoadHistoryRsp, user_peers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::LoadHistoryRsp, groups_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::LoadHistoryRsp, group_peers_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::zproto::SendMessageReq)},
  { 9, -1, sizeof(::zproto::MessageReceivedReq)},
  { 16, -1, sizeof(::zproto::MessageReadReq)},
  { 23, -1, sizeof(::zproto::DeleteMessageReq)},
  { 30, -1, sizeof(::zproto::ClearChatReq)},
  { 36, -1, sizeof(::zproto::DeleteChatReq)},
  { 42, -1, sizeof(::zproto::MessageNotify)},
  { 52, -1, sizeof(::zproto::MessageContentChangedNotify)},
  { 60, -1, sizeof(::zproto::MessageDateChangedNotify)},
  { 68, -1, sizeof(::zproto::MessageSentNotify)},
  { 76, -1, sizeof(::zproto::MessageReceivedNotify)},
  { 84, -1, sizeof(::zproto::MessageReadNotify)},
  { 92, -1, sizeof(::zproto::MessageReadByMeNotify)},
  { 100, -1, sizeof(::zproto::MessageDeleteNotify)},
  { 107, -1, sizeof(::zproto::ChatClearNotify)},
  { 113, -1, sizeof(::zproto::ChatDeleteNotify)},
  { 119, -1, sizeof(::zproto::DialogShort)},
  { 127, -1, sizeof(::zproto::DialogGroup)},
  { 135, -1, sizeof(::zproto::ChatGroupsChangedNotify)},
  { 141, -1, sizeof(::zproto::LoadHistoryReq)},
  { 151, -1, sizeof(::zproto::LoadHistoryRsp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_SendMessageReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_MessageReceivedReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_MessageReadReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_DeleteMessageReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_ClearChatReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_DeleteChatReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_MessageNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_MessageContentChangedNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_MessageDateChangedNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_MessageSentNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_MessageReceivedNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_MessageReadNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_MessageReadByMeNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_MessageDeleteNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_ChatClearNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_ChatDeleteNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_DialogShort_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_DialogGroup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_ChatGroupsChangedNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_LoadHistoryReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_LoadHistoryRsp_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "messaging.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 21);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017messaging.proto\022\006zproto\032\nmisc.proto\032\013p"
      "eers.proto\032\013users.proto\032\020group_base.prot"
      "o\032\024messaging_base.proto\"\177\n\016SendMessageRe"
      "q\022\035\n\004peer\030\001 \001(\0132\017.zproto.OutPeer\022\013\n\003rid\030"
      "\002 \001(\003\022\'\n\007message\030\003 \001(\0132\026.zproto.InstantM"
      "essage\022\030\n\020passthrough_data\030\004 \001(\014\"A\n\022Mess"
      "ageReceivedReq\022\035\n\004peer\030\001 \001(\0132\017.zproto.Ou"
      "tPeer\022\014\n\004date\030\003 \001(\003\"=\n\016MessageReadReq\022\035\n"
      "\004peer\030\001 \001(\0132\017.zproto.OutPeer\022\014\n\004date\030\003 \001"
      "(\003\"\?\n\020DeleteMessageReq\022\035\n\004peer\030\001 \001(\0132\017.z"
      "proto.OutPeer\022\014\n\004rids\030\003 \003(\003\"-\n\014ClearChat"
      "Req\022\035\n\004peer\030\001 \001(\0132\017.zproto.OutPeer\".\n\rDe"
      "leteChatReq\022\035\n\004peer\030\001 \001(\0132\017.zproto.OutPe"
      "er\"\203\001\n\rMessageNotify\022\032\n\004peer\030\001 \001(\0132\014.zpr"
      "oto.Peer\022\022\n\nsender_uid\030\002 \001(\t\022\014\n\004date\030\003 \001"
      "(\003\022\013\n\003rid\030\004 \001(\003\022\'\n\007message\030\005 \001(\0132\026.zprot"
      "o.InstantMessage\"o\n\033MessageContentChange"
      "dNotify\022\032\n\004peer\030\001 \001(\0132\014.zproto.Peer\022\013\n\003r"
      "id\030\002 \001(\003\022\'\n\007message\030\003 \001(\0132\026.zproto.Insta"
      "ntMessage\"Q\n\030MessageDateChangedNotify\022\032\n"
      "\004peer\030\001 \001(\0132\014.zproto.Peer\022\013\n\003rid\030\002 \001(\003\022\014"
      "\n\004date\030\003 \001(\003\"J\n\021MessageSentNotify\022\032\n\004pee"
      "r\030\001 \001(\0132\014.zproto.Peer\022\013\n\003rid\030\002 \001(\003\022\014\n\004da"
      "te\030\003 \001(\003\"^\n\025MessageReceivedNotify\022\032\n\004pee"
      "r\030\001 \001(\0132\014.zproto.Peer\022\022\n\nstart_date\030\002 \001("
      "\003\022\025\n\rreceived_date\030\003 \001(\003\"V\n\021MessageReadN"
      "otify\022\032\n\004peer\030\001 \001(\0132\014.zproto.Peer\022\022\n\nsta"
      "rt_date\030\002 \001(\003\022\021\n\tread_date\030\003 \001(\003\"_\n\025Mess"
      "ageReadByMeNotify\022\032\n\004peer\030\001 \001(\0132\014.zproto"
      ".Peer\022\022\n\nstart_date\030\002 \001(\003\022\026\n\016unread_coun"
      "ter\030\003 \001(\005\"\?\n\023MessageDeleteNotify\022\032\n\004peer"
      "\030\001 \001(\0132\014.zproto.Peer\022\014\n\004rids\030\002 \003(\003\"-\n\017Ch"
      "atClearNotify\022\032\n\004peer\030\001 \001(\0132\014.zproto.Pee"
      "r\".\n\020ChatDeleteNotify\022\032\n\004peer\030\001 \001(\0132\014.zp"
      "roto.Peer\"H\n\013DialogShort\022\032\n\004peer\030\001 \001(\0132\014"
      ".zproto.Peer\022\017\n\007counter\030\002 \001(\005\022\014\n\004date\030\004 "
      "\001(\003\"O\n\013DialogGroup\022\r\n\005title\030\001 \001(\t\022\013\n\003key"
      "\030\002 \001(\t\022$\n\007dialogs\030\003 \003(\0132\023.zproto.DialogS"
      "hort\"\?\n\027ChatGroupsChangedNotify\022$\n\007dialo"
      "gs\030\001 \003(\0132\023.zproto.DialogGroup\"\250\001\n\016LoadHi"
      "storyReq\022\035\n\004peer\030\001 \001(\0132\017.zproto.OutPeer\022"
      "\014\n\004date\030\003 \001(\003\022\'\n\tload_mode\030\005 \001(\0162\024.zprot"
      "o.ListLoadMode\022\r\n\005limit\030\004 \001(\005\0221\n\roptimiz"
      "ations\030\006 \003(\0162\032.zproto.UpdateOptimization"
      "\"\313\001\n\016LoadHistoryRsp\022)\n\007history\030\001 \003(\0132\030.z"
      "proto.MessageContainer\022\033\n\005users\030\002 \003(\0132\014."
      "zproto.User\022\'\n\nuser_peers\030\004 \003(\0132\023.zproto"
      ".UserOutPeer\022\035\n\006groups\030\005 \003(\0132\r.zproto.Gr"
      "oup\022)\n\013group_peers\030\006 \003(\0132\024.zproto.GroupO"
      "utPeerB,\n\027com.zchat.engine.zprotoB\017ZProt"
      "oMessagingH\002b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2020);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "messaging.proto", &protobuf_RegisterTypes);
  ::protobuf_misc_2eproto::AddDescriptors();
  ::protobuf_peers_2eproto::AddDescriptors();
  ::protobuf_users_2eproto::AddDescriptors();
  ::protobuf_group_5fbase_2eproto::AddDescriptors();
  ::protobuf_messaging_5fbase_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_messaging_2eproto
namespace zproto {

// ===================================================================

void SendMessageReq::InitAsDefaultInstance() {
  ::zproto::_SendMessageReq_default_instance_._instance.get_mutable()->peer_ = const_cast< ::zproto::OutPeer*>(
      ::zproto::OutPeer::internal_default_instance());
  ::zproto::_SendMessageReq_default_instance_._instance.get_mutable()->message_ = const_cast< ::zproto::InstantMessage*>(
      ::zproto::InstantMessage::internal_default_instance());
}
void SendMessageReq::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) {
    delete peer_;
  }
  peer_ = NULL;
}
void SendMessageReq::clear_message() {
  if (GetArenaNoVirtual() == NULL && message_ != NULL) {
    delete message_;
  }
  message_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendMessageReq::kPeerFieldNumber;
const int SendMessageReq::kRidFieldNumber;
const int SendMessageReq::kMessageFieldNumber;
const int SendMessageReq::kPassthroughDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendMessageReq::SendMessageReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2eproto::InitDefaultsSendMessageReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.SendMessageReq)
}
SendMessageReq::SendMessageReq(const SendMessageReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  passthrough_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.passthrough_data().size() > 0) {
    passthrough_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passthrough_data_);
  }
  if (from.has_peer()) {
    peer_ = new ::zproto::OutPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  if (from.has_message()) {
    message_ = new ::zproto::InstantMessage(*from.message_);
  } else {
    message_ = NULL;
  }
  rid_ = from.rid_;
  // @@protoc_insertion_point(copy_constructor:zproto.SendMessageReq)
}

void SendMessageReq::SharedCtor() {
  passthrough_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rid_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(rid_));
  _cached_size_ = 0;
}

SendMessageReq::~SendMessageReq() {
  // @@protoc_insertion_point(destructor:zproto.SendMessageReq)
  SharedDtor();
}

void SendMessageReq::SharedDtor() {
  passthrough_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete peer_;
  if (this != internal_default_instance()) delete message_;
}

void SendMessageReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendMessageReq::descriptor() {
  ::protobuf_messaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendMessageReq& SendMessageReq::default_instance() {
  ::protobuf_messaging_2eproto::InitDefaultsSendMessageReq();
  return *internal_default_instance();
}

SendMessageReq* SendMessageReq::New(::google::protobuf::Arena* arena) const {
  SendMessageReq* n = new SendMessageReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SendMessageReq::Swap(SendMessageReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendMessageReq::InternalSwap(SendMessageReq* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata SendMessageReq::GetMetadata() const {
  protobuf_messaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MessageReceivedReq::InitAsDefaultInstance() {
  ::zproto::_MessageReceivedReq_default_instance_._instance.get_mutable()->peer_ = const_cast< ::zproto::OutPeer*>(
      ::zproto::OutPeer::internal_default_instance());
}
void MessageReceivedReq::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) {
    delete peer_;
  }
  peer_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageReceivedReq::kPeerFieldNumber;
const int MessageReceivedReq::kDateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageReceivedReq::MessageReceivedReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2eproto::InitDefaultsMessageReceivedReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.MessageReceivedReq)
}
MessageReceivedReq::MessageReceivedReq(const MessageReceivedReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::zproto::OutPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  date_ = from.date_;
  // @@protoc_insertion_point(copy_constructor:zproto.MessageReceivedReq)
}

void MessageReceivedReq::SharedCtor() {
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&date_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(date_));
  _cached_size_ = 0;
}

MessageReceivedReq::~MessageReceivedReq() {
  // @@protoc_insertion_point(destructor:zproto.MessageReceivedReq)
  SharedDtor();
}

void MessageReceivedReq::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void MessageReceivedReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageReceivedReq::descriptor() {
  ::protobuf_messaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageReceivedReq& MessageReceivedReq::default_instance() {
  ::protobuf_messaging_2eproto::InitDefaultsMessageReceivedReq();
  return *internal_default_instance();
}

MessageReceivedReq* MessageReceivedReq::New(::google::protobuf::Arena* arena) const {
  MessageReceivedReq* n = new MessageReceivedReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageReceivedReq::Swap(MessageReceivedReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageReceivedReq::InternalSwap(MessageReceivedReq* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata MessageReceivedReq::GetMetadata() const {
  protobuf_messaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MessageReadReq::InitAsDefaultInstance() {
  ::zproto::_MessageReadReq_default_instance_._instance.get_mutable()->peer_ = const_cast< ::zproto::OutPeer*>(
      ::zproto::OutPeer::internal_default_instance());
}
void MessageReadReq::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) {
    delete peer_;
  }
  peer_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageReadReq::kPeerFieldNumber;
const int MessageReadReq::kDateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageReadReq::MessageReadReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2eproto::InitDefaultsMessageReadReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.MessageReadReq)
}
MessageReadReq::MessageReadReq(const MessageReadReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::zproto::OutPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  date_ = from.date_;
  // @@protoc_insertion_point(copy_constructor:zproto.MessageReadReq)
}

void MessageReadReq::SharedCtor() {
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&date_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(date_));
  _cached_size_ = 0;
}

MessageReadReq::~MessageReadReq() {
  // @@protoc_insertion_point(destructor:zproto.MessageReadReq)
  SharedDtor();
}

void MessageReadReq::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void MessageReadReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageReadReq::descriptor() {
  ::protobuf_messaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageReadReq& MessageReadReq::default_instance() {
  ::protobuf_messaging_2eproto::InitDefaultsMessageReadReq();
  return *internal_default_instance();
}

MessageReadReq* MessageReadReq::New(::google::protobuf::Arena* arena) const {
  MessageReadReq* n = new MessageReadReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageReadReq::Swap(MessageReadReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageReadReq::InternalSwap(MessageReadReq* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata MessageReadReq::GetMetadata() const {
  protobuf_messaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteMessageReq::InitAsDefaultInstance() {
  ::zproto::_DeleteMessageReq_default_instance_._instance.get_mutable()->peer_ = const_cast< ::zproto::OutPeer*>(
      ::zproto::OutPeer::internal_default_instance());
}
void DeleteMessageReq::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) {
    delete peer_;
  }
  peer_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteMessageReq::kPeerFieldNumber;
const int DeleteMessageReq::kRidsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteMessageReq::DeleteMessageReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2eproto::InitDefaultsDeleteMessageReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.DeleteMessageReq)
}
DeleteMessageReq::DeleteMessageReq(const DeleteMessageReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      rids_(from.rids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::zproto::OutPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:zproto.DeleteMessageReq)
}

void DeleteMessageReq::SharedCtor() {
  peer_ = NULL;
  _cached_size_ = 0;
}

DeleteMessageReq::~DeleteMessageReq() {
  // @@protoc_insertion_point(destructor:zproto.DeleteMessageReq)
  SharedDtor();
}

void DeleteMessageReq::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void DeleteMessageReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteMessageReq::descriptor() {
  ::protobuf_messaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteMessageReq& DeleteMessageReq::default_instance() {
  ::protobuf_messaging_2eproto::InitDefaultsDeleteMessageReq();
  return *internal_default_instance();
}

DeleteMessageReq* DeleteMessageReq::New(::google::protobuf::Arena* arena) const {
  DeleteMessageReq* n = new DeleteMessageReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteMessageReq::Swap(DeleteMessageReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteMessageReq::InternalSwap(DeleteMessageReq* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata DeleteMessageReq::GetMetadata() const {
  protobuf_messaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClearChatReq::InitAsDefaultInstance() {
  ::zproto::_ClearChatReq_default_instance_._instance.get_mutable()->peer_ = const_cast< ::zproto::OutPeer*>(
      ::zproto::OutPeer::internal_default_instance());
}
void ClearChatReq::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) {
    delete peer_;
  }
  peer_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClearChatReq::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClearChatReq::ClearChatReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2eproto::InitDefaultsClearChatReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.ClearChatReq)
}
ClearChatReq::ClearChatReq(const ClearChatReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::zproto::OutPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:zproto.ClearChatReq)
}

void ClearChatReq::SharedCtor() {
  peer_ = NULL;
  _cached_size_ = 0;
}

ClearChatReq::~ClearChatReq() {
  // @@protoc_insertion_point(destructor:zproto.ClearChatReq)
  SharedDtor();
}

void ClearChatReq::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void ClearChatReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClearChatReq::descriptor() {
  ::protobuf_messaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClearChatReq& ClearChatReq::default_instance() {
  ::protobuf_messaging_2eproto::InitDefaultsClearChatReq();
  return *internal_default_instance();
}

ClearChatReq* ClearChatReq::New(::google::protobuf::Arena* arena) const {
  ClearChatReq* n = new ClearChatReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClearChatReq::Swap(ClearChatReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClearChatReq::InternalSwap(ClearChatReq* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata ClearChatReq::GetMetadata() const {
  protobuf_messaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteChatReq::InitAsDefaultInstance() {
  ::zproto::_DeleteChatReq_default_instance_._instance.get_mutable()->peer_ = const_cast< ::zproto::OutPeer*>(
      ::zproto::OutPeer::internal_default_instance());
}
void DeleteChatReq::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) {
    delete peer_;
  }
  peer_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteChatReq::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteChatReq::DeleteChatReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2eproto::InitDefaultsDeleteChatReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.DeleteChatReq)
}
DeleteChatReq::DeleteChatReq(const DeleteChatReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::zproto::OutPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:zproto.DeleteChatReq)
}

void DeleteChatReq::SharedCtor() {
  peer_ = NULL;
  _cached_size_ = 0;
}

DeleteChatReq::~DeleteChatReq() {
  // @@protoc_insertion_point(destructor:zproto.DeleteChatReq)
  SharedDtor();
}

void DeleteChatReq::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void DeleteChatReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteChatReq::descriptor() {
  ::protobuf_messaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteChatReq& DeleteChatReq::default_instance() {
  ::protobuf_messaging_2eproto::InitDefaultsDeleteChatReq();
  return *internal_default_instance();
}

DeleteChatReq* DeleteChatReq::New(::google::protobuf::Arena* arena) const {
  DeleteChatReq* n = new DeleteChatReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteChatReq::Swap(DeleteChatReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteChatReq::InternalSwap(DeleteChatReq* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata DeleteChatReq::GetMetadata() const {
  protobuf_messaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MessageNotify::InitAsDefaultInstance() {
  ::zproto::_MessageNotify_default_instance_._instance.get_mutable()->peer_ = const_cast< ::zproto::Peer*>(
      ::zproto::Peer::internal_default_instance());
  ::zproto::_MessageNotify_default_instance_._instance.get_mutable()->message_ = const_cast< ::zproto::InstantMessage*>(
      ::zproto::InstantMessage::internal_default_instance());
}
void MessageNotify::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) {
    delete peer_;
  }
  peer_ = NULL;
}
void MessageNotify::clear_message() {
  if (GetArenaNoVirtual() == NULL && message_ != NULL) {
    delete message_;
  }
  message_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageNotify::kPeerFieldNumber;
const int MessageNotify::kSenderUidFieldNumber;
const int MessageNotify::kDateFieldNumber;
const int MessageNotify::kRidFieldNumber;
const int MessageNotify::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageNotify::MessageNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2eproto::InitDefaultsMessageNotify();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.MessageNotify)
}
MessageNotify::MessageNotify(const MessageNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sender_uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sender_uid().size() > 0) {
    sender_uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sender_uid_);
  }
  if (from.has_peer()) {
    peer_ = new ::zproto::Peer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  if (from.has_message()) {
    message_ = new ::zproto::InstantMessage(*from.message_);
  } else {
    message_ = NULL;
  }
  ::memcpy(&date_, &from.date_,
    static_cast<size_t>(reinterpret_cast<char*>(&rid_) -
    reinterpret_cast<char*>(&date_)) + sizeof(rid_));
  // @@protoc_insertion_point(copy_constructor:zproto.MessageNotify)
}

void MessageNotify::SharedCtor() {
  sender_uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rid_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(rid_));
  _cached_size_ = 0;
}

MessageNotify::~MessageNotify() {
  // @@protoc_insertion_point(destructor:zproto.MessageNotify)
  SharedDtor();
}

void MessageNotify::SharedDtor() {
  sender_uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete peer_;
  if (this != internal_default_instance()) delete message_;
}

void MessageNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageNotify::descriptor() {
  ::protobuf_messaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageNotify& MessageNotify::default_instance() {
  ::protobuf_messaging_2eproto::InitDefaultsMessageNotify();
  return *internal_default_instance();
}

MessageNotify* MessageNotify::New(::google::protobuf::Arena* arena) const {
  MessageNotify* n = new MessageNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageNotify::Swap(MessageNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageNotify::InternalSwap(MessageNotify* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata MessageNotify::GetMetadata() const {
  protobuf_messaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MessageContentChangedNotify::InitAsDefaultInstance() {
  ::zproto::_MessageContentChangedNotify_default_instance_._instance.get_mutable()->peer_ = const_cast< ::zproto::Peer*>(
      ::zproto::Peer::internal_default_instance());
  ::zproto::_MessageContentChangedNotify_default_instance_._instance.get_mutable()->message_ = const_cast< ::zproto::InstantMessage*>(
      ::zproto::InstantMessage::internal_default_instance());
}
void MessageContentChangedNotify::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) {
    delete peer_;
  }
  peer_ = NULL;
}
void MessageContentChangedNotify::clear_message() {
  if (GetArenaNoVirtual() == NULL && message_ != NULL) {
    delete message_;
  }
  message_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageContentChangedNotify::kPeerFieldNumber;
const int MessageContentChangedNotify::kRidFieldNumber;
const int MessageContentChangedNotify::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageContentChangedNotify::MessageContentChangedNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2eproto::InitDefaultsMessageContentChangedNotify();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.MessageContentChangedNotify)
}
MessageContentChangedNotify::MessageContentChangedNotify(const MessageContentChangedNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::zproto::Peer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  if (from.has_message()) {
    message_ = new ::zproto::InstantMessage(*from.message_);
  } else {
    message_ = NULL;
  }
  rid_ = from.rid_;
  // @@protoc_insertion_point(copy_constructor:zproto.MessageContentChangedNotify)
}

void MessageContentChangedNotify::SharedCtor() {
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rid_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(rid_));
  _cached_size_ = 0;
}

MessageContentChangedNotify::~MessageContentChangedNotify() {
  // @@protoc_insertion_point(destructor:zproto.MessageContentChangedNotify)
  SharedDtor();
}

void MessageContentChangedNotify::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
  if (this != internal_default_instance()) delete message_;
}

void MessageContentChangedNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageContentChangedNotify::descriptor() {
  ::protobuf_messaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageContentChangedNotify& MessageContentChangedNotify::default_instance() {
  ::protobuf_messaging_2eproto::InitDefaultsMessageContentChangedNotify();
  return *internal_default_instance();
}

MessageContentChangedNotify* MessageContentChangedNotify::New(::google::protobuf::Arena* arena) const {
  MessageContentChangedNotify* n = new MessageContentChangedNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageContentChangedNotify::Swap(MessageContentChangedNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageContentChangedNotify::InternalSwap(MessageContentChangedNotify* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata MessageContentChangedNotify::GetMetadata() const {
  protobuf_messaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MessageDateChangedNotify::InitAsDefaultInstance() {
  ::zproto::_MessageDateChangedNotify_default_instance_._instance.get_mutable()->peer_ = const_cast< ::zproto::Peer*>(
      ::zproto::Peer::internal_default_instance());
}
void MessageDateChangedNotify::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) {
    delete peer_;
  }
  peer_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageDateChangedNotify::kPeerFieldNumber;
const int MessageDateChangedNotify::kRidFieldNumber;
const int MessageDateChangedNotify::kDateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageDateChangedNotify::MessageDateChangedNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2eproto::InitDefaultsMessageDateChangedNotify();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.MessageDateChangedNotify)
}
MessageDateChangedNotify::MessageDateChangedNotify(const MessageDateChangedNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::zproto::Peer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  ::memcpy(&rid_, &from.rid_,
    static_cast<size_t>(reinterpret_cast<char*>(&date_) -
    reinterpret_cast<char*>(&rid_)) + sizeof(date_));
  // @@protoc_insertion_point(copy_constructor:zproto.MessageDateChangedNotify)
}

void MessageDateChangedNotify::SharedCtor() {
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&date_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(date_));
  _cached_size_ = 0;
}

MessageDateChangedNotify::~MessageDateChangedNotify() {
  // @@protoc_insertion_point(destructor:zproto.MessageDateChangedNotify)
  SharedDtor();
}

void MessageDateChangedNotify::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void MessageDateChangedNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageDateChangedNotify::descriptor() {
  ::protobuf_messaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageDateChangedNotify& MessageDateChangedNotify::default_instance() {
  ::protobuf_messaging_2eproto::InitDefaultsMessageDateChangedNotify();
  return *internal_default_instance();
}

MessageDateChangedNotify* MessageDateChangedNotify::New(::google::protobuf::Arena* arena) const {
  MessageDateChangedNotify* n = new MessageDateChangedNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageDateChangedNotify::Swap(MessageDateChangedNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageDateChangedNotify::InternalSwap(MessageDateChangedNotify* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata MessageDateChangedNotify::GetMetadata() const {
  protobuf_messaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MessageSentNotify::InitAsDefaultInstance() {
  ::zproto::_MessageSentNotify_default_instance_._instance.get_mutable()->peer_ = const_cast< ::zproto::Peer*>(
      ::zproto::Peer::internal_default_instance());
}
void MessageSentNotify::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) {
    delete peer_;
  }
  peer_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageSentNotify::kPeerFieldNumber;
const int MessageSentNotify::kRidFieldNumber;
const int MessageSentNotify::kDateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageSentNotify::MessageSentNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2eproto::InitDefaultsMessageSentNotify();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.MessageSentNotify)
}
MessageSentNotify::MessageSentNotify(const MessageSentNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::zproto::Peer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  ::memcpy(&rid_, &from.rid_,
    static_cast<size_t>(reinterpret_cast<char*>(&date_) -
    reinterpret_cast<char*>(&rid_)) + sizeof(date_));
  // @@protoc_insertion_point(copy_constructor:zproto.MessageSentNotify)
}

void MessageSentNotify::SharedCtor() {
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&date_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(date_));
  _cached_size_ = 0;
}

MessageSentNotify::~MessageSentNotify() {
  // @@protoc_insertion_point(destructor:zproto.MessageSentNotify)
  SharedDtor();
}

void MessageSentNotify::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void MessageSentNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageSentNotify::descriptor() {
  ::protobuf_messaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageSentNotify& MessageSentNotify::default_instance() {
  ::protobuf_messaging_2eproto::InitDefaultsMessageSentNotify();
  return *internal_default_instance();
}

MessageSentNotify* MessageSentNotify::New(::google::protobuf::Arena* arena) const {
  MessageSentNotify* n = new MessageSentNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageSentNotify::Swap(MessageSentNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageSentNotify::InternalSwap(MessageSentNotify* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata MessageSentNotify::GetMetadata() const {
  protobuf_messaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MessageReceivedNotify::InitAsDefaultInstance() {
  ::zproto::_MessageReceivedNotify_default_instance_._instance.get_mutable()->peer_ = const_cast< ::zproto::Peer*>(
      ::zproto::Peer::internal_default_instance());
}
void MessageReceivedNotify::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) {
    delete peer_;
  }
  peer_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageReceivedNotify::kPeerFieldNumber;
const int MessageReceivedNotify::kStartDateFieldNumber;
const int MessageReceivedNotify::kReceivedDateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageReceivedNotify::MessageReceivedNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2eproto::InitDefaultsMessageReceivedNotify();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.MessageReceivedNotify)
}
MessageReceivedNotify::MessageReceivedNotify(const MessageReceivedNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::zproto::Peer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  ::memcpy(&start_date_, &from.start_date_,
    static_cast<size_t>(reinterpret_cast<char*>(&received_date_) -
    reinterpret_cast<char*>(&start_date_)) + sizeof(received_date_));
  // @@protoc_insertion_point(copy_constructor:zproto.MessageReceivedNotify)
}

void MessageReceivedNotify::SharedCtor() {
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&received_date_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(received_date_));
  _cached_size_ = 0;
}

MessageReceivedNotify::~MessageReceivedNotify() {
  // @@protoc_insertion_point(destructor:zproto.MessageReceivedNotify)
  SharedDtor();
}

void MessageReceivedNotify::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void MessageReceivedNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageReceivedNotify::descriptor() {
  ::protobuf_messaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageReceivedNotify& MessageReceivedNotify::default_instance() {
  ::protobuf_messaging_2eproto::InitDefaultsMessageReceivedNotify();
  return *internal_default_instance();
}

MessageReceivedNotify* MessageReceivedNotify::New(::google::protobuf::Arena* arena) const {
  MessageReceivedNotify* n = new MessageReceivedNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageReceivedNotify::Swap(MessageReceivedNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageReceivedNotify::InternalSwap(MessageReceivedNotify* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata MessageReceivedNotify::GetMetadata() const {
  protobuf_messaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MessageReadNotify::InitAsDefaultInstance() {
  ::zproto::_MessageReadNotify_default_instance_._instance.get_mutable()->peer_ = const_cast< ::zproto::Peer*>(
      ::zproto::Peer::internal_default_instance());
}
void MessageReadNotify::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) {
    delete peer_;
  }
  peer_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageReadNotify::kPeerFieldNumber;
const int MessageReadNotify::kStartDateFieldNumber;
const int MessageReadNotify::kReadDateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageReadNotify::MessageReadNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2eproto::InitDefaultsMessageReadNotify();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.MessageReadNotify)
}
MessageReadNotify::MessageReadNotify(const MessageReadNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::zproto::Peer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  ::memcpy(&start_date_, &from.start_date_,
    static_cast<size_t>(reinterpret_cast<char*>(&read_date_) -
    reinterpret_cast<char*>(&start_date_)) + sizeof(read_date_));
  // @@protoc_insertion_point(copy_constructor:zproto.MessageReadNotify)
}

void MessageReadNotify::SharedCtor() {
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&read_date_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(read_date_));
  _cached_size_ = 0;
}

MessageReadNotify::~MessageReadNotify() {
  // @@protoc_insertion_point(destructor:zproto.MessageReadNotify)
  SharedDtor();
}

void MessageReadNotify::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void MessageReadNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageReadNotify::descriptor() {
  ::protobuf_messaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageReadNotify& MessageReadNotify::default_instance() {
  ::protobuf_messaging_2eproto::InitDefaultsMessageReadNotify();
  return *internal_default_instance();
}

MessageReadNotify* MessageReadNotify::New(::google::protobuf::Arena* arena) const {
  MessageReadNotify* n = new MessageReadNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageReadNotify::Swap(MessageReadNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageReadNotify::InternalSwap(MessageReadNotify* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata MessageReadNotify::GetMetadata() const {
  protobuf_messaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MessageReadByMeNotify::InitAsDefaultInstance() {
  ::zproto::_MessageReadByMeNotify_default_instance_._instance.get_mutable()->peer_ = const_cast< ::zproto::Peer*>(
      ::zproto::Peer::internal_default_instance());
}
void MessageReadByMeNotify::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) {
    delete peer_;
  }
  peer_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageReadByMeNotify::kPeerFieldNumber;
const int MessageReadByMeNotify::kStartDateFieldNumber;
const int MessageReadByMeNotify::kUnreadCounterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageReadByMeNotify::MessageReadByMeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2eproto::InitDefaultsMessageReadByMeNotify();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.MessageReadByMeNotify)
}
MessageReadByMeNotify::MessageReadByMeNotify(const MessageReadByMeNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::zproto::Peer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  ::memcpy(&start_date_, &from.start_date_,
    static_cast<size_t>(reinterpret_cast<char*>(&unread_counter_) -
    reinterpret_cast<char*>(&start_date_)) + sizeof(unread_counter_));
  // @@protoc_insertion_point(copy_constructor:zproto.MessageReadByMeNotify)
}

void MessageReadByMeNotify::SharedCtor() {
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unread_counter_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(unread_counter_));
  _cached_size_ = 0;
}

MessageReadByMeNotify::~MessageReadByMeNotify() {
  // @@protoc_insertion_point(destructor:zproto.MessageReadByMeNotify)
  SharedDtor();
}

void MessageReadByMeNotify::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void MessageReadByMeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageReadByMeNotify::descriptor() {
  ::protobuf_messaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageReadByMeNotify& MessageReadByMeNotify::default_instance() {
  ::protobuf_messaging_2eproto::InitDefaultsMessageReadByMeNotify();
  return *internal_default_instance();
}

MessageReadByMeNotify* MessageReadByMeNotify::New(::google::protobuf::Arena* arena) const {
  MessageReadByMeNotify* n = new MessageReadByMeNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageReadByMeNotify::Swap(MessageReadByMeNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageReadByMeNotify::InternalSwap(MessageReadByMeNotify* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata MessageReadByMeNotify::GetMetadata() const {
  protobuf_messaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MessageDeleteNotify::InitAsDefaultInstance() {
  ::zproto::_MessageDeleteNotify_default_instance_._instance.get_mutable()->peer_ = const_cast< ::zproto::Peer*>(
      ::zproto::Peer::internal_default_instance());
}
void MessageDeleteNotify::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) {
    delete peer_;
  }
  peer_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageDeleteNotify::kPeerFieldNumber;
const int MessageDeleteNotify::kRidsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageDeleteNotify::MessageDeleteNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2eproto::InitDefaultsMessageDeleteNotify();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.MessageDeleteNotify)
}
MessageDeleteNotify::MessageDeleteNotify(const MessageDeleteNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      rids_(from.rids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::zproto::Peer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:zproto.MessageDeleteNotify)
}

void MessageDeleteNotify::SharedCtor() {
  peer_ = NULL;
  _cached_size_ = 0;
}

MessageDeleteNotify::~MessageDeleteNotify() {
  // @@protoc_insertion_point(destructor:zproto.MessageDeleteNotify)
  SharedDtor();
}

void MessageDeleteNotify::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void MessageDeleteNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageDeleteNotify::descriptor() {
  ::protobuf_messaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageDeleteNotify& MessageDeleteNotify::default_instance() {
  ::protobuf_messaging_2eproto::InitDefaultsMessageDeleteNotify();
  return *internal_default_instance();
}

MessageDeleteNotify* MessageDeleteNotify::New(::google::protobuf::Arena* arena) const {
  MessageDeleteNotify* n = new MessageDeleteNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageDeleteNotify::Swap(MessageDeleteNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageDeleteNotify::InternalSwap(MessageDeleteNotify* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata MessageDeleteNotify::GetMetadata() const {
  protobuf_messaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChatClearNotify::InitAsDefaultInstance() {
  ::zproto::_ChatClearNotify_default_instance_._instance.get_mutable()->peer_ = const_cast< ::zproto::Peer*>(
      ::zproto::Peer::internal_default_instance());
}
void ChatClearNotify::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) {
    delete peer_;
  }
  peer_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatClearNotify::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatClearNotify::ChatClearNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2eproto::InitDefaultsChatClearNotify();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.ChatClearNotify)
}
ChatClearNotify::ChatClearNotify(const ChatClearNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::zproto::Peer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:zproto.ChatClearNotify)
}

void ChatClearNotify::SharedCtor() {
  peer_ = NULL;
  _cached_size_ = 0;
}

ChatClearNotify::~ChatClearNotify() {
  // @@protoc_insertion_point(destructor:zproto.ChatClearNotify)
  SharedDtor();
}

void ChatClearNotify::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void ChatClearNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatClearNotify::descriptor() {
  ::protobuf_messaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChatClearNotify& ChatClearNotify::default_instance() {
  ::protobuf_messaging_2eproto::InitDefaultsChatClearNotify();
  return *internal_default_instance();
}

ChatClearNotify* ChatClearNotify::New(::google::protobuf::Arena* arena) const {
  ChatClearNotify* n = new ChatClearNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatClearNotify::Swap(ChatClearNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatClearNotify::InternalSwap(ChatClearNotify* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata ChatClearNotify::GetMetadata() const {
  protobuf_messaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChatDeleteNotify::InitAsDefaultInstance() {
  ::zproto::_ChatDeleteNotify_default_instance_._instance.get_mutable()->peer_ = const_cast< ::zproto::Peer*>(
      ::zproto::Peer::internal_default_instance());
}
void ChatDeleteNotify::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) {
    delete peer_;
  }
  peer_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatDeleteNotify::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatDeleteNotify::ChatDeleteNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2eproto::InitDefaultsChatDeleteNotify();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.ChatDeleteNotify)
}
ChatDeleteNotify::ChatDeleteNotify(const ChatDeleteNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::zproto::Peer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:zproto.ChatDeleteNotify)
}

void ChatDeleteNotify::SharedCtor() {
  peer_ = NULL;
  _cached_size_ = 0;
}

ChatDeleteNotify::~ChatDeleteNotify() {
  // @@protoc_insertion_point(destructor:zproto.ChatDeleteNotify)
  SharedDtor();
}

void ChatDeleteNotify::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void ChatDeleteNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatDeleteNotify::descriptor() {
  ::protobuf_messaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChatDeleteNotify& ChatDeleteNotify::default_instance() {
  ::protobuf_messaging_2eproto::InitDefaultsChatDeleteNotify();
  return *internal_default_instance();
}

ChatDeleteNotify* ChatDeleteNotify::New(::google::protobuf::Arena* arena) const {
  ChatDeleteNotify* n = new ChatDeleteNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatDeleteNotify::Swap(ChatDeleteNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatDeleteNotify::InternalSwap(ChatDeleteNotify* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata ChatDeleteNotify::GetMetadata() const {
  protobuf_messaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DialogShort::InitAsDefaultInstance() {
  ::zproto::_DialogShort_default_instance_._instance.get_mutable()->peer_ = const_cast< ::zproto::Peer*>(
      ::zproto::Peer::internal_default_instance());
}
void DialogShort::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) {
    delete peer_;
  }
  peer_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DialogShort::kPeerFieldNumber;
const int DialogShort::kCounterFieldNumber;
const int DialogShort::kDateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DialogShort::DialogShort()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2eproto::InitDefaultsDialogShort();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.DialogShort)
}
DialogShort::DialogShort(const DialogShort& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::zproto::Peer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  ::memcpy(&date_, &from.date_,
    static_cast<size_t>(reinterpret_cast<char*>(&counter_) -
    reinterpret_cast<char*>(&date_)) + sizeof(counter_));
  // @@protoc_insertion_point(copy_constructor:zproto.DialogShort)
}

void DialogShort::SharedCtor() {
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&counter_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(counter_));
  _cached_size_ = 0;
}

DialogShort::~DialogShort() {
  // @@protoc_insertion_point(destructor:zproto.DialogShort)
  SharedDtor();
}

void DialogShort::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void DialogShort::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DialogShort::descriptor() {
  ::protobuf_messaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DialogShort& DialogShort::default_instance() {
  ::protobuf_messaging_2eproto::InitDefaultsDialogShort();
  return *internal_default_instance();
}

DialogShort* DialogShort::New(::google::protobuf::Arena* arena) const {
  DialogShort* n = new DialogShort;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DialogShort::Swap(DialogShort* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DialogShort::InternalSwap(DialogShort* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata DialogShort::GetMetadata() const {
  protobuf_messaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DialogGroup::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DialogGroup::kTitleFieldNumber;
const int DialogGroup::kKeyFieldNumber;
const int DialogGroup::kDialogsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DialogGroup::DialogGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2eproto::InitDefaultsDialogGroup();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.DialogGroup)
}
DialogGroup::DialogGroup(const DialogGroup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      dialogs_(from.dialogs_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  // @@protoc_insertion_point(copy_constructor:zproto.DialogGroup)
}

void DialogGroup::SharedCtor() {
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DialogGroup::~DialogGroup() {
  // @@protoc_insertion_point(destructor:zproto.DialogGroup)
  SharedDtor();
}

void DialogGroup::SharedDtor() {
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DialogGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DialogGroup::descriptor() {
  ::protobuf_messaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DialogGroup& DialogGroup::default_instance() {
  ::protobuf_messaging_2eproto::InitDefaultsDialogGroup();
  return *internal_default_instance();
}

DialogGroup* DialogGroup::New(::google::protobuf::Arena* arena) const {
  DialogGroup* n = new DialogGroup;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DialogGroup::Swap(DialogGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DialogGroup::InternalSwap(DialogGroup* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata DialogGroup::GetMetadata() const {
  protobuf_messaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChatGroupsChangedNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatGroupsChangedNotify::kDialogsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatGroupsChangedNotify::ChatGroupsChangedNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2eproto::InitDefaultsChatGroupsChangedNotify();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.ChatGroupsChangedNotify)
}
ChatGroupsChangedNotify::ChatGroupsChangedNotify(const ChatGroupsChangedNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      dialogs_(from.dialogs_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:zproto.ChatGroupsChangedNotify)
}

void ChatGroupsChangedNotify::SharedCtor() {
  _cached_size_ = 0;
}

ChatGroupsChangedNotify::~ChatGroupsChangedNotify() {
  // @@protoc_insertion_point(destructor:zproto.ChatGroupsChangedNotify)
  SharedDtor();
}

void ChatGroupsChangedNotify::SharedDtor() {
}

void ChatGroupsChangedNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatGroupsChangedNotify::descriptor() {
  ::protobuf_messaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChatGroupsChangedNotify& ChatGroupsChangedNotify::default_instance() {
  ::protobuf_messaging_2eproto::InitDefaultsChatGroupsChangedNotify();
  return *internal_default_instance();
}

ChatGroupsChangedNotify* ChatGroupsChangedNotify::New(::google::protobuf::Arena* arena) const {
  ChatGroupsChangedNotify* n = new ChatGroupsChangedNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatGroupsChangedNotify::Swap(ChatGroupsChangedNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatGroupsChangedNotify::InternalSwap(ChatGroupsChangedNotify* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata ChatGroupsChangedNotify::GetMetadata() const {
  protobuf_messaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoadHistoryReq::InitAsDefaultInstance() {
  ::zproto::_LoadHistoryReq_default_instance_._instance.get_mutable()->peer_ = const_cast< ::zproto::OutPeer*>(
      ::zproto::OutPeer::internal_default_instance());
}
void LoadHistoryReq::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) {
    delete peer_;
  }
  peer_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoadHistoryReq::kPeerFieldNumber;
const int LoadHistoryReq::kDateFieldNumber;
const int LoadHistoryReq::kLoadModeFieldNumber;
const int LoadHistoryReq::kLimitFieldNumber;
const int LoadHistoryReq::kOptimizationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoadHistoryReq::LoadHistoryReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2eproto::InitDefaultsLoadHistoryReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.LoadHistoryReq)
}
LoadHistoryReq::LoadHistoryReq(const LoadHistoryReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      optimizations_(from.optimizations_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::zproto::OutPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  ::memcpy(&date_, &from.date_,
    static_cast<size_t>(reinterpret_cast<char*>(&load_mode_) -
    reinterpret_cast<char*>(&date_)) + sizeof(load_mode_));
  // @@protoc_insertion_point(copy_constructor:zproto.LoadHistoryReq)
}

void LoadHistoryReq::SharedCtor() {
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&load_mode_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(load_mode_));
  _cached_size_ = 0;
}

LoadHistoryReq::~LoadHistoryReq() {
  // @@protoc_insertion_point(destructor:zproto.LoadHistoryReq)
  SharedDtor();
}

void LoadHistoryReq::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void LoadHistoryReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoadHistoryReq::descriptor() {
  ::protobuf_messaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoadHistoryReq& LoadHistoryReq::default_instance() {
  ::protobuf_messaging_2eproto::InitDefaultsLoadHistoryReq();
  return *internal_default_instance();
}

LoadHistoryReq* LoadHistoryReq::New(::google::protobuf::Arena* arena) const {
  LoadHistoryReq* n = new LoadHistoryReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoadHistoryReq::Swap(LoadHistoryReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoadHistoryReq::InternalSwap(LoadHistoryReq* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata LoadHistoryReq::GetMetadata() const {
  protobuf_messaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoadHistoryRsp::InitAsDefaultInstance() {
}
void LoadHistoryRsp::clear_history() {
  history_.Clear();
}
void LoadHistoryRsp::clear_users() {
  users_.Clear();
}
void LoadHistoryRsp::clear_user_peers() {
  user_peers_.Clear();
}
void LoadHistoryRsp::clear_groups() {
  groups_.Clear();
}
void LoadHistoryRsp::clear_group_peers() {
  group_peers_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoadHistoryRsp::kHistoryFieldNumber;
const int LoadHistoryRsp::kUsersFieldNumber;
const int LoadHistoryRsp::kUserPeersFieldNumber;
const int LoadHistoryRsp::kGroupsFieldNumber;
const int LoadHistoryRsp::kGroupPeersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoadHistoryRsp::LoadHistoryRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2eproto::InitDefaultsLoadHistoryRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.LoadHistoryRsp)
}
LoadHistoryRsp::LoadHistoryRsp(const LoadHistoryRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      history_(from.history_),
      users_(from.users_),
      user_peers_(from.user_peers_),
      groups_(from.groups_),
      group_peers_(from.group_peers_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:zproto.LoadHistoryRsp)
}

void LoadHistoryRsp::SharedCtor() {
  _cached_size_ = 0;
}

LoadHistoryRsp::~LoadHistoryRsp() {
  // @@protoc_insertion_point(destructor:zproto.LoadHistoryRsp)
  SharedDtor();
}

void LoadHistoryRsp::SharedDtor() {
}

void LoadHistoryRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoadHistoryRsp::descriptor() {
  ::protobuf_messaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoadHistoryRsp& LoadHistoryRsp::default_instance() {
  ::protobuf_messaging_2eproto::InitDefaultsLoadHistoryRsp();
  return *internal_default_instance();
}

LoadHistoryRsp* LoadHistoryRsp::New(::google::protobuf::Arena* arena) const {
  LoadHistoryRsp* n = new LoadHistoryRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoadHistoryRsp::Swap(LoadHistoryRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoadHistoryRsp::InternalSwap(LoadHistoryRsp* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata LoadHistoryRsp::GetMetadata() const {
  protobuf_messaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace zproto

// @@protoc_insertion_point(global_scope)
