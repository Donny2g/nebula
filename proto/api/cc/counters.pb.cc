// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: counters.proto

#include "counters.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace zproto {
class AppCountersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AppCounters>
      _instance;
} _AppCounters_default_instance_;
class CountersChangedNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CountersChangedNotify>
      _instance;
} _CountersChangedNotify_default_instance_;
}  // namespace zproto
namespace protobuf_counters_2eproto {
void InitDefaultsAppCountersImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::zproto::_AppCounters_default_instance_;
    new (ptr) ::zproto::AppCounters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::AppCounters::InitAsDefaultInstance();
}

void InitDefaultsAppCounters() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAppCountersImpl);
}

void InitDefaultsCountersChangedNotifyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_counters_2eproto::InitDefaultsAppCounters();
  {
    void* ptr = &::zproto::_CountersChangedNotify_default_instance_;
    new (ptr) ::zproto::CountersChangedNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::CountersChangedNotify::InitAsDefaultInstance();
}

void InitDefaultsCountersChangedNotify() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCountersChangedNotifyImpl);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::AppCounters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::AppCounters, global_counter_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::CountersChangedNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::CountersChangedNotify, counters_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::zproto::AppCounters)},
  { 6, -1, sizeof(::zproto::CountersChangedNotify)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_AppCounters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_CountersChangedNotify_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "counters.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016counters.proto\022\006zproto\"%\n\013AppCounters\022"
      "\026\n\016global_counter\030\001 \001(\005\">\n\025CountersChang"
      "edNotify\022%\n\010counters\030\001 \001(\0132\023.zproto.AppC"
      "ountersB+\n\027com.zchat.engine.zprotoB\016ZPro"
      "toCountersH\002b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 180);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "counters.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_counters_2eproto
namespace zproto {

// ===================================================================

void AppCounters::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AppCounters::kGlobalCounterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AppCounters::AppCounters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_counters_2eproto::InitDefaultsAppCounters();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.AppCounters)
}
AppCounters::AppCounters(const AppCounters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  global_counter_ = from.global_counter_;
  // @@protoc_insertion_point(copy_constructor:zproto.AppCounters)
}

void AppCounters::SharedCtor() {
  global_counter_ = 0;
  _cached_size_ = 0;
}

AppCounters::~AppCounters() {
  // @@protoc_insertion_point(destructor:zproto.AppCounters)
  SharedDtor();
}

void AppCounters::SharedDtor() {
}

void AppCounters::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AppCounters::descriptor() {
  ::protobuf_counters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_counters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AppCounters& AppCounters::default_instance() {
  ::protobuf_counters_2eproto::InitDefaultsAppCounters();
  return *internal_default_instance();
}

AppCounters* AppCounters::New(::google::protobuf::Arena* arena) const {
  AppCounters* n = new AppCounters;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AppCounters::Swap(AppCounters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppCounters::InternalSwap(AppCounters* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata AppCounters::GetMetadata() const {
  protobuf_counters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_counters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CountersChangedNotify::InitAsDefaultInstance() {
  ::zproto::_CountersChangedNotify_default_instance_._instance.get_mutable()->counters_ = const_cast< ::zproto::AppCounters*>(
      ::zproto::AppCounters::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CountersChangedNotify::kCountersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CountersChangedNotify::CountersChangedNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_counters_2eproto::InitDefaultsCountersChangedNotify();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.CountersChangedNotify)
}
CountersChangedNotify::CountersChangedNotify(const CountersChangedNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_counters()) {
    counters_ = new ::zproto::AppCounters(*from.counters_);
  } else {
    counters_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:zproto.CountersChangedNotify)
}

void CountersChangedNotify::SharedCtor() {
  counters_ = NULL;
  _cached_size_ = 0;
}

CountersChangedNotify::~CountersChangedNotify() {
  // @@protoc_insertion_point(destructor:zproto.CountersChangedNotify)
  SharedDtor();
}

void CountersChangedNotify::SharedDtor() {
  if (this != internal_default_instance()) delete counters_;
}

void CountersChangedNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CountersChangedNotify::descriptor() {
  ::protobuf_counters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_counters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CountersChangedNotify& CountersChangedNotify::default_instance() {
  ::protobuf_counters_2eproto::InitDefaultsCountersChangedNotify();
  return *internal_default_instance();
}

CountersChangedNotify* CountersChangedNotify::New(::google::protobuf::Arena* arena) const {
  CountersChangedNotify* n = new CountersChangedNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CountersChangedNotify::Swap(CountersChangedNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CountersChangedNotify::InternalSwap(CountersChangedNotify* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata CountersChangedNotify::GetMetadata() const {
  protobuf_counters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_counters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace zproto

// @@protoc_insertion_point(global_scope)
