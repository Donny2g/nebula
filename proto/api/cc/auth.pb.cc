// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: auth.proto

#include "auth.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace zproto {
class StartTokenAuthReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StartTokenAuthReq>
      _instance;
} _StartTokenAuthReq_default_instance_;
class StartTestingAuthReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StartTestingAuthReq>
      _instance;
} _StartTestingAuthReq_default_instance_;
class AuthRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthRsp>
      _instance;
} _AuthRsp_default_instance_;
}  // namespace zproto
namespace protobuf_auth_2eproto {
void InitDefaultsStartTokenAuthReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::zproto::_StartTokenAuthReq_default_instance_;
    new (ptr) ::zproto::StartTokenAuthReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::StartTokenAuthReq::InitAsDefaultInstance();
}

void InitDefaultsStartTokenAuthReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStartTokenAuthReqImpl);
}

void InitDefaultsStartTestingAuthReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::zproto::_StartTestingAuthReq_default_instance_;
    new (ptr) ::zproto::StartTestingAuthReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::StartTestingAuthReq::InitAsDefaultInstance();
}

void InitDefaultsStartTestingAuthReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStartTestingAuthReqImpl);
}

void InitDefaultsAuthRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_users_2eproto::InitDefaultsUser();
  protobuf_misc_2eproto::InitDefaultsConfig();
  {
    void* ptr = &::zproto::_AuthRsp_default_instance_;
    new (ptr) ::zproto::AuthRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::AuthRsp::InitAsDefaultInstance();
}

void InitDefaultsAuthRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAuthRspImpl);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::StartTokenAuthReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::StartTokenAuthReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::StartTokenAuthReq, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::StartTokenAuthReq, api_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::StartTokenAuthReq, device_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::StartTokenAuthReq, device_title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::StartTokenAuthReq, time_zone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::StartTokenAuthReq, preferred_languages_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::StartTestingAuthReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::StartTestingAuthReq, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::StartTestingAuthReq, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::StartTestingAuthReq, device_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::StartTestingAuthReq, device_title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::StartTestingAuthReq, time_zone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::StartTestingAuthReq, preferred_languages_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::AuthRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::AuthRsp, user_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::AuthRsp, config_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::zproto::StartTokenAuthReq)},
  { 12, -1, sizeof(::zproto::StartTestingAuthReq)},
  { 23, -1, sizeof(::zproto::AuthRsp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_StartTokenAuthReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_StartTestingAuthReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_AuthRsp_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "auth.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\nauth.proto\022\006zproto\032\nmisc.proto\032\013users."
      "proto\"\236\001\n\021StartTokenAuthReq\022\r\n\005token\030\001 \001"
      "(\t\022\016\n\006app_id\030\002 \001(\r\022\017\n\007api_key\030\003 \001(\t\022\023\n\013d"
      "evice_hash\030\004 \001(\014\022\024\n\014device_title\030\005 \001(\t\022\021"
      "\n\ttime_zone\030\006 \001(\t\022\033\n\023preferred_languages"
      "\030\007 \003(\t\"\221\001\n\023StartTestingAuthReq\022\016\n\006app_id"
      "\030\001 \001(\r\022\017\n\007user_id\030\002 \001(\t\022\023\n\013device_hash\030\004"
      " \001(\014\022\024\n\014device_title\030\005 \001(\t\022\021\n\ttime_zone\030"
      "\006 \001(\t\022\033\n\023preferred_languages\030\007 \003(\t\"E\n\007Au"
      "thRsp\022\032\n\004user\030\002 \001(\0132\014.zproto.User\022\036\n\006con"
      "fig\030\003 \001(\0132\016.zproto.ConfigB\'\n\027com.zchat.e"
      "ngine.zprotoB\nZProtoAuthH\002b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 474);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "auth.proto", &protobuf_RegisterTypes);
  ::protobuf_misc_2eproto::AddDescriptors();
  ::protobuf_users_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_auth_2eproto
namespace zproto {

// ===================================================================

void StartTokenAuthReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StartTokenAuthReq::kTokenFieldNumber;
const int StartTokenAuthReq::kAppIdFieldNumber;
const int StartTokenAuthReq::kApiKeyFieldNumber;
const int StartTokenAuthReq::kDeviceHashFieldNumber;
const int StartTokenAuthReq::kDeviceTitleFieldNumber;
const int StartTokenAuthReq::kTimeZoneFieldNumber;
const int StartTokenAuthReq::kPreferredLanguagesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StartTokenAuthReq::StartTokenAuthReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_auth_2eproto::InitDefaultsStartTokenAuthReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.StartTokenAuthReq)
}
StartTokenAuthReq::StartTokenAuthReq(const StartTokenAuthReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      preferred_languages_(from.preferred_languages_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  api_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.api_key().size() > 0) {
    api_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.api_key_);
  }
  device_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_hash().size() > 0) {
    device_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_hash_);
  }
  device_title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_title().size() > 0) {
    device_title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_title_);
  }
  time_zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.time_zone().size() > 0) {
    time_zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_zone_);
  }
  app_id_ = from.app_id_;
  // @@protoc_insertion_point(copy_constructor:zproto.StartTokenAuthReq)
}

void StartTokenAuthReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  api_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_id_ = 0u;
  _cached_size_ = 0;
}

StartTokenAuthReq::~StartTokenAuthReq() {
  // @@protoc_insertion_point(destructor:zproto.StartTokenAuthReq)
  SharedDtor();
}

void StartTokenAuthReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  api_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StartTokenAuthReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StartTokenAuthReq::descriptor() {
  ::protobuf_auth_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_auth_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StartTokenAuthReq& StartTokenAuthReq::default_instance() {
  ::protobuf_auth_2eproto::InitDefaultsStartTokenAuthReq();
  return *internal_default_instance();
}

StartTokenAuthReq* StartTokenAuthReq::New(::google::protobuf::Arena* arena) const {
  StartTokenAuthReq* n = new StartTokenAuthReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StartTokenAuthReq::Swap(StartTokenAuthReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StartTokenAuthReq::InternalSwap(StartTokenAuthReq* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata StartTokenAuthReq::GetMetadata() const {
  protobuf_auth_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_auth_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StartTestingAuthReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StartTestingAuthReq::kAppIdFieldNumber;
const int StartTestingAuthReq::kUserIdFieldNumber;
const int StartTestingAuthReq::kDeviceHashFieldNumber;
const int StartTestingAuthReq::kDeviceTitleFieldNumber;
const int StartTestingAuthReq::kTimeZoneFieldNumber;
const int StartTestingAuthReq::kPreferredLanguagesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StartTestingAuthReq::StartTestingAuthReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_auth_2eproto::InitDefaultsStartTestingAuthReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.StartTestingAuthReq)
}
StartTestingAuthReq::StartTestingAuthReq(const StartTestingAuthReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      preferred_languages_(from.preferred_languages_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_id().size() > 0) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  device_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_hash().size() > 0) {
    device_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_hash_);
  }
  device_title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_title().size() > 0) {
    device_title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_title_);
  }
  time_zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.time_zone().size() > 0) {
    time_zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_zone_);
  }
  app_id_ = from.app_id_;
  // @@protoc_insertion_point(copy_constructor:zproto.StartTestingAuthReq)
}

void StartTestingAuthReq::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_id_ = 0u;
  _cached_size_ = 0;
}

StartTestingAuthReq::~StartTestingAuthReq() {
  // @@protoc_insertion_point(destructor:zproto.StartTestingAuthReq)
  SharedDtor();
}

void StartTestingAuthReq::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StartTestingAuthReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StartTestingAuthReq::descriptor() {
  ::protobuf_auth_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_auth_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StartTestingAuthReq& StartTestingAuthReq::default_instance() {
  ::protobuf_auth_2eproto::InitDefaultsStartTestingAuthReq();
  return *internal_default_instance();
}

StartTestingAuthReq* StartTestingAuthReq::New(::google::protobuf::Arena* arena) const {
  StartTestingAuthReq* n = new StartTestingAuthReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StartTestingAuthReq::Swap(StartTestingAuthReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StartTestingAuthReq::InternalSwap(StartTestingAuthReq* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata StartTestingAuthReq::GetMetadata() const {
  protobuf_auth_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_auth_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthRsp::InitAsDefaultInstance() {
  ::zproto::_AuthRsp_default_instance_._instance.get_mutable()->user_ = const_cast< ::zproto::User*>(
      ::zproto::User::internal_default_instance());
  ::zproto::_AuthRsp_default_instance_._instance.get_mutable()->config_ = const_cast< ::zproto::Config*>(
      ::zproto::Config::internal_default_instance());
}
void AuthRsp::clear_user() {
  if (GetArenaNoVirtual() == NULL && user_ != NULL) {
    delete user_;
  }
  user_ = NULL;
}
void AuthRsp::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthRsp::kUserFieldNumber;
const int AuthRsp::kConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthRsp::AuthRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_auth_2eproto::InitDefaultsAuthRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.AuthRsp)
}
AuthRsp::AuthRsp(const AuthRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_user()) {
    user_ = new ::zproto::User(*from.user_);
  } else {
    user_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::zproto::Config(*from.config_);
  } else {
    config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:zproto.AuthRsp)
}

void AuthRsp::SharedCtor() {
  ::memset(&user_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_) -
      reinterpret_cast<char*>(&user_)) + sizeof(config_));
  _cached_size_ = 0;
}

AuthRsp::~AuthRsp() {
  // @@protoc_insertion_point(destructor:zproto.AuthRsp)
  SharedDtor();
}

void AuthRsp::SharedDtor() {
  if (this != internal_default_instance()) delete user_;
  if (this != internal_default_instance()) delete config_;
}

void AuthRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthRsp::descriptor() {
  ::protobuf_auth_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_auth_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthRsp& AuthRsp::default_instance() {
  ::protobuf_auth_2eproto::InitDefaultsAuthRsp();
  return *internal_default_instance();
}

AuthRsp* AuthRsp::New(::google::protobuf::Arena* arena) const {
  AuthRsp* n = new AuthRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthRsp::Swap(AuthRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthRsp::InternalSwap(AuthRsp* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata AuthRsp::GetMetadata() const {
  protobuf_auth_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_auth_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace zproto

// @@protoc_insertion_point(global_scope)
