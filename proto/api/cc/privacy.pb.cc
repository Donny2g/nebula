// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: privacy.proto

#include "privacy.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace zproto {
class BlockUserReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BlockUserReq>
      _instance;
} _BlockUserReq_default_instance_;
class UnblockUserReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnblockUserReq>
      _instance;
} _UnblockUserReq_default_instance_;
class LoadBlockedUsersReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoadBlockedUsersReq>
      _instance;
} _LoadBlockedUsersReq_default_instance_;
class LoadBlockedUsersRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoadBlockedUsersRsp>
      _instance;
} _LoadBlockedUsersRsp_default_instance_;
class UserBlockedNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserBlockedNotify>
      _instance;
} _UserBlockedNotify_default_instance_;
class UserUnblockedNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserUnblockedNotify>
      _instance;
} _UserUnblockedNotify_default_instance_;
}  // namespace zproto
namespace protobuf_privacy_2eproto {
void InitDefaultsBlockUserReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_peers_2eproto::InitDefaultsUserOutPeer();
  {
    void* ptr = &::zproto::_BlockUserReq_default_instance_;
    new (ptr) ::zproto::BlockUserReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::BlockUserReq::InitAsDefaultInstance();
}

void InitDefaultsBlockUserReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBlockUserReqImpl);
}

void InitDefaultsUnblockUserReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_peers_2eproto::InitDefaultsUserOutPeer();
  {
    void* ptr = &::zproto::_UnblockUserReq_default_instance_;
    new (ptr) ::zproto::UnblockUserReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::UnblockUserReq::InitAsDefaultInstance();
}

void InitDefaultsUnblockUserReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUnblockUserReqImpl);
}

void InitDefaultsLoadBlockedUsersReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::zproto::_LoadBlockedUsersReq_default_instance_;
    new (ptr) ::zproto::LoadBlockedUsersReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::LoadBlockedUsersReq::InitAsDefaultInstance();
}

void InitDefaultsLoadBlockedUsersReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLoadBlockedUsersReqImpl);
}

void InitDefaultsLoadBlockedUsersRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_peers_2eproto::InitDefaultsUserOutPeer();
  {
    void* ptr = &::zproto::_LoadBlockedUsersRsp_default_instance_;
    new (ptr) ::zproto::LoadBlockedUsersRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::LoadBlockedUsersRsp::InitAsDefaultInstance();
}

void InitDefaultsLoadBlockedUsersRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLoadBlockedUsersRspImpl);
}

void InitDefaultsUserBlockedNotifyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::zproto::_UserBlockedNotify_default_instance_;
    new (ptr) ::zproto::UserBlockedNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::UserBlockedNotify::InitAsDefaultInstance();
}

void InitDefaultsUserBlockedNotify() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserBlockedNotifyImpl);
}

void InitDefaultsUserUnblockedNotifyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::zproto::_UserUnblockedNotify_default_instance_;
    new (ptr) ::zproto::UserUnblockedNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::UserUnblockedNotify::InitAsDefaultInstance();
}

void InitDefaultsUserUnblockedNotify() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserUnblockedNotifyImpl);
}

::google::protobuf::Metadata file_level_metadata[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::BlockUserReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::BlockUserReq, peer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::UnblockUserReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::UnblockUserReq, peer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::LoadBlockedUsersReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::LoadBlockedUsersRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::LoadBlockedUsersRsp, user_peers_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::UserBlockedNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::UserBlockedNotify, uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::UserUnblockedNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::UserUnblockedNotify, uid_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::zproto::BlockUserReq)},
  { 6, -1, sizeof(::zproto::UnblockUserReq)},
  { 12, -1, sizeof(::zproto::LoadBlockedUsersReq)},
  { 17, -1, sizeof(::zproto::LoadBlockedUsersRsp)},
  { 23, -1, sizeof(::zproto::UserBlockedNotify)},
  { 29, -1, sizeof(::zproto::UserUnblockedNotify)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_BlockUserReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_UnblockUserReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_LoadBlockedUsersReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_LoadBlockedUsersRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_UserBlockedNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_UserUnblockedNotify_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "privacy.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rprivacy.proto\022\006zproto\032\013peers.proto\"1\n\014"
      "BlockUserReq\022!\n\004peer\030\001 \001(\0132\023.zproto.User"
      "OutPeer\"3\n\016UnblockUserReq\022!\n\004peer\030\001 \001(\0132"
      "\023.zproto.UserOutPeer\"\025\n\023LoadBlockedUsers"
      "Req\">\n\023LoadBlockedUsersRsp\022\'\n\nuser_peers"
      "\030\001 \003(\0132\023.zproto.UserOutPeer\" \n\021UserBlock"
      "edNotify\022\013\n\003uid\030\001 \001(\005\"\"\n\023UserUnblockedNo"
      "tify\022\013\n\003uid\030\001 \001(\005B*\n\027com.zchat.engine.zp"
      "rotoB\rZProtoPrivacyH\002b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 349);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "privacy.proto", &protobuf_RegisterTypes);
  ::protobuf_peers_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_privacy_2eproto
namespace zproto {

// ===================================================================

void BlockUserReq::InitAsDefaultInstance() {
  ::zproto::_BlockUserReq_default_instance_._instance.get_mutable()->peer_ = const_cast< ::zproto::UserOutPeer*>(
      ::zproto::UserOutPeer::internal_default_instance());
}
void BlockUserReq::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) {
    delete peer_;
  }
  peer_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlockUserReq::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlockUserReq::BlockUserReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_privacy_2eproto::InitDefaultsBlockUserReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.BlockUserReq)
}
BlockUserReq::BlockUserReq(const BlockUserReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::zproto::UserOutPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:zproto.BlockUserReq)
}

void BlockUserReq::SharedCtor() {
  peer_ = NULL;
  _cached_size_ = 0;
}

BlockUserReq::~BlockUserReq() {
  // @@protoc_insertion_point(destructor:zproto.BlockUserReq)
  SharedDtor();
}

void BlockUserReq::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void BlockUserReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlockUserReq::descriptor() {
  ::protobuf_privacy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_privacy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BlockUserReq& BlockUserReq::default_instance() {
  ::protobuf_privacy_2eproto::InitDefaultsBlockUserReq();
  return *internal_default_instance();
}

BlockUserReq* BlockUserReq::New(::google::protobuf::Arena* arena) const {
  BlockUserReq* n = new BlockUserReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BlockUserReq::Swap(BlockUserReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlockUserReq::InternalSwap(BlockUserReq* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata BlockUserReq::GetMetadata() const {
  protobuf_privacy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_privacy_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UnblockUserReq::InitAsDefaultInstance() {
  ::zproto::_UnblockUserReq_default_instance_._instance.get_mutable()->peer_ = const_cast< ::zproto::UserOutPeer*>(
      ::zproto::UserOutPeer::internal_default_instance());
}
void UnblockUserReq::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) {
    delete peer_;
  }
  peer_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnblockUserReq::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnblockUserReq::UnblockUserReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_privacy_2eproto::InitDefaultsUnblockUserReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.UnblockUserReq)
}
UnblockUserReq::UnblockUserReq(const UnblockUserReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::zproto::UserOutPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:zproto.UnblockUserReq)
}

void UnblockUserReq::SharedCtor() {
  peer_ = NULL;
  _cached_size_ = 0;
}

UnblockUserReq::~UnblockUserReq() {
  // @@protoc_insertion_point(destructor:zproto.UnblockUserReq)
  SharedDtor();
}

void UnblockUserReq::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void UnblockUserReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnblockUserReq::descriptor() {
  ::protobuf_privacy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_privacy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnblockUserReq& UnblockUserReq::default_instance() {
  ::protobuf_privacy_2eproto::InitDefaultsUnblockUserReq();
  return *internal_default_instance();
}

UnblockUserReq* UnblockUserReq::New(::google::protobuf::Arena* arena) const {
  UnblockUserReq* n = new UnblockUserReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnblockUserReq::Swap(UnblockUserReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnblockUserReq::InternalSwap(UnblockUserReq* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata UnblockUserReq::GetMetadata() const {
  protobuf_privacy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_privacy_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoadBlockedUsersReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoadBlockedUsersReq::LoadBlockedUsersReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_privacy_2eproto::InitDefaultsLoadBlockedUsersReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.LoadBlockedUsersReq)
}
LoadBlockedUsersReq::LoadBlockedUsersReq(const LoadBlockedUsersReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:zproto.LoadBlockedUsersReq)
}

void LoadBlockedUsersReq::SharedCtor() {
  _cached_size_ = 0;
}

LoadBlockedUsersReq::~LoadBlockedUsersReq() {
  // @@protoc_insertion_point(destructor:zproto.LoadBlockedUsersReq)
  SharedDtor();
}

void LoadBlockedUsersReq::SharedDtor() {
}

void LoadBlockedUsersReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoadBlockedUsersReq::descriptor() {
  ::protobuf_privacy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_privacy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoadBlockedUsersReq& LoadBlockedUsersReq::default_instance() {
  ::protobuf_privacy_2eproto::InitDefaultsLoadBlockedUsersReq();
  return *internal_default_instance();
}

LoadBlockedUsersReq* LoadBlockedUsersReq::New(::google::protobuf::Arena* arena) const {
  LoadBlockedUsersReq* n = new LoadBlockedUsersReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoadBlockedUsersReq::Swap(LoadBlockedUsersReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoadBlockedUsersReq::InternalSwap(LoadBlockedUsersReq* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata LoadBlockedUsersReq::GetMetadata() const {
  protobuf_privacy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_privacy_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoadBlockedUsersRsp::InitAsDefaultInstance() {
}
void LoadBlockedUsersRsp::clear_user_peers() {
  user_peers_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoadBlockedUsersRsp::kUserPeersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoadBlockedUsersRsp::LoadBlockedUsersRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_privacy_2eproto::InitDefaultsLoadBlockedUsersRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.LoadBlockedUsersRsp)
}
LoadBlockedUsersRsp::LoadBlockedUsersRsp(const LoadBlockedUsersRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      user_peers_(from.user_peers_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:zproto.LoadBlockedUsersRsp)
}

void LoadBlockedUsersRsp::SharedCtor() {
  _cached_size_ = 0;
}

LoadBlockedUsersRsp::~LoadBlockedUsersRsp() {
  // @@protoc_insertion_point(destructor:zproto.LoadBlockedUsersRsp)
  SharedDtor();
}

void LoadBlockedUsersRsp::SharedDtor() {
}

void LoadBlockedUsersRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoadBlockedUsersRsp::descriptor() {
  ::protobuf_privacy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_privacy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoadBlockedUsersRsp& LoadBlockedUsersRsp::default_instance() {
  ::protobuf_privacy_2eproto::InitDefaultsLoadBlockedUsersRsp();
  return *internal_default_instance();
}

LoadBlockedUsersRsp* LoadBlockedUsersRsp::New(::google::protobuf::Arena* arena) const {
  LoadBlockedUsersRsp* n = new LoadBlockedUsersRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoadBlockedUsersRsp::Swap(LoadBlockedUsersRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoadBlockedUsersRsp::InternalSwap(LoadBlockedUsersRsp* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata LoadBlockedUsersRsp::GetMetadata() const {
  protobuf_privacy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_privacy_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserBlockedNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserBlockedNotify::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserBlockedNotify::UserBlockedNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_privacy_2eproto::InitDefaultsUserBlockedNotify();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.UserBlockedNotify)
}
UserBlockedNotify::UserBlockedNotify(const UserBlockedNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_ = from.uid_;
  // @@protoc_insertion_point(copy_constructor:zproto.UserBlockedNotify)
}

void UserBlockedNotify::SharedCtor() {
  uid_ = 0;
  _cached_size_ = 0;
}

UserBlockedNotify::~UserBlockedNotify() {
  // @@protoc_insertion_point(destructor:zproto.UserBlockedNotify)
  SharedDtor();
}

void UserBlockedNotify::SharedDtor() {
}

void UserBlockedNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserBlockedNotify::descriptor() {
  ::protobuf_privacy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_privacy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserBlockedNotify& UserBlockedNotify::default_instance() {
  ::protobuf_privacy_2eproto::InitDefaultsUserBlockedNotify();
  return *internal_default_instance();
}

UserBlockedNotify* UserBlockedNotify::New(::google::protobuf::Arena* arena) const {
  UserBlockedNotify* n = new UserBlockedNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserBlockedNotify::Swap(UserBlockedNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserBlockedNotify::InternalSwap(UserBlockedNotify* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata UserBlockedNotify::GetMetadata() const {
  protobuf_privacy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_privacy_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserUnblockedNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserUnblockedNotify::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserUnblockedNotify::UserUnblockedNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_privacy_2eproto::InitDefaultsUserUnblockedNotify();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.UserUnblockedNotify)
}
UserUnblockedNotify::UserUnblockedNotify(const UserUnblockedNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_ = from.uid_;
  // @@protoc_insertion_point(copy_constructor:zproto.UserUnblockedNotify)
}

void UserUnblockedNotify::SharedCtor() {
  uid_ = 0;
  _cached_size_ = 0;
}

UserUnblockedNotify::~UserUnblockedNotify() {
  // @@protoc_insertion_point(destructor:zproto.UserUnblockedNotify)
  SharedDtor();
}

void UserUnblockedNotify::SharedDtor() {
}

void UserUnblockedNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserUnblockedNotify::descriptor() {
  ::protobuf_privacy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_privacy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserUnblockedNotify& UserUnblockedNotify::default_instance() {
  ::protobuf_privacy_2eproto::InitDefaultsUserUnblockedNotify();
  return *internal_default_instance();
}

UserUnblockedNotify* UserUnblockedNotify::New(::google::protobuf::Arena* arena) const {
  UserUnblockedNotify* n = new UserUnblockedNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserUnblockedNotify::Swap(UserUnblockedNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserUnblockedNotify::InternalSwap(UserUnblockedNotify* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata UserUnblockedNotify::GetMetadata() const {
  protobuf_privacy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_privacy_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace zproto

// @@protoc_insertion_point(global_scope)
