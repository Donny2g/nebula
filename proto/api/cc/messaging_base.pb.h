// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messaging_base.proto

#ifndef PROTOBUF_messaging_5fbase_2eproto__INCLUDED
#define PROTOBUF_messaging_5fbase_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "peers.pb.h"
#include "group_base.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_messaging_5fbase_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsInstantMessageImpl();
void InitDefaultsInstantMessage();
void InitDefaultsMessageContainerImpl();
void InitDefaultsMessageContainer();
inline void InitDefaults() {
  InitDefaultsInstantMessage();
  InitDefaultsMessageContainer();
}
}  // namespace protobuf_messaging_5fbase_2eproto
namespace zproto {
class InstantMessage;
class InstantMessageDefaultTypeInternal;
extern InstantMessageDefaultTypeInternal _InstantMessage_default_instance_;
class MessageContainer;
class MessageContainerDefaultTypeInternal;
extern MessageContainerDefaultTypeInternal _MessageContainer_default_instance_;
}  // namespace zproto
namespace zproto {

enum MessageType {
  TEXT = 0,
  AUDIO = 1,
  VIDEO = 2,
  MessageType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MessageType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MessageType_IsValid(int value);
const MessageType MessageType_MIN = TEXT;
const MessageType MessageType_MAX = VIDEO;
const int MessageType_ARRAYSIZE = MessageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MessageType_descriptor();
inline const ::std::string& MessageType_Name(MessageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MessageType_descriptor(), value);
}
inline bool MessageType_Parse(
    const ::std::string& name, MessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageType>(
    MessageType_descriptor(), name, value);
}
enum MessageState {
  SENT = 0,
  RECEIVED = 1,
  READ = 2,
  MessageState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MessageState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MessageState_IsValid(int value);
const MessageState MessageState_MIN = SENT;
const MessageState MessageState_MAX = READ;
const int MessageState_ARRAYSIZE = MessageState_MAX + 1;

const ::google::protobuf::EnumDescriptor* MessageState_descriptor();
inline const ::std::string& MessageState_Name(MessageState value) {
  return ::google::protobuf::internal::NameOfEnum(
    MessageState_descriptor(), value);
}
inline bool MessageState_Parse(
    const ::std::string& name, MessageState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageState>(
    MessageState_descriptor(), name, value);
}
enum ListLoadMode {
  FORWARD = 0,
  BACKWARD = 1,
  BOTH = 2,
  ListLoadMode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ListLoadMode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ListLoadMode_IsValid(int value);
const ListLoadMode ListLoadMode_MIN = FORWARD;
const ListLoadMode ListLoadMode_MAX = BOTH;
const int ListLoadMode_ARRAYSIZE = ListLoadMode_MAX + 1;

const ::google::protobuf::EnumDescriptor* ListLoadMode_descriptor();
inline const ::std::string& ListLoadMode_Name(ListLoadMode value) {
  return ::google::protobuf::internal::NameOfEnum(
    ListLoadMode_descriptor(), value);
}
inline bool ListLoadMode_Parse(
    const ::std::string& name, ListLoadMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ListLoadMode>(
    ListLoadMode_descriptor(), name, value);
}
// ===================================================================

class InstantMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.InstantMessage) */ {
 public:
  InstantMessage();
  virtual ~InstantMessage();

  InstantMessage(const InstantMessage& from);

  inline InstantMessage& operator=(const InstantMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InstantMessage(InstantMessage&& from) noexcept
    : InstantMessage() {
    *this = ::std::move(from);
  }

  inline InstantMessage& operator=(InstantMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InstantMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InstantMessage* internal_default_instance() {
    return reinterpret_cast<const InstantMessage*>(
               &_InstantMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(InstantMessage* other);
  friend void swap(InstantMessage& a, InstantMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InstantMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  InstantMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InstantMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes message_data = 2;
  void clear_message_data();
  static const int kMessageDataFieldNumber = 2;
  const ::std::string& message_data() const;
  void set_message_data(const ::std::string& value);
  #if LANG_CXX11
  void set_message_data(::std::string&& value);
  #endif
  void set_message_data(const char* value);
  void set_message_data(const void* value, size_t size);
  ::std::string* mutable_message_data();
  ::std::string* release_message_data();
  void set_allocated_message_data(::std::string* message_data);

  // .zproto.MessageType message_type = 1;
  void clear_message_type();
  static const int kMessageTypeFieldNumber = 1;
  ::zproto::MessageType message_type() const;
  void set_message_type(::zproto::MessageType value);

  // @@protoc_insertion_point(class_scope:zproto.InstantMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_data_;
  int message_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_messaging_5fbase_2eproto::TableStruct;
  friend void ::protobuf_messaging_5fbase_2eproto::InitDefaultsInstantMessageImpl();
};
// -------------------------------------------------------------------

class MessageContainer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.MessageContainer) */ {
 public:
  MessageContainer();
  virtual ~MessageContainer();

  MessageContainer(const MessageContainer& from);

  inline MessageContainer& operator=(const MessageContainer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MessageContainer(MessageContainer&& from) noexcept
    : MessageContainer() {
    *this = ::std::move(from);
  }

  inline MessageContainer& operator=(MessageContainer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageContainer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MessageContainer* internal_default_instance() {
    return reinterpret_cast<const MessageContainer*>(
               &_MessageContainer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(MessageContainer* other);
  friend void swap(MessageContainer& a, MessageContainer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MessageContainer* New() const PROTOBUF_FINAL { return New(NULL); }

  MessageContainer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MessageContainer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string sender_uid = 1;
  void clear_sender_uid();
  static const int kSenderUidFieldNumber = 1;
  const ::std::string& sender_uid() const;
  void set_sender_uid(const ::std::string& value);
  #if LANG_CXX11
  void set_sender_uid(::std::string&& value);
  #endif
  void set_sender_uid(const char* value);
  void set_sender_uid(const char* value, size_t size);
  ::std::string* mutable_sender_uid();
  ::std::string* release_sender_uid();
  void set_allocated_sender_uid(::std::string* sender_uid);

  // .zproto.InstantMessage message = 5;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 5;
  const ::zproto::InstantMessage& message() const;
  ::zproto::InstantMessage* release_message();
  ::zproto::InstantMessage* mutable_message();
  void set_allocated_message(::zproto::InstantMessage* message);

  // int64 rid = 2;
  void clear_rid();
  static const int kRidFieldNumber = 2;
  ::google::protobuf::int64 rid() const;
  void set_rid(::google::protobuf::int64 value);

  // int64 date = 3;
  void clear_date();
  static const int kDateFieldNumber = 3;
  ::google::protobuf::int64 date() const;
  void set_date(::google::protobuf::int64 value);

  // .zproto.MessageState state = 6;
  void clear_state();
  static const int kStateFieldNumber = 6;
  ::zproto::MessageState state() const;
  void set_state(::zproto::MessageState value);

  // @@protoc_insertion_point(class_scope:zproto.MessageContainer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr sender_uid_;
  ::zproto::InstantMessage* message_;
  ::google::protobuf::int64 rid_;
  ::google::protobuf::int64 date_;
  int state_;
  mutable int _cached_size_;
  friend struct ::protobuf_messaging_5fbase_2eproto::TableStruct;
  friend void ::protobuf_messaging_5fbase_2eproto::InitDefaultsMessageContainerImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// InstantMessage

// .zproto.MessageType message_type = 1;
inline void InstantMessage::clear_message_type() {
  message_type_ = 0;
}
inline ::zproto::MessageType InstantMessage::message_type() const {
  // @@protoc_insertion_point(field_get:zproto.InstantMessage.message_type)
  return static_cast< ::zproto::MessageType >(message_type_);
}
inline void InstantMessage::set_message_type(::zproto::MessageType value) {
  
  message_type_ = value;
  // @@protoc_insertion_point(field_set:zproto.InstantMessage.message_type)
}

// bytes message_data = 2;
inline void InstantMessage::clear_message_data() {
  message_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InstantMessage::message_data() const {
  // @@protoc_insertion_point(field_get:zproto.InstantMessage.message_data)
  return message_data_.GetNoArena();
}
inline void InstantMessage::set_message_data(const ::std::string& value) {
  
  message_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.InstantMessage.message_data)
}
#if LANG_CXX11
inline void InstantMessage::set_message_data(::std::string&& value) {
  
  message_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zproto.InstantMessage.message_data)
}
#endif
inline void InstantMessage::set_message_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.InstantMessage.message_data)
}
inline void InstantMessage::set_message_data(const void* value, size_t size) {
  
  message_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.InstantMessage.message_data)
}
inline ::std::string* InstantMessage::mutable_message_data() {
  
  // @@protoc_insertion_point(field_mutable:zproto.InstantMessage.message_data)
  return message_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InstantMessage::release_message_data() {
  // @@protoc_insertion_point(field_release:zproto.InstantMessage.message_data)
  
  return message_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstantMessage::set_allocated_message_data(::std::string* message_data) {
  if (message_data != NULL) {
    
  } else {
    
  }
  message_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message_data);
  // @@protoc_insertion_point(field_set_allocated:zproto.InstantMessage.message_data)
}

// -------------------------------------------------------------------

// MessageContainer

// string sender_uid = 1;
inline void MessageContainer::clear_sender_uid() {
  sender_uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MessageContainer::sender_uid() const {
  // @@protoc_insertion_point(field_get:zproto.MessageContainer.sender_uid)
  return sender_uid_.GetNoArena();
}
inline void MessageContainer::set_sender_uid(const ::std::string& value) {
  
  sender_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.MessageContainer.sender_uid)
}
#if LANG_CXX11
inline void MessageContainer::set_sender_uid(::std::string&& value) {
  
  sender_uid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zproto.MessageContainer.sender_uid)
}
#endif
inline void MessageContainer::set_sender_uid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sender_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.MessageContainer.sender_uid)
}
inline void MessageContainer::set_sender_uid(const char* value, size_t size) {
  
  sender_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.MessageContainer.sender_uid)
}
inline ::std::string* MessageContainer::mutable_sender_uid() {
  
  // @@protoc_insertion_point(field_mutable:zproto.MessageContainer.sender_uid)
  return sender_uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MessageContainer::release_sender_uid() {
  // @@protoc_insertion_point(field_release:zproto.MessageContainer.sender_uid)
  
  return sender_uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MessageContainer::set_allocated_sender_uid(::std::string* sender_uid) {
  if (sender_uid != NULL) {
    
  } else {
    
  }
  sender_uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sender_uid);
  // @@protoc_insertion_point(field_set_allocated:zproto.MessageContainer.sender_uid)
}

// int64 rid = 2;
inline void MessageContainer::clear_rid() {
  rid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 MessageContainer::rid() const {
  // @@protoc_insertion_point(field_get:zproto.MessageContainer.rid)
  return rid_;
}
inline void MessageContainer::set_rid(::google::protobuf::int64 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:zproto.MessageContainer.rid)
}

// int64 date = 3;
inline void MessageContainer::clear_date() {
  date_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 MessageContainer::date() const {
  // @@protoc_insertion_point(field_get:zproto.MessageContainer.date)
  return date_;
}
inline void MessageContainer::set_date(::google::protobuf::int64 value) {
  
  date_ = value;
  // @@protoc_insertion_point(field_set:zproto.MessageContainer.date)
}

// .zproto.InstantMessage message = 5;
inline bool MessageContainer::has_message() const {
  return this != internal_default_instance() && message_ != NULL;
}
inline void MessageContainer::clear_message() {
  if (GetArenaNoVirtual() == NULL && message_ != NULL) {
    delete message_;
  }
  message_ = NULL;
}
inline const ::zproto::InstantMessage& MessageContainer::message() const {
  const ::zproto::InstantMessage* p = message_;
  // @@protoc_insertion_point(field_get:zproto.MessageContainer.message)
  return p != NULL ? *p : *reinterpret_cast<const ::zproto::InstantMessage*>(
      &::zproto::_InstantMessage_default_instance_);
}
inline ::zproto::InstantMessage* MessageContainer::release_message() {
  // @@protoc_insertion_point(field_release:zproto.MessageContainer.message)
  
  ::zproto::InstantMessage* temp = message_;
  message_ = NULL;
  return temp;
}
inline ::zproto::InstantMessage* MessageContainer::mutable_message() {
  
  if (message_ == NULL) {
    message_ = new ::zproto::InstantMessage;
  }
  // @@protoc_insertion_point(field_mutable:zproto.MessageContainer.message)
  return message_;
}
inline void MessageContainer::set_allocated_message(::zproto::InstantMessage* message) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete message_;
  }
  if (message) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      message = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, message, submessage_arena);
    }
    
  } else {
    
  }
  message_ = message;
  // @@protoc_insertion_point(field_set_allocated:zproto.MessageContainer.message)
}

// .zproto.MessageState state = 6;
inline void MessageContainer::clear_state() {
  state_ = 0;
}
inline ::zproto::MessageState MessageContainer::state() const {
  // @@protoc_insertion_point(field_get:zproto.MessageContainer.state)
  return static_cast< ::zproto::MessageState >(state_);
}
inline void MessageContainer::set_state(::zproto::MessageState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:zproto.MessageContainer.state)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace zproto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::zproto::MessageType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::zproto::MessageType>() {
  return ::zproto::MessageType_descriptor();
}
template <> struct is_proto_enum< ::zproto::MessageState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::zproto::MessageState>() {
  return ::zproto::MessageState_descriptor();
}
template <> struct is_proto_enum< ::zproto::ListLoadMode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::zproto::ListLoadMode>() {
  return ::zproto::ListLoadMode_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_messaging_5fbase_2eproto__INCLUDED
