// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: types.proto

#ifndef PROTOBUF_types_2eproto__INCLUDED
#define PROTOBUF_types_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_types_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsRawValueImpl();
void InitDefaultsRawValue();
void InitDefaultsRawArrayValueImpl();
void InitDefaultsRawArrayValue();
inline void InitDefaults() {
  InitDefaultsRawValue();
  InitDefaultsRawArrayValue();
}
}  // namespace protobuf_types_2eproto
namespace zproto {
class RawArrayValue;
class RawArrayValueDefaultTypeInternal;
extern RawArrayValueDefaultTypeInternal _RawArrayValue_default_instance_;
class RawValue;
class RawValueDefaultTypeInternal;
extern RawValueDefaultTypeInternal _RawValue_default_instance_;
}  // namespace zproto
namespace zproto {

enum DataType {
  INT32 = 0,
  INT64 = 1,
  UINT32 = 2,
  UINT64 = 3,
  FLOAT = 4,
  DOUBLE = 5,
  BOOL = 6,
  DATE = 7,
  DATETIME = 8,
  STRING = 9,
  BINARY = 10,
  ENUM = 11,
  DATA_TYPE = 12,
  DataType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DataType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DataType_IsValid(int value);
const DataType DataType_MIN = INT32;
const DataType DataType_MAX = DATA_TYPE;
const int DataType_ARRAYSIZE = DataType_MAX + 1;

const ::google::protobuf::EnumDescriptor* DataType_descriptor();
inline const ::std::string& DataType_Name(DataType value) {
  return ::google::protobuf::internal::NameOfEnum(
    DataType_descriptor(), value);
}
inline bool DataType_Parse(
    const ::std::string& name, DataType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DataType>(
    DataType_descriptor(), name, value);
}
// ===================================================================

class RawValue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.RawValue) */ {
 public:
  RawValue();
  virtual ~RawValue();

  RawValue(const RawValue& from);

  inline RawValue& operator=(const RawValue& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RawValue(RawValue&& from) noexcept
    : RawValue() {
    *this = ::std::move(from);
  }

  inline RawValue& operator=(RawValue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RawValue& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RawValue* internal_default_instance() {
    return reinterpret_cast<const RawValue*>(
               &_RawValue_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(RawValue* other);
  friend void swap(RawValue& a, RawValue& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RawValue* New() const PROTOBUF_FINAL { return New(NULL); }

  RawValue* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RawValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes binary_value = 11;
  void clear_binary_value();
  static const int kBinaryValueFieldNumber = 11;
  const ::std::string& binary_value() const;
  void set_binary_value(const ::std::string& value);
  #if LANG_CXX11
  void set_binary_value(::std::string&& value);
  #endif
  void set_binary_value(const char* value);
  void set_binary_value(const void* value, size_t size);
  ::std::string* mutable_binary_value();
  ::std::string* release_binary_value();
  void set_allocated_binary_value(::std::string* binary_value);

  // string string_value = 12;
  void clear_string_value();
  static const int kStringValueFieldNumber = 12;
  const ::std::string& string_value() const;
  void set_string_value(const ::std::string& value);
  #if LANG_CXX11
  void set_string_value(::std::string&& value);
  #endif
  void set_string_value(const char* value);
  void set_string_value(const char* value, size_t size);
  ::std::string* mutable_string_value();
  ::std::string* release_string_value();
  void set_allocated_string_value(::std::string* string_value);

  // .zproto.DataType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::zproto::DataType type() const;
  void set_type(::zproto::DataType value);

  // int32 int32_value = 2;
  void clear_int32_value();
  static const int kInt32ValueFieldNumber = 2;
  ::google::protobuf::int32 int32_value() const;
  void set_int32_value(::google::protobuf::int32 value);

  // int64 int64_value = 3;
  void clear_int64_value();
  static const int kInt64ValueFieldNumber = 3;
  ::google::protobuf::int64 int64_value() const;
  void set_int64_value(::google::protobuf::int64 value);

  // uint64 uint64_value = 5;
  void clear_uint64_value();
  static const int kUint64ValueFieldNumber = 5;
  ::google::protobuf::uint64 uint64_value() const;
  void set_uint64_value(::google::protobuf::uint64 value);

  // uint32 uint32_value = 4;
  void clear_uint32_value();
  static const int kUint32ValueFieldNumber = 4;
  ::google::protobuf::uint32 uint32_value() const;
  void set_uint32_value(::google::protobuf::uint32 value);

  // float float_value = 6;
  void clear_float_value();
  static const int kFloatValueFieldNumber = 6;
  float float_value() const;
  void set_float_value(float value);

  // double double_value = 7;
  void clear_double_value();
  static const int kDoubleValueFieldNumber = 7;
  double double_value() const;
  void set_double_value(double value);

  // bool bool_value = 8;
  void clear_bool_value();
  static const int kBoolValueFieldNumber = 8;
  bool bool_value() const;
  void set_bool_value(bool value);

  // int32 date_value = 9;
  void clear_date_value();
  static const int kDateValueFieldNumber = 9;
  ::google::protobuf::int32 date_value() const;
  void set_date_value(::google::protobuf::int32 value);

  // int64 datetime_value = 10;
  void clear_datetime_value();
  static const int kDatetimeValueFieldNumber = 10;
  ::google::protobuf::int64 datetime_value() const;
  void set_datetime_value(::google::protobuf::int64 value);

  // .zproto.DataType data_type_value = 13;
  void clear_data_type_value();
  static const int kDataTypeValueFieldNumber = 13;
  ::zproto::DataType data_type_value() const;
  void set_data_type_value(::zproto::DataType value);

  // @@protoc_insertion_point(class_scope:zproto.RawValue)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr binary_value_;
  ::google::protobuf::internal::ArenaStringPtr string_value_;
  int type_;
  ::google::protobuf::int32 int32_value_;
  ::google::protobuf::int64 int64_value_;
  ::google::protobuf::uint64 uint64_value_;
  ::google::protobuf::uint32 uint32_value_;
  float float_value_;
  double double_value_;
  bool bool_value_;
  ::google::protobuf::int32 date_value_;
  ::google::protobuf::int64 datetime_value_;
  int data_type_value_;
  mutable int _cached_size_;
  friend struct ::protobuf_types_2eproto::TableStruct;
  friend void ::protobuf_types_2eproto::InitDefaultsRawValueImpl();
};
// -------------------------------------------------------------------

class RawArrayValue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.RawArrayValue) */ {
 public:
  RawArrayValue();
  virtual ~RawArrayValue();

  RawArrayValue(const RawArrayValue& from);

  inline RawArrayValue& operator=(const RawArrayValue& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RawArrayValue(RawArrayValue&& from) noexcept
    : RawArrayValue() {
    *this = ::std::move(from);
  }

  inline RawArrayValue& operator=(RawArrayValue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RawArrayValue& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RawArrayValue* internal_default_instance() {
    return reinterpret_cast<const RawArrayValue*>(
               &_RawArrayValue_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(RawArrayValue* other);
  friend void swap(RawArrayValue& a, RawArrayValue& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RawArrayValue* New() const PROTOBUF_FINAL { return New(NULL); }

  RawArrayValue* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RawArrayValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .zproto.RawValue array = 1;
  int array_size() const;
  void clear_array();
  static const int kArrayFieldNumber = 1;
  const ::zproto::RawValue& array(int index) const;
  ::zproto::RawValue* mutable_array(int index);
  ::zproto::RawValue* add_array();
  ::google::protobuf::RepeatedPtrField< ::zproto::RawValue >*
      mutable_array();
  const ::google::protobuf::RepeatedPtrField< ::zproto::RawValue >&
      array() const;

  // @@protoc_insertion_point(class_scope:zproto.RawArrayValue)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::zproto::RawValue > array_;
  mutable int _cached_size_;
  friend struct ::protobuf_types_2eproto::TableStruct;
  friend void ::protobuf_types_2eproto::InitDefaultsRawArrayValueImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RawValue

// .zproto.DataType type = 1;
inline void RawValue::clear_type() {
  type_ = 0;
}
inline ::zproto::DataType RawValue::type() const {
  // @@protoc_insertion_point(field_get:zproto.RawValue.type)
  return static_cast< ::zproto::DataType >(type_);
}
inline void RawValue::set_type(::zproto::DataType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:zproto.RawValue.type)
}

// int32 int32_value = 2;
inline void RawValue::clear_int32_value() {
  int32_value_ = 0;
}
inline ::google::protobuf::int32 RawValue::int32_value() const {
  // @@protoc_insertion_point(field_get:zproto.RawValue.int32_value)
  return int32_value_;
}
inline void RawValue::set_int32_value(::google::protobuf::int32 value) {
  
  int32_value_ = value;
  // @@protoc_insertion_point(field_set:zproto.RawValue.int32_value)
}

// int64 int64_value = 3;
inline void RawValue::clear_int64_value() {
  int64_value_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RawValue::int64_value() const {
  // @@protoc_insertion_point(field_get:zproto.RawValue.int64_value)
  return int64_value_;
}
inline void RawValue::set_int64_value(::google::protobuf::int64 value) {
  
  int64_value_ = value;
  // @@protoc_insertion_point(field_set:zproto.RawValue.int64_value)
}

// uint32 uint32_value = 4;
inline void RawValue::clear_uint32_value() {
  uint32_value_ = 0u;
}
inline ::google::protobuf::uint32 RawValue::uint32_value() const {
  // @@protoc_insertion_point(field_get:zproto.RawValue.uint32_value)
  return uint32_value_;
}
inline void RawValue::set_uint32_value(::google::protobuf::uint32 value) {
  
  uint32_value_ = value;
  // @@protoc_insertion_point(field_set:zproto.RawValue.uint32_value)
}

// uint64 uint64_value = 5;
inline void RawValue::clear_uint64_value() {
  uint64_value_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RawValue::uint64_value() const {
  // @@protoc_insertion_point(field_get:zproto.RawValue.uint64_value)
  return uint64_value_;
}
inline void RawValue::set_uint64_value(::google::protobuf::uint64 value) {
  
  uint64_value_ = value;
  // @@protoc_insertion_point(field_set:zproto.RawValue.uint64_value)
}

// float float_value = 6;
inline void RawValue::clear_float_value() {
  float_value_ = 0;
}
inline float RawValue::float_value() const {
  // @@protoc_insertion_point(field_get:zproto.RawValue.float_value)
  return float_value_;
}
inline void RawValue::set_float_value(float value) {
  
  float_value_ = value;
  // @@protoc_insertion_point(field_set:zproto.RawValue.float_value)
}

// double double_value = 7;
inline void RawValue::clear_double_value() {
  double_value_ = 0;
}
inline double RawValue::double_value() const {
  // @@protoc_insertion_point(field_get:zproto.RawValue.double_value)
  return double_value_;
}
inline void RawValue::set_double_value(double value) {
  
  double_value_ = value;
  // @@protoc_insertion_point(field_set:zproto.RawValue.double_value)
}

// bool bool_value = 8;
inline void RawValue::clear_bool_value() {
  bool_value_ = false;
}
inline bool RawValue::bool_value() const {
  // @@protoc_insertion_point(field_get:zproto.RawValue.bool_value)
  return bool_value_;
}
inline void RawValue::set_bool_value(bool value) {
  
  bool_value_ = value;
  // @@protoc_insertion_point(field_set:zproto.RawValue.bool_value)
}

// int32 date_value = 9;
inline void RawValue::clear_date_value() {
  date_value_ = 0;
}
inline ::google::protobuf::int32 RawValue::date_value() const {
  // @@protoc_insertion_point(field_get:zproto.RawValue.date_value)
  return date_value_;
}
inline void RawValue::set_date_value(::google::protobuf::int32 value) {
  
  date_value_ = value;
  // @@protoc_insertion_point(field_set:zproto.RawValue.date_value)
}

// int64 datetime_value = 10;
inline void RawValue::clear_datetime_value() {
  datetime_value_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RawValue::datetime_value() const {
  // @@protoc_insertion_point(field_get:zproto.RawValue.datetime_value)
  return datetime_value_;
}
inline void RawValue::set_datetime_value(::google::protobuf::int64 value) {
  
  datetime_value_ = value;
  // @@protoc_insertion_point(field_set:zproto.RawValue.datetime_value)
}

// bytes binary_value = 11;
inline void RawValue::clear_binary_value() {
  binary_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RawValue::binary_value() const {
  // @@protoc_insertion_point(field_get:zproto.RawValue.binary_value)
  return binary_value_.GetNoArena();
}
inline void RawValue::set_binary_value(const ::std::string& value) {
  
  binary_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.RawValue.binary_value)
}
#if LANG_CXX11
inline void RawValue::set_binary_value(::std::string&& value) {
  
  binary_value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zproto.RawValue.binary_value)
}
#endif
inline void RawValue::set_binary_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  binary_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.RawValue.binary_value)
}
inline void RawValue::set_binary_value(const void* value, size_t size) {
  
  binary_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.RawValue.binary_value)
}
inline ::std::string* RawValue::mutable_binary_value() {
  
  // @@protoc_insertion_point(field_mutable:zproto.RawValue.binary_value)
  return binary_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RawValue::release_binary_value() {
  // @@protoc_insertion_point(field_release:zproto.RawValue.binary_value)
  
  return binary_value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RawValue::set_allocated_binary_value(::std::string* binary_value) {
  if (binary_value != NULL) {
    
  } else {
    
  }
  binary_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), binary_value);
  // @@protoc_insertion_point(field_set_allocated:zproto.RawValue.binary_value)
}

// string string_value = 12;
inline void RawValue::clear_string_value() {
  string_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RawValue::string_value() const {
  // @@protoc_insertion_point(field_get:zproto.RawValue.string_value)
  return string_value_.GetNoArena();
}
inline void RawValue::set_string_value(const ::std::string& value) {
  
  string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.RawValue.string_value)
}
#if LANG_CXX11
inline void RawValue::set_string_value(::std::string&& value) {
  
  string_value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zproto.RawValue.string_value)
}
#endif
inline void RawValue::set_string_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.RawValue.string_value)
}
inline void RawValue::set_string_value(const char* value, size_t size) {
  
  string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.RawValue.string_value)
}
inline ::std::string* RawValue::mutable_string_value() {
  
  // @@protoc_insertion_point(field_mutable:zproto.RawValue.string_value)
  return string_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RawValue::release_string_value() {
  // @@protoc_insertion_point(field_release:zproto.RawValue.string_value)
  
  return string_value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RawValue::set_allocated_string_value(::std::string* string_value) {
  if (string_value != NULL) {
    
  } else {
    
  }
  string_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), string_value);
  // @@protoc_insertion_point(field_set_allocated:zproto.RawValue.string_value)
}

// .zproto.DataType data_type_value = 13;
inline void RawValue::clear_data_type_value() {
  data_type_value_ = 0;
}
inline ::zproto::DataType RawValue::data_type_value() const {
  // @@protoc_insertion_point(field_get:zproto.RawValue.data_type_value)
  return static_cast< ::zproto::DataType >(data_type_value_);
}
inline void RawValue::set_data_type_value(::zproto::DataType value) {
  
  data_type_value_ = value;
  // @@protoc_insertion_point(field_set:zproto.RawValue.data_type_value)
}

// -------------------------------------------------------------------

// RawArrayValue

// repeated .zproto.RawValue array = 1;
inline int RawArrayValue::array_size() const {
  return array_.size();
}
inline void RawArrayValue::clear_array() {
  array_.Clear();
}
inline const ::zproto::RawValue& RawArrayValue::array(int index) const {
  // @@protoc_insertion_point(field_get:zproto.RawArrayValue.array)
  return array_.Get(index);
}
inline ::zproto::RawValue* RawArrayValue::mutable_array(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.RawArrayValue.array)
  return array_.Mutable(index);
}
inline ::zproto::RawValue* RawArrayValue::add_array() {
  // @@protoc_insertion_point(field_add:zproto.RawArrayValue.array)
  return array_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::zproto::RawValue >*
RawArrayValue::mutable_array() {
  // @@protoc_insertion_point(field_mutable_list:zproto.RawArrayValue.array)
  return &array_;
}
inline const ::google::protobuf::RepeatedPtrField< ::zproto::RawValue >&
RawArrayValue::array() const {
  // @@protoc_insertion_point(field_list:zproto.RawArrayValue.array)
  return array_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace zproto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::zproto::DataType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::zproto::DataType>() {
  return ::zproto::DataType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_types_2eproto__INCLUDED
