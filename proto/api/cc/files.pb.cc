// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: files.proto

#include "files.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace zproto {
class FileLocationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FileLocation>
      _instance;
} _FileLocation_default_instance_;
class AvatarImageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AvatarImage>
      _instance;
} _AvatarImage_default_instance_;
class AvatarDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Avatar>
      _instance;
} _Avatar_default_instance_;
}  // namespace zproto
namespace protobuf_files_2eproto {
void InitDefaultsFileLocationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::zproto::_FileLocation_default_instance_;
    new (ptr) ::zproto::FileLocation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::FileLocation::InitAsDefaultInstance();
}

void InitDefaultsFileLocation() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFileLocationImpl);
}

void InitDefaultsAvatarImageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_files_2eproto::InitDefaultsFileLocation();
  {
    void* ptr = &::zproto::_AvatarImage_default_instance_;
    new (ptr) ::zproto::AvatarImage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::AvatarImage::InitAsDefaultInstance();
}

void InitDefaultsAvatarImage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAvatarImageImpl);
}

void InitDefaultsAvatarImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_files_2eproto::InitDefaultsAvatarImage();
  {
    void* ptr = &::zproto::_Avatar_default_instance_;
    new (ptr) ::zproto::Avatar();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::Avatar::InitAsDefaultInstance();
}

void InitDefaultsAvatar() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAvatarImpl);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::FileLocation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::FileLocation, file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::FileLocation, access_hash_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::AvatarImage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::AvatarImage, file_location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::AvatarImage, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::AvatarImage, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::AvatarImage, file_size_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::Avatar, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::Avatar, small_image_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::Avatar, large_image_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::Avatar, full_image_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::zproto::FileLocation)},
  { 7, -1, sizeof(::zproto::AvatarImage)},
  { 16, -1, sizeof(::zproto::Avatar)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_FileLocation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_AvatarImage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_Avatar_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "files.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013files.proto\022\006zproto\"4\n\014FileLocation\022\017\n"
      "\007file_id\030\001 \001(\003\022\023\n\013access_hash\030\002 \001(\003\"l\n\013A"
      "vatarImage\022+\n\rfile_location\030\001 \001(\0132\024.zpro"
      "to.FileLocation\022\r\n\005width\030\002 \001(\005\022\016\n\006height"
      "\030\003 \001(\005\022\021\n\tfile_size\030\004 \001(\005\"\205\001\n\006Avatar\022(\n\013"
      "small_image\030\001 \001(\0132\023.zproto.AvatarImage\022("
      "\n\013large_image\030\002 \001(\0132\023.zproto.AvatarImage"
      "\022\'\n\nfull_image\030\003 \001(\0132\023.zproto.AvatarImag"
      "eB(\n\027com.zchat.engine.zprotoB\013ZProtoFile"
      "sH\002b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 371);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "files.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_files_2eproto
namespace zproto {

// ===================================================================

void FileLocation::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileLocation::kFileIdFieldNumber;
const int FileLocation::kAccessHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileLocation::FileLocation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_files_2eproto::InitDefaultsFileLocation();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.FileLocation)
}
FileLocation::FileLocation(const FileLocation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&file_id_, &from.file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&access_hash_) -
    reinterpret_cast<char*>(&file_id_)) + sizeof(access_hash_));
  // @@protoc_insertion_point(copy_constructor:zproto.FileLocation)
}

void FileLocation::SharedCtor() {
  ::memset(&file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&access_hash_) -
      reinterpret_cast<char*>(&file_id_)) + sizeof(access_hash_));
  _cached_size_ = 0;
}

FileLocation::~FileLocation() {
  // @@protoc_insertion_point(destructor:zproto.FileLocation)
  SharedDtor();
}

void FileLocation::SharedDtor() {
}

void FileLocation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileLocation::descriptor() {
  ::protobuf_files_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_files_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FileLocation& FileLocation::default_instance() {
  ::protobuf_files_2eproto::InitDefaultsFileLocation();
  return *internal_default_instance();
}

FileLocation* FileLocation::New(::google::protobuf::Arena* arena) const {
  FileLocation* n = new FileLocation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FileLocation::Swap(FileLocation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileLocation::InternalSwap(FileLocation* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata FileLocation::GetMetadata() const {
  protobuf_files_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_files_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AvatarImage::InitAsDefaultInstance() {
  ::zproto::_AvatarImage_default_instance_._instance.get_mutable()->file_location_ = const_cast< ::zproto::FileLocation*>(
      ::zproto::FileLocation::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarImage::kFileLocationFieldNumber;
const int AvatarImage::kWidthFieldNumber;
const int AvatarImage::kHeightFieldNumber;
const int AvatarImage::kFileSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarImage::AvatarImage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_files_2eproto::InitDefaultsAvatarImage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.AvatarImage)
}
AvatarImage::AvatarImage(const AvatarImage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_file_location()) {
    file_location_ = new ::zproto::FileLocation(*from.file_location_);
  } else {
    file_location_ = NULL;
  }
  ::memcpy(&width_, &from.width_,
    static_cast<size_t>(reinterpret_cast<char*>(&file_size_) -
    reinterpret_cast<char*>(&width_)) + sizeof(file_size_));
  // @@protoc_insertion_point(copy_constructor:zproto.AvatarImage)
}

void AvatarImage::SharedCtor() {
  ::memset(&file_location_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&file_size_) -
      reinterpret_cast<char*>(&file_location_)) + sizeof(file_size_));
  _cached_size_ = 0;
}

AvatarImage::~AvatarImage() {
  // @@protoc_insertion_point(destructor:zproto.AvatarImage)
  SharedDtor();
}

void AvatarImage::SharedDtor() {
  if (this != internal_default_instance()) delete file_location_;
}

void AvatarImage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarImage::descriptor() {
  ::protobuf_files_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_files_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarImage& AvatarImage::default_instance() {
  ::protobuf_files_2eproto::InitDefaultsAvatarImage();
  return *internal_default_instance();
}

AvatarImage* AvatarImage::New(::google::protobuf::Arena* arena) const {
  AvatarImage* n = new AvatarImage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarImage::Swap(AvatarImage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarImage::InternalSwap(AvatarImage* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata AvatarImage::GetMetadata() const {
  protobuf_files_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_files_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Avatar::InitAsDefaultInstance() {
  ::zproto::_Avatar_default_instance_._instance.get_mutable()->small_image_ = const_cast< ::zproto::AvatarImage*>(
      ::zproto::AvatarImage::internal_default_instance());
  ::zproto::_Avatar_default_instance_._instance.get_mutable()->large_image_ = const_cast< ::zproto::AvatarImage*>(
      ::zproto::AvatarImage::internal_default_instance());
  ::zproto::_Avatar_default_instance_._instance.get_mutable()->full_image_ = const_cast< ::zproto::AvatarImage*>(
      ::zproto::AvatarImage::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Avatar::kSmallImageFieldNumber;
const int Avatar::kLargeImageFieldNumber;
const int Avatar::kFullImageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Avatar::Avatar()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_files_2eproto::InitDefaultsAvatar();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.Avatar)
}
Avatar::Avatar(const Avatar& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_small_image()) {
    small_image_ = new ::zproto::AvatarImage(*from.small_image_);
  } else {
    small_image_ = NULL;
  }
  if (from.has_large_image()) {
    large_image_ = new ::zproto::AvatarImage(*from.large_image_);
  } else {
    large_image_ = NULL;
  }
  if (from.has_full_image()) {
    full_image_ = new ::zproto::AvatarImage(*from.full_image_);
  } else {
    full_image_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:zproto.Avatar)
}

void Avatar::SharedCtor() {
  ::memset(&small_image_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&full_image_) -
      reinterpret_cast<char*>(&small_image_)) + sizeof(full_image_));
  _cached_size_ = 0;
}

Avatar::~Avatar() {
  // @@protoc_insertion_point(destructor:zproto.Avatar)
  SharedDtor();
}

void Avatar::SharedDtor() {
  if (this != internal_default_instance()) delete small_image_;
  if (this != internal_default_instance()) delete large_image_;
  if (this != internal_default_instance()) delete full_image_;
}

void Avatar::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Avatar::descriptor() {
  ::protobuf_files_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_files_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Avatar& Avatar::default_instance() {
  ::protobuf_files_2eproto::InitDefaultsAvatar();
  return *internal_default_instance();
}

Avatar* Avatar::New(::google::protobuf::Arena* arena) const {
  Avatar* n = new Avatar;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Avatar::Swap(Avatar* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Avatar::InternalSwap(Avatar* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata Avatar::GetMetadata() const {
  protobuf_files_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_files_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace zproto

// @@protoc_insertion_point(global_scope)
