// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dialogs.proto

#include "dialogs.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace zproto {
class DialogDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Dialog>
      _instance;
} _Dialog_default_instance_;
class LoadDialogsReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoadDialogsReq>
      _instance;
} _LoadDialogsReq_default_instance_;
class LoadDialogsRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoadDialogsRsp>
      _instance;
} _LoadDialogsRsp_default_instance_;
class CreateChatDialogReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateChatDialogReq>
      _instance;
} _CreateChatDialogReq_default_instance_;
class CreateChatDialogRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateChatDialogRsp>
      _instance;
} _CreateChatDialogRsp_default_instance_;
class BlockPeerReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BlockPeerReq>
      _instance;
} _BlockPeerReq_default_instance_;
class UnblockPeerReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnblockPeerReq>
      _instance;
} _UnblockPeerReq_default_instance_;
class TopPeerReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TopPeerReq>
      _instance;
} _TopPeerReq_default_instance_;
class UntopPeerReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UntopPeerReq>
      _instance;
} _UntopPeerReq_default_instance_;
class DndPeerReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DndPeerReq>
      _instance;
} _DndPeerReq_default_instance_;
class UndndPeerReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UndndPeerReq>
      _instance;
} _UndndPeerReq_default_instance_;
class LoadBlockedPeersReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoadBlockedPeersReq>
      _instance;
} _LoadBlockedPeersReq_default_instance_;
class LoadBlockedPeersRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoadBlockedPeersRsp>
      _instance;
} _LoadBlockedPeersRsp_default_instance_;
class LoadTopedPeersReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoadTopedPeersReq>
      _instance;
} _LoadTopedPeersReq_default_instance_;
class LoadTopedPeersRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoadTopedPeersRsp>
      _instance;
} _LoadTopedPeersRsp_default_instance_;
class LoadDndedPeersReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoadDndedPeersReq>
      _instance;
} _LoadDndedPeersReq_default_instance_;
class LoadDndedPeersRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoadDndedPeersRsp>
      _instance;
} _LoadDndedPeersRsp_default_instance_;
class PeerBlockedNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PeerBlockedNotify>
      _instance;
} _PeerBlockedNotify_default_instance_;
class PeerUnblockedNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PeerUnblockedNotify>
      _instance;
} _PeerUnblockedNotify_default_instance_;
class PeerTopedNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PeerTopedNotify>
      _instance;
} _PeerTopedNotify_default_instance_;
class PeerUntopedNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PeerUntopedNotify>
      _instance;
} _PeerUntopedNotify_default_instance_;
class PeerDndedNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PeerDndedNotify>
      _instance;
} _PeerDndedNotify_default_instance_;
class PeerUndndedNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PeerUndndedNotify>
      _instance;
} _PeerUndndedNotify_default_instance_;
}  // namespace zproto
namespace protobuf_dialogs_2eproto {
void InitDefaultsDialogImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_peers_2eproto::InitDefaultsPeer();
  protobuf_messaging_5fbase_2eproto::InitDefaultsMessageContainer();
  {
    void* ptr = &::zproto::_Dialog_default_instance_;
    new (ptr) ::zproto::Dialog();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::Dialog::InitAsDefaultInstance();
}

void InitDefaultsDialog() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDialogImpl);
}

void InitDefaultsLoadDialogsReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::zproto::_LoadDialogsReq_default_instance_;
    new (ptr) ::zproto::LoadDialogsReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::LoadDialogsReq::InitAsDefaultInstance();
}

void InitDefaultsLoadDialogsReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLoadDialogsReqImpl);
}

void InitDefaultsLoadDialogsRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_group_5fbase_2eproto::InitDefaultsGroup();
  protobuf_users_2eproto::InitDefaultsUser();
  protobuf_dialogs_2eproto::InitDefaultsDialog();
  protobuf_peers_2eproto::InitDefaultsUserOutPeer();
  protobuf_peers_2eproto::InitDefaultsGroupOutPeer();
  {
    void* ptr = &::zproto::_LoadDialogsRsp_default_instance_;
    new (ptr) ::zproto::LoadDialogsRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::LoadDialogsRsp::InitAsDefaultInstance();
}

void InitDefaultsLoadDialogsRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLoadDialogsRspImpl);
}

void InitDefaultsCreateChatDialogReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::zproto::_CreateChatDialogReq_default_instance_;
    new (ptr) ::zproto::CreateChatDialogReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::CreateChatDialogReq::InitAsDefaultInstance();
}

void InitDefaultsCreateChatDialogReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateChatDialogReqImpl);
}

void InitDefaultsCreateChatDialogRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_peers_2eproto::InitDefaultsOutPeer();
  {
    void* ptr = &::zproto::_CreateChatDialogRsp_default_instance_;
    new (ptr) ::zproto::CreateChatDialogRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::CreateChatDialogRsp::InitAsDefaultInstance();
}

void InitDefaultsCreateChatDialogRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateChatDialogRspImpl);
}

void InitDefaultsBlockPeerReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_peers_2eproto::InitDefaultsOutPeer();
  {
    void* ptr = &::zproto::_BlockPeerReq_default_instance_;
    new (ptr) ::zproto::BlockPeerReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::BlockPeerReq::InitAsDefaultInstance();
}

void InitDefaultsBlockPeerReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBlockPeerReqImpl);
}

void InitDefaultsUnblockPeerReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_peers_2eproto::InitDefaultsOutPeer();
  {
    void* ptr = &::zproto::_UnblockPeerReq_default_instance_;
    new (ptr) ::zproto::UnblockPeerReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::UnblockPeerReq::InitAsDefaultInstance();
}

void InitDefaultsUnblockPeerReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUnblockPeerReqImpl);
}

void InitDefaultsTopPeerReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_peers_2eproto::InitDefaultsOutPeer();
  {
    void* ptr = &::zproto::_TopPeerReq_default_instance_;
    new (ptr) ::zproto::TopPeerReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::TopPeerReq::InitAsDefaultInstance();
}

void InitDefaultsTopPeerReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTopPeerReqImpl);
}

void InitDefaultsUntopPeerReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_peers_2eproto::InitDefaultsOutPeer();
  {
    void* ptr = &::zproto::_UntopPeerReq_default_instance_;
    new (ptr) ::zproto::UntopPeerReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::UntopPeerReq::InitAsDefaultInstance();
}

void InitDefaultsUntopPeerReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUntopPeerReqImpl);
}

void InitDefaultsDndPeerReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_peers_2eproto::InitDefaultsOutPeer();
  {
    void* ptr = &::zproto::_DndPeerReq_default_instance_;
    new (ptr) ::zproto::DndPeerReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::DndPeerReq::InitAsDefaultInstance();
}

void InitDefaultsDndPeerReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDndPeerReqImpl);
}

void InitDefaultsUndndPeerReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_peers_2eproto::InitDefaultsOutPeer();
  {
    void* ptr = &::zproto::_UndndPeerReq_default_instance_;
    new (ptr) ::zproto::UndndPeerReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::UndndPeerReq::InitAsDefaultInstance();
}

void InitDefaultsUndndPeerReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUndndPeerReqImpl);
}

void InitDefaultsLoadBlockedPeersReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::zproto::_LoadBlockedPeersReq_default_instance_;
    new (ptr) ::zproto::LoadBlockedPeersReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::LoadBlockedPeersReq::InitAsDefaultInstance();
}

void InitDefaultsLoadBlockedPeersReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLoadBlockedPeersReqImpl);
}

void InitDefaultsLoadBlockedPeersRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_peers_2eproto::InitDefaultsOutPeer();
  {
    void* ptr = &::zproto::_LoadBlockedPeersRsp_default_instance_;
    new (ptr) ::zproto::LoadBlockedPeersRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::LoadBlockedPeersRsp::InitAsDefaultInstance();
}

void InitDefaultsLoadBlockedPeersRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLoadBlockedPeersRspImpl);
}

void InitDefaultsLoadTopedPeersReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::zproto::_LoadTopedPeersReq_default_instance_;
    new (ptr) ::zproto::LoadTopedPeersReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::LoadTopedPeersReq::InitAsDefaultInstance();
}

void InitDefaultsLoadTopedPeersReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLoadTopedPeersReqImpl);
}

void InitDefaultsLoadTopedPeersRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_peers_2eproto::InitDefaultsOutPeer();
  {
    void* ptr = &::zproto::_LoadTopedPeersRsp_default_instance_;
    new (ptr) ::zproto::LoadTopedPeersRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::LoadTopedPeersRsp::InitAsDefaultInstance();
}

void InitDefaultsLoadTopedPeersRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLoadTopedPeersRspImpl);
}

void InitDefaultsLoadDndedPeersReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::zproto::_LoadDndedPeersReq_default_instance_;
    new (ptr) ::zproto::LoadDndedPeersReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::LoadDndedPeersReq::InitAsDefaultInstance();
}

void InitDefaultsLoadDndedPeersReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLoadDndedPeersReqImpl);
}

void InitDefaultsLoadDndedPeersRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_peers_2eproto::InitDefaultsOutPeer();
  {
    void* ptr = &::zproto::_LoadDndedPeersRsp_default_instance_;
    new (ptr) ::zproto::LoadDndedPeersRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::LoadDndedPeersRsp::InitAsDefaultInstance();
}

void InitDefaultsLoadDndedPeersRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLoadDndedPeersRspImpl);
}

void InitDefaultsPeerBlockedNotifyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_peers_2eproto::InitDefaultsPeer();
  {
    void* ptr = &::zproto::_PeerBlockedNotify_default_instance_;
    new (ptr) ::zproto::PeerBlockedNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::PeerBlockedNotify::InitAsDefaultInstance();
}

void InitDefaultsPeerBlockedNotify() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPeerBlockedNotifyImpl);
}

void InitDefaultsPeerUnblockedNotifyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_peers_2eproto::InitDefaultsPeer();
  {
    void* ptr = &::zproto::_PeerUnblockedNotify_default_instance_;
    new (ptr) ::zproto::PeerUnblockedNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::PeerUnblockedNotify::InitAsDefaultInstance();
}

void InitDefaultsPeerUnblockedNotify() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPeerUnblockedNotifyImpl);
}

void InitDefaultsPeerTopedNotifyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_peers_2eproto::InitDefaultsPeer();
  {
    void* ptr = &::zproto::_PeerTopedNotify_default_instance_;
    new (ptr) ::zproto::PeerTopedNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::PeerTopedNotify::InitAsDefaultInstance();
}

void InitDefaultsPeerTopedNotify() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPeerTopedNotifyImpl);
}

void InitDefaultsPeerUntopedNotifyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_peers_2eproto::InitDefaultsPeer();
  {
    void* ptr = &::zproto::_PeerUntopedNotify_default_instance_;
    new (ptr) ::zproto::PeerUntopedNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::PeerUntopedNotify::InitAsDefaultInstance();
}

void InitDefaultsPeerUntopedNotify() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPeerUntopedNotifyImpl);
}

void InitDefaultsPeerDndedNotifyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_peers_2eproto::InitDefaultsPeer();
  {
    void* ptr = &::zproto::_PeerDndedNotify_default_instance_;
    new (ptr) ::zproto::PeerDndedNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::PeerDndedNotify::InitAsDefaultInstance();
}

void InitDefaultsPeerDndedNotify() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPeerDndedNotifyImpl);
}

void InitDefaultsPeerUndndedNotifyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_peers_2eproto::InitDefaultsPeer();
  {
    void* ptr = &::zproto::_PeerUndndedNotify_default_instance_;
    new (ptr) ::zproto::PeerUndndedNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::PeerUndndedNotify::InitAsDefaultInstance();
}

void InitDefaultsPeerUndndedNotify() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPeerUndndedNotifyImpl);
}

::google::protobuf::Metadata file_level_metadata[23];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::Dialog, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::Dialog, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::Dialog, unread_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::Dialog, sort_date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::Dialog, last_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::Dialog, first_unread_date_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::LoadDialogsReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::LoadDialogsReq, min_date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::LoadDialogsReq, load_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::LoadDialogsReq, limit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::LoadDialogsRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::LoadDialogsRsp, groups_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::LoadDialogsRsp, users_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::LoadDialogsRsp, dialogs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::LoadDialogsRsp, user_peers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::LoadDialogsRsp, group_peers_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::CreateChatDialogReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::CreateChatDialogReq, peer_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::CreateChatDialogRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::CreateChatDialogRsp, peer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::BlockPeerReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::BlockPeerReq, peer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::UnblockPeerReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::UnblockPeerReq, peer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::TopPeerReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::TopPeerReq, peer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::UntopPeerReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::UntopPeerReq, peer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::DndPeerReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::DndPeerReq, peer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::UndndPeerReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::UndndPeerReq, peer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::LoadBlockedPeersReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::LoadBlockedPeersRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::LoadBlockedPeersRsp, peers_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::LoadTopedPeersReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::LoadTopedPeersRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::LoadTopedPeersRsp, peers_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::LoadDndedPeersReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::LoadDndedPeersRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::LoadDndedPeersRsp, peers_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::PeerBlockedNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::PeerBlockedNotify, peer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::PeerUnblockedNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::PeerUnblockedNotify, peer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::PeerTopedNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::PeerTopedNotify, peer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::PeerUntopedNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::PeerUntopedNotify, peer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::PeerDndedNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::PeerDndedNotify, peer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::PeerUndndedNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::PeerUndndedNotify, peer_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::zproto::Dialog)},
  { 10, -1, sizeof(::zproto::LoadDialogsReq)},
  { 18, -1, sizeof(::zproto::LoadDialogsRsp)},
  { 28, -1, sizeof(::zproto::CreateChatDialogReq)},
  { 34, -1, sizeof(::zproto::CreateChatDialogRsp)},
  { 40, -1, sizeof(::zproto::BlockPeerReq)},
  { 46, -1, sizeof(::zproto::UnblockPeerReq)},
  { 52, -1, sizeof(::zproto::TopPeerReq)},
  { 58, -1, sizeof(::zproto::UntopPeerReq)},
  { 64, -1, sizeof(::zproto::DndPeerReq)},
  { 70, -1, sizeof(::zproto::UndndPeerReq)},
  { 76, -1, sizeof(::zproto::LoadBlockedPeersReq)},
  { 81, -1, sizeof(::zproto::LoadBlockedPeersRsp)},
  { 87, -1, sizeof(::zproto::LoadTopedPeersReq)},
  { 92, -1, sizeof(::zproto::LoadTopedPeersRsp)},
  { 98, -1, sizeof(::zproto::LoadDndedPeersReq)},
  { 103, -1, sizeof(::zproto::LoadDndedPeersRsp)},
  { 109, -1, sizeof(::zproto::PeerBlockedNotify)},
  { 115, -1, sizeof(::zproto::PeerUnblockedNotify)},
  { 121, -1, sizeof(::zproto::PeerTopedNotify)},
  { 127, -1, sizeof(::zproto::PeerUntopedNotify)},
  { 133, -1, sizeof(::zproto::PeerDndedNotify)},
  { 139, -1, sizeof(::zproto::PeerUndndedNotify)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_Dialog_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_LoadDialogsReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_LoadDialogsRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_CreateChatDialogReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_CreateChatDialogRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_BlockPeerReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_UnblockPeerReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_TopPeerReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_UntopPeerReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_DndPeerReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_UndndPeerReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_LoadBlockedPeersReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_LoadBlockedPeersRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_LoadTopedPeersReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_LoadTopedPeersRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_LoadDndedPeersReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_LoadDndedPeersRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_PeerBlockedNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_PeerUnblockedNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_PeerTopedNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_PeerUntopedNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_PeerDndedNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_PeerUndndedNotify_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "dialogs.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 23);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rdialogs.proto\022\006zproto\032\024messaging_base."
      "proto\032\020group_base.proto\032\013peers.proto\032\013us"
      "ers.proto\"\230\001\n\006Dialog\022\032\n\004peer\030\001 \001(\0132\014.zpr"
      "oto.Peer\022\024\n\014unread_count\030\002 \001(\005\022\021\n\tsort_d"
      "ate\030\003 \001(\003\022.\n\014last_message\030\004 \001(\0132\030.zproto"
      ".MessageContainer\022\031\n\021first_unread_date\030\005"
      " \001(\003\"Z\n\016LoadDialogsReq\022\020\n\010min_date\030\001 \001(\003"
      "\022\'\n\tload_mode\030\002 \001(\0162\024.zproto.ListLoadMod"
      "e\022\r\n\005limit\030\003 \001(\005\"\301\001\n\016LoadDialogsRsp\022\035\n\006g"
      "roups\030\001 \003(\0132\r.zproto.Group\022\033\n\005users\030\002 \003("
      "\0132\014.zproto.User\022\037\n\007dialogs\030\003 \003(\0132\016.zprot"
      "o.Dialog\022\'\n\nuser_peers\030\004 \003(\0132\023.zproto.Us"
      "erOutPeer\022)\n\013group_peers\030\005 \003(\0132\024.zproto."
      "GroupOutPeer\"&\n\023CreateChatDialogReq\022\017\n\007p"
      "eer_id\030\001 \001(\t\"4\n\023CreateChatDialogRsp\022\035\n\004p"
      "eer\030\001 \001(\0132\017.zproto.OutPeer\"-\n\014BlockPeerR"
      "eq\022\035\n\004peer\030\001 \001(\0132\017.zproto.OutPeer\"/\n\016Unb"
      "lockPeerReq\022\035\n\004peer\030\001 \001(\0132\017.zproto.OutPe"
      "er\"+\n\nTopPeerReq\022\035\n\004peer\030\001 \001(\0132\017.zproto."
      "OutPeer\"-\n\014UntopPeerReq\022\035\n\004peer\030\001 \001(\0132\017."
      "zproto.OutPeer\"+\n\nDndPeerReq\022\035\n\004peer\030\001 \001"
      "(\0132\017.zproto.OutPeer\"-\n\014UndndPeerReq\022\035\n\004p"
      "eer\030\001 \001(\0132\017.zproto.OutPeer\"\025\n\023LoadBlocke"
      "dPeersReq\"5\n\023LoadBlockedPeersRsp\022\036\n\005peer"
      "s\030\001 \003(\0132\017.zproto.OutPeer\"\023\n\021LoadTopedPee"
      "rsReq\"3\n\021LoadTopedPeersRsp\022\036\n\005peers\030\001 \003("
      "\0132\017.zproto.OutPeer\"\023\n\021LoadDndedPeersReq\""
      "3\n\021LoadDndedPeersRsp\022\036\n\005peers\030\001 \003(\0132\017.zp"
      "roto.OutPeer\"/\n\021PeerBlockedNotify\022\032\n\004pee"
      "r\030\001 \001(\0132\014.zproto.Peer\"1\n\023PeerUnblockedNo"
      "tify\022\032\n\004peer\030\001 \001(\0132\014.zproto.Peer\"-\n\017Peer"
      "TopedNotify\022\032\n\004peer\030\001 \001(\0132\014.zproto.Peer\""
      "/\n\021PeerUntopedNotify\022\032\n\004peer\030\001 \001(\0132\014.zpr"
      "oto.Peer\"-\n\017PeerDndedNotify\022\032\n\004peer\030\001 \001("
      "\0132\014.zproto.Peer\"/\n\021PeerUndndedNotify\022\032\n\004"
      "peer\030\001 \001(\0132\014.zproto.PeerB,\n\027com.zchat.en"
      "gine.zprotoB\017ZProtoMessagingH\002b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1478);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dialogs.proto", &protobuf_RegisterTypes);
  ::protobuf_messaging_5fbase_2eproto::AddDescriptors();
  ::protobuf_group_5fbase_2eproto::AddDescriptors();
  ::protobuf_peers_2eproto::AddDescriptors();
  ::protobuf_users_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_dialogs_2eproto
namespace zproto {

// ===================================================================

void Dialog::InitAsDefaultInstance() {
  ::zproto::_Dialog_default_instance_._instance.get_mutable()->peer_ = const_cast< ::zproto::Peer*>(
      ::zproto::Peer::internal_default_instance());
  ::zproto::_Dialog_default_instance_._instance.get_mutable()->last_message_ = const_cast< ::zproto::MessageContainer*>(
      ::zproto::MessageContainer::internal_default_instance());
}
void Dialog::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) {
    delete peer_;
  }
  peer_ = NULL;
}
void Dialog::clear_last_message() {
  if (GetArenaNoVirtual() == NULL && last_message_ != NULL) {
    delete last_message_;
  }
  last_message_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Dialog::kPeerFieldNumber;
const int Dialog::kUnreadCountFieldNumber;
const int Dialog::kSortDateFieldNumber;
const int Dialog::kLastMessageFieldNumber;
const int Dialog::kFirstUnreadDateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Dialog::Dialog()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_dialogs_2eproto::InitDefaultsDialog();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.Dialog)
}
Dialog::Dialog(const Dialog& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::zproto::Peer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  if (from.has_last_message()) {
    last_message_ = new ::zproto::MessageContainer(*from.last_message_);
  } else {
    last_message_ = NULL;
  }
  ::memcpy(&sort_date_, &from.sort_date_,
    static_cast<size_t>(reinterpret_cast<char*>(&unread_count_) -
    reinterpret_cast<char*>(&sort_date_)) + sizeof(unread_count_));
  // @@protoc_insertion_point(copy_constructor:zproto.Dialog)
}

void Dialog::SharedCtor() {
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unread_count_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(unread_count_));
  _cached_size_ = 0;
}

Dialog::~Dialog() {
  // @@protoc_insertion_point(destructor:zproto.Dialog)
  SharedDtor();
}

void Dialog::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
  if (this != internal_default_instance()) delete last_message_;
}

void Dialog::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Dialog::descriptor() {
  ::protobuf_dialogs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dialogs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Dialog& Dialog::default_instance() {
  ::protobuf_dialogs_2eproto::InitDefaultsDialog();
  return *internal_default_instance();
}

Dialog* Dialog::New(::google::protobuf::Arena* arena) const {
  Dialog* n = new Dialog;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Dialog::Swap(Dialog* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Dialog::InternalSwap(Dialog* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata Dialog::GetMetadata() const {
  protobuf_dialogs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dialogs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoadDialogsReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoadDialogsReq::kMinDateFieldNumber;
const int LoadDialogsReq::kLoadModeFieldNumber;
const int LoadDialogsReq::kLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoadDialogsReq::LoadDialogsReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_dialogs_2eproto::InitDefaultsLoadDialogsReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.LoadDialogsReq)
}
LoadDialogsReq::LoadDialogsReq(const LoadDialogsReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&min_date_, &from.min_date_,
    static_cast<size_t>(reinterpret_cast<char*>(&limit_) -
    reinterpret_cast<char*>(&min_date_)) + sizeof(limit_));
  // @@protoc_insertion_point(copy_constructor:zproto.LoadDialogsReq)
}

void LoadDialogsReq::SharedCtor() {
  ::memset(&min_date_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limit_) -
      reinterpret_cast<char*>(&min_date_)) + sizeof(limit_));
  _cached_size_ = 0;
}

LoadDialogsReq::~LoadDialogsReq() {
  // @@protoc_insertion_point(destructor:zproto.LoadDialogsReq)
  SharedDtor();
}

void LoadDialogsReq::SharedDtor() {
}

void LoadDialogsReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoadDialogsReq::descriptor() {
  ::protobuf_dialogs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dialogs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoadDialogsReq& LoadDialogsReq::default_instance() {
  ::protobuf_dialogs_2eproto::InitDefaultsLoadDialogsReq();
  return *internal_default_instance();
}

LoadDialogsReq* LoadDialogsReq::New(::google::protobuf::Arena* arena) const {
  LoadDialogsReq* n = new LoadDialogsReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoadDialogsReq::Swap(LoadDialogsReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoadDialogsReq::InternalSwap(LoadDialogsReq* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata LoadDialogsReq::GetMetadata() const {
  protobuf_dialogs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dialogs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoadDialogsRsp::InitAsDefaultInstance() {
}
void LoadDialogsRsp::clear_groups() {
  groups_.Clear();
}
void LoadDialogsRsp::clear_users() {
  users_.Clear();
}
void LoadDialogsRsp::clear_user_peers() {
  user_peers_.Clear();
}
void LoadDialogsRsp::clear_group_peers() {
  group_peers_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoadDialogsRsp::kGroupsFieldNumber;
const int LoadDialogsRsp::kUsersFieldNumber;
const int LoadDialogsRsp::kDialogsFieldNumber;
const int LoadDialogsRsp::kUserPeersFieldNumber;
const int LoadDialogsRsp::kGroupPeersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoadDialogsRsp::LoadDialogsRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_dialogs_2eproto::InitDefaultsLoadDialogsRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.LoadDialogsRsp)
}
LoadDialogsRsp::LoadDialogsRsp(const LoadDialogsRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      groups_(from.groups_),
      users_(from.users_),
      dialogs_(from.dialogs_),
      user_peers_(from.user_peers_),
      group_peers_(from.group_peers_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:zproto.LoadDialogsRsp)
}

void LoadDialogsRsp::SharedCtor() {
  _cached_size_ = 0;
}

LoadDialogsRsp::~LoadDialogsRsp() {
  // @@protoc_insertion_point(destructor:zproto.LoadDialogsRsp)
  SharedDtor();
}

void LoadDialogsRsp::SharedDtor() {
}

void LoadDialogsRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoadDialogsRsp::descriptor() {
  ::protobuf_dialogs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dialogs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoadDialogsRsp& LoadDialogsRsp::default_instance() {
  ::protobuf_dialogs_2eproto::InitDefaultsLoadDialogsRsp();
  return *internal_default_instance();
}

LoadDialogsRsp* LoadDialogsRsp::New(::google::protobuf::Arena* arena) const {
  LoadDialogsRsp* n = new LoadDialogsRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoadDialogsRsp::Swap(LoadDialogsRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoadDialogsRsp::InternalSwap(LoadDialogsRsp* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata LoadDialogsRsp::GetMetadata() const {
  protobuf_dialogs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dialogs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateChatDialogReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateChatDialogReq::kPeerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateChatDialogReq::CreateChatDialogReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_dialogs_2eproto::InitDefaultsCreateChatDialogReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.CreateChatDialogReq)
}
CreateChatDialogReq::CreateChatDialogReq(const CreateChatDialogReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  peer_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.peer_id().size() > 0) {
    peer_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.peer_id_);
  }
  // @@protoc_insertion_point(copy_constructor:zproto.CreateChatDialogReq)
}

void CreateChatDialogReq::SharedCtor() {
  peer_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CreateChatDialogReq::~CreateChatDialogReq() {
  // @@protoc_insertion_point(destructor:zproto.CreateChatDialogReq)
  SharedDtor();
}

void CreateChatDialogReq::SharedDtor() {
  peer_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateChatDialogReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateChatDialogReq::descriptor() {
  ::protobuf_dialogs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dialogs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateChatDialogReq& CreateChatDialogReq::default_instance() {
  ::protobuf_dialogs_2eproto::InitDefaultsCreateChatDialogReq();
  return *internal_default_instance();
}

CreateChatDialogReq* CreateChatDialogReq::New(::google::protobuf::Arena* arena) const {
  CreateChatDialogReq* n = new CreateChatDialogReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateChatDialogReq::Swap(CreateChatDialogReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateChatDialogReq::InternalSwap(CreateChatDialogReq* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata CreateChatDialogReq::GetMetadata() const {
  protobuf_dialogs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dialogs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateChatDialogRsp::InitAsDefaultInstance() {
  ::zproto::_CreateChatDialogRsp_default_instance_._instance.get_mutable()->peer_ = const_cast< ::zproto::OutPeer*>(
      ::zproto::OutPeer::internal_default_instance());
}
void CreateChatDialogRsp::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) {
    delete peer_;
  }
  peer_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateChatDialogRsp::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateChatDialogRsp::CreateChatDialogRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_dialogs_2eproto::InitDefaultsCreateChatDialogRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.CreateChatDialogRsp)
}
CreateChatDialogRsp::CreateChatDialogRsp(const CreateChatDialogRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::zproto::OutPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:zproto.CreateChatDialogRsp)
}

void CreateChatDialogRsp::SharedCtor() {
  peer_ = NULL;
  _cached_size_ = 0;
}

CreateChatDialogRsp::~CreateChatDialogRsp() {
  // @@protoc_insertion_point(destructor:zproto.CreateChatDialogRsp)
  SharedDtor();
}

void CreateChatDialogRsp::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void CreateChatDialogRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateChatDialogRsp::descriptor() {
  ::protobuf_dialogs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dialogs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateChatDialogRsp& CreateChatDialogRsp::default_instance() {
  ::protobuf_dialogs_2eproto::InitDefaultsCreateChatDialogRsp();
  return *internal_default_instance();
}

CreateChatDialogRsp* CreateChatDialogRsp::New(::google::protobuf::Arena* arena) const {
  CreateChatDialogRsp* n = new CreateChatDialogRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateChatDialogRsp::Swap(CreateChatDialogRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateChatDialogRsp::InternalSwap(CreateChatDialogRsp* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata CreateChatDialogRsp::GetMetadata() const {
  protobuf_dialogs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dialogs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BlockPeerReq::InitAsDefaultInstance() {
  ::zproto::_BlockPeerReq_default_instance_._instance.get_mutable()->peer_ = const_cast< ::zproto::OutPeer*>(
      ::zproto::OutPeer::internal_default_instance());
}
void BlockPeerReq::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) {
    delete peer_;
  }
  peer_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlockPeerReq::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlockPeerReq::BlockPeerReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_dialogs_2eproto::InitDefaultsBlockPeerReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.BlockPeerReq)
}
BlockPeerReq::BlockPeerReq(const BlockPeerReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::zproto::OutPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:zproto.BlockPeerReq)
}

void BlockPeerReq::SharedCtor() {
  peer_ = NULL;
  _cached_size_ = 0;
}

BlockPeerReq::~BlockPeerReq() {
  // @@protoc_insertion_point(destructor:zproto.BlockPeerReq)
  SharedDtor();
}

void BlockPeerReq::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void BlockPeerReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlockPeerReq::descriptor() {
  ::protobuf_dialogs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dialogs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BlockPeerReq& BlockPeerReq::default_instance() {
  ::protobuf_dialogs_2eproto::InitDefaultsBlockPeerReq();
  return *internal_default_instance();
}

BlockPeerReq* BlockPeerReq::New(::google::protobuf::Arena* arena) const {
  BlockPeerReq* n = new BlockPeerReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BlockPeerReq::Swap(BlockPeerReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlockPeerReq::InternalSwap(BlockPeerReq* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata BlockPeerReq::GetMetadata() const {
  protobuf_dialogs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dialogs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UnblockPeerReq::InitAsDefaultInstance() {
  ::zproto::_UnblockPeerReq_default_instance_._instance.get_mutable()->peer_ = const_cast< ::zproto::OutPeer*>(
      ::zproto::OutPeer::internal_default_instance());
}
void UnblockPeerReq::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) {
    delete peer_;
  }
  peer_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnblockPeerReq::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnblockPeerReq::UnblockPeerReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_dialogs_2eproto::InitDefaultsUnblockPeerReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.UnblockPeerReq)
}
UnblockPeerReq::UnblockPeerReq(const UnblockPeerReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::zproto::OutPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:zproto.UnblockPeerReq)
}

void UnblockPeerReq::SharedCtor() {
  peer_ = NULL;
  _cached_size_ = 0;
}

UnblockPeerReq::~UnblockPeerReq() {
  // @@protoc_insertion_point(destructor:zproto.UnblockPeerReq)
  SharedDtor();
}

void UnblockPeerReq::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void UnblockPeerReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnblockPeerReq::descriptor() {
  ::protobuf_dialogs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dialogs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnblockPeerReq& UnblockPeerReq::default_instance() {
  ::protobuf_dialogs_2eproto::InitDefaultsUnblockPeerReq();
  return *internal_default_instance();
}

UnblockPeerReq* UnblockPeerReq::New(::google::protobuf::Arena* arena) const {
  UnblockPeerReq* n = new UnblockPeerReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnblockPeerReq::Swap(UnblockPeerReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnblockPeerReq::InternalSwap(UnblockPeerReq* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata UnblockPeerReq::GetMetadata() const {
  protobuf_dialogs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dialogs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TopPeerReq::InitAsDefaultInstance() {
  ::zproto::_TopPeerReq_default_instance_._instance.get_mutable()->peer_ = const_cast< ::zproto::OutPeer*>(
      ::zproto::OutPeer::internal_default_instance());
}
void TopPeerReq::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) {
    delete peer_;
  }
  peer_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TopPeerReq::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TopPeerReq::TopPeerReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_dialogs_2eproto::InitDefaultsTopPeerReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.TopPeerReq)
}
TopPeerReq::TopPeerReq(const TopPeerReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::zproto::OutPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:zproto.TopPeerReq)
}

void TopPeerReq::SharedCtor() {
  peer_ = NULL;
  _cached_size_ = 0;
}

TopPeerReq::~TopPeerReq() {
  // @@protoc_insertion_point(destructor:zproto.TopPeerReq)
  SharedDtor();
}

void TopPeerReq::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void TopPeerReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TopPeerReq::descriptor() {
  ::protobuf_dialogs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dialogs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TopPeerReq& TopPeerReq::default_instance() {
  ::protobuf_dialogs_2eproto::InitDefaultsTopPeerReq();
  return *internal_default_instance();
}

TopPeerReq* TopPeerReq::New(::google::protobuf::Arena* arena) const {
  TopPeerReq* n = new TopPeerReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TopPeerReq::Swap(TopPeerReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TopPeerReq::InternalSwap(TopPeerReq* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TopPeerReq::GetMetadata() const {
  protobuf_dialogs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dialogs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UntopPeerReq::InitAsDefaultInstance() {
  ::zproto::_UntopPeerReq_default_instance_._instance.get_mutable()->peer_ = const_cast< ::zproto::OutPeer*>(
      ::zproto::OutPeer::internal_default_instance());
}
void UntopPeerReq::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) {
    delete peer_;
  }
  peer_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UntopPeerReq::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UntopPeerReq::UntopPeerReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_dialogs_2eproto::InitDefaultsUntopPeerReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.UntopPeerReq)
}
UntopPeerReq::UntopPeerReq(const UntopPeerReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::zproto::OutPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:zproto.UntopPeerReq)
}

void UntopPeerReq::SharedCtor() {
  peer_ = NULL;
  _cached_size_ = 0;
}

UntopPeerReq::~UntopPeerReq() {
  // @@protoc_insertion_point(destructor:zproto.UntopPeerReq)
  SharedDtor();
}

void UntopPeerReq::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void UntopPeerReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UntopPeerReq::descriptor() {
  ::protobuf_dialogs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dialogs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UntopPeerReq& UntopPeerReq::default_instance() {
  ::protobuf_dialogs_2eproto::InitDefaultsUntopPeerReq();
  return *internal_default_instance();
}

UntopPeerReq* UntopPeerReq::New(::google::protobuf::Arena* arena) const {
  UntopPeerReq* n = new UntopPeerReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UntopPeerReq::Swap(UntopPeerReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UntopPeerReq::InternalSwap(UntopPeerReq* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata UntopPeerReq::GetMetadata() const {
  protobuf_dialogs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dialogs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DndPeerReq::InitAsDefaultInstance() {
  ::zproto::_DndPeerReq_default_instance_._instance.get_mutable()->peer_ = const_cast< ::zproto::OutPeer*>(
      ::zproto::OutPeer::internal_default_instance());
}
void DndPeerReq::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) {
    delete peer_;
  }
  peer_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DndPeerReq::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DndPeerReq::DndPeerReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_dialogs_2eproto::InitDefaultsDndPeerReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.DndPeerReq)
}
DndPeerReq::DndPeerReq(const DndPeerReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::zproto::OutPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:zproto.DndPeerReq)
}

void DndPeerReq::SharedCtor() {
  peer_ = NULL;
  _cached_size_ = 0;
}

DndPeerReq::~DndPeerReq() {
  // @@protoc_insertion_point(destructor:zproto.DndPeerReq)
  SharedDtor();
}

void DndPeerReq::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void DndPeerReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DndPeerReq::descriptor() {
  ::protobuf_dialogs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dialogs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DndPeerReq& DndPeerReq::default_instance() {
  ::protobuf_dialogs_2eproto::InitDefaultsDndPeerReq();
  return *internal_default_instance();
}

DndPeerReq* DndPeerReq::New(::google::protobuf::Arena* arena) const {
  DndPeerReq* n = new DndPeerReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DndPeerReq::Swap(DndPeerReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DndPeerReq::InternalSwap(DndPeerReq* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata DndPeerReq::GetMetadata() const {
  protobuf_dialogs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dialogs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UndndPeerReq::InitAsDefaultInstance() {
  ::zproto::_UndndPeerReq_default_instance_._instance.get_mutable()->peer_ = const_cast< ::zproto::OutPeer*>(
      ::zproto::OutPeer::internal_default_instance());
}
void UndndPeerReq::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) {
    delete peer_;
  }
  peer_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UndndPeerReq::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UndndPeerReq::UndndPeerReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_dialogs_2eproto::InitDefaultsUndndPeerReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.UndndPeerReq)
}
UndndPeerReq::UndndPeerReq(const UndndPeerReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::zproto::OutPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:zproto.UndndPeerReq)
}

void UndndPeerReq::SharedCtor() {
  peer_ = NULL;
  _cached_size_ = 0;
}

UndndPeerReq::~UndndPeerReq() {
  // @@protoc_insertion_point(destructor:zproto.UndndPeerReq)
  SharedDtor();
}

void UndndPeerReq::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void UndndPeerReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UndndPeerReq::descriptor() {
  ::protobuf_dialogs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dialogs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UndndPeerReq& UndndPeerReq::default_instance() {
  ::protobuf_dialogs_2eproto::InitDefaultsUndndPeerReq();
  return *internal_default_instance();
}

UndndPeerReq* UndndPeerReq::New(::google::protobuf::Arena* arena) const {
  UndndPeerReq* n = new UndndPeerReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UndndPeerReq::Swap(UndndPeerReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UndndPeerReq::InternalSwap(UndndPeerReq* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata UndndPeerReq::GetMetadata() const {
  protobuf_dialogs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dialogs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoadBlockedPeersReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoadBlockedPeersReq::LoadBlockedPeersReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_dialogs_2eproto::InitDefaultsLoadBlockedPeersReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.LoadBlockedPeersReq)
}
LoadBlockedPeersReq::LoadBlockedPeersReq(const LoadBlockedPeersReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:zproto.LoadBlockedPeersReq)
}

void LoadBlockedPeersReq::SharedCtor() {
  _cached_size_ = 0;
}

LoadBlockedPeersReq::~LoadBlockedPeersReq() {
  // @@protoc_insertion_point(destructor:zproto.LoadBlockedPeersReq)
  SharedDtor();
}

void LoadBlockedPeersReq::SharedDtor() {
}

void LoadBlockedPeersReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoadBlockedPeersReq::descriptor() {
  ::protobuf_dialogs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dialogs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoadBlockedPeersReq& LoadBlockedPeersReq::default_instance() {
  ::protobuf_dialogs_2eproto::InitDefaultsLoadBlockedPeersReq();
  return *internal_default_instance();
}

LoadBlockedPeersReq* LoadBlockedPeersReq::New(::google::protobuf::Arena* arena) const {
  LoadBlockedPeersReq* n = new LoadBlockedPeersReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoadBlockedPeersReq::Swap(LoadBlockedPeersReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoadBlockedPeersReq::InternalSwap(LoadBlockedPeersReq* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata LoadBlockedPeersReq::GetMetadata() const {
  protobuf_dialogs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dialogs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoadBlockedPeersRsp::InitAsDefaultInstance() {
}
void LoadBlockedPeersRsp::clear_peers() {
  peers_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoadBlockedPeersRsp::kPeersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoadBlockedPeersRsp::LoadBlockedPeersRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_dialogs_2eproto::InitDefaultsLoadBlockedPeersRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.LoadBlockedPeersRsp)
}
LoadBlockedPeersRsp::LoadBlockedPeersRsp(const LoadBlockedPeersRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      peers_(from.peers_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:zproto.LoadBlockedPeersRsp)
}

void LoadBlockedPeersRsp::SharedCtor() {
  _cached_size_ = 0;
}

LoadBlockedPeersRsp::~LoadBlockedPeersRsp() {
  // @@protoc_insertion_point(destructor:zproto.LoadBlockedPeersRsp)
  SharedDtor();
}

void LoadBlockedPeersRsp::SharedDtor() {
}

void LoadBlockedPeersRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoadBlockedPeersRsp::descriptor() {
  ::protobuf_dialogs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dialogs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoadBlockedPeersRsp& LoadBlockedPeersRsp::default_instance() {
  ::protobuf_dialogs_2eproto::InitDefaultsLoadBlockedPeersRsp();
  return *internal_default_instance();
}

LoadBlockedPeersRsp* LoadBlockedPeersRsp::New(::google::protobuf::Arena* arena) const {
  LoadBlockedPeersRsp* n = new LoadBlockedPeersRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoadBlockedPeersRsp::Swap(LoadBlockedPeersRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoadBlockedPeersRsp::InternalSwap(LoadBlockedPeersRsp* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata LoadBlockedPeersRsp::GetMetadata() const {
  protobuf_dialogs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dialogs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoadTopedPeersReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoadTopedPeersReq::LoadTopedPeersReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_dialogs_2eproto::InitDefaultsLoadTopedPeersReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.LoadTopedPeersReq)
}
LoadTopedPeersReq::LoadTopedPeersReq(const LoadTopedPeersReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:zproto.LoadTopedPeersReq)
}

void LoadTopedPeersReq::SharedCtor() {
  _cached_size_ = 0;
}

LoadTopedPeersReq::~LoadTopedPeersReq() {
  // @@protoc_insertion_point(destructor:zproto.LoadTopedPeersReq)
  SharedDtor();
}

void LoadTopedPeersReq::SharedDtor() {
}

void LoadTopedPeersReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoadTopedPeersReq::descriptor() {
  ::protobuf_dialogs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dialogs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoadTopedPeersReq& LoadTopedPeersReq::default_instance() {
  ::protobuf_dialogs_2eproto::InitDefaultsLoadTopedPeersReq();
  return *internal_default_instance();
}

LoadTopedPeersReq* LoadTopedPeersReq::New(::google::protobuf::Arena* arena) const {
  LoadTopedPeersReq* n = new LoadTopedPeersReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoadTopedPeersReq::Swap(LoadTopedPeersReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoadTopedPeersReq::InternalSwap(LoadTopedPeersReq* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata LoadTopedPeersReq::GetMetadata() const {
  protobuf_dialogs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dialogs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoadTopedPeersRsp::InitAsDefaultInstance() {
}
void LoadTopedPeersRsp::clear_peers() {
  peers_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoadTopedPeersRsp::kPeersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoadTopedPeersRsp::LoadTopedPeersRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_dialogs_2eproto::InitDefaultsLoadTopedPeersRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.LoadTopedPeersRsp)
}
LoadTopedPeersRsp::LoadTopedPeersRsp(const LoadTopedPeersRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      peers_(from.peers_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:zproto.LoadTopedPeersRsp)
}

void LoadTopedPeersRsp::SharedCtor() {
  _cached_size_ = 0;
}

LoadTopedPeersRsp::~LoadTopedPeersRsp() {
  // @@protoc_insertion_point(destructor:zproto.LoadTopedPeersRsp)
  SharedDtor();
}

void LoadTopedPeersRsp::SharedDtor() {
}

void LoadTopedPeersRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoadTopedPeersRsp::descriptor() {
  ::protobuf_dialogs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dialogs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoadTopedPeersRsp& LoadTopedPeersRsp::default_instance() {
  ::protobuf_dialogs_2eproto::InitDefaultsLoadTopedPeersRsp();
  return *internal_default_instance();
}

LoadTopedPeersRsp* LoadTopedPeersRsp::New(::google::protobuf::Arena* arena) const {
  LoadTopedPeersRsp* n = new LoadTopedPeersRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoadTopedPeersRsp::Swap(LoadTopedPeersRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoadTopedPeersRsp::InternalSwap(LoadTopedPeersRsp* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata LoadTopedPeersRsp::GetMetadata() const {
  protobuf_dialogs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dialogs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoadDndedPeersReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoadDndedPeersReq::LoadDndedPeersReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_dialogs_2eproto::InitDefaultsLoadDndedPeersReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.LoadDndedPeersReq)
}
LoadDndedPeersReq::LoadDndedPeersReq(const LoadDndedPeersReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:zproto.LoadDndedPeersReq)
}

void LoadDndedPeersReq::SharedCtor() {
  _cached_size_ = 0;
}

LoadDndedPeersReq::~LoadDndedPeersReq() {
  // @@protoc_insertion_point(destructor:zproto.LoadDndedPeersReq)
  SharedDtor();
}

void LoadDndedPeersReq::SharedDtor() {
}

void LoadDndedPeersReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoadDndedPeersReq::descriptor() {
  ::protobuf_dialogs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dialogs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoadDndedPeersReq& LoadDndedPeersReq::default_instance() {
  ::protobuf_dialogs_2eproto::InitDefaultsLoadDndedPeersReq();
  return *internal_default_instance();
}

LoadDndedPeersReq* LoadDndedPeersReq::New(::google::protobuf::Arena* arena) const {
  LoadDndedPeersReq* n = new LoadDndedPeersReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoadDndedPeersReq::Swap(LoadDndedPeersReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoadDndedPeersReq::InternalSwap(LoadDndedPeersReq* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata LoadDndedPeersReq::GetMetadata() const {
  protobuf_dialogs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dialogs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoadDndedPeersRsp::InitAsDefaultInstance() {
}
void LoadDndedPeersRsp::clear_peers() {
  peers_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoadDndedPeersRsp::kPeersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoadDndedPeersRsp::LoadDndedPeersRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_dialogs_2eproto::InitDefaultsLoadDndedPeersRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.LoadDndedPeersRsp)
}
LoadDndedPeersRsp::LoadDndedPeersRsp(const LoadDndedPeersRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      peers_(from.peers_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:zproto.LoadDndedPeersRsp)
}

void LoadDndedPeersRsp::SharedCtor() {
  _cached_size_ = 0;
}

LoadDndedPeersRsp::~LoadDndedPeersRsp() {
  // @@protoc_insertion_point(destructor:zproto.LoadDndedPeersRsp)
  SharedDtor();
}

void LoadDndedPeersRsp::SharedDtor() {
}

void LoadDndedPeersRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoadDndedPeersRsp::descriptor() {
  ::protobuf_dialogs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dialogs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoadDndedPeersRsp& LoadDndedPeersRsp::default_instance() {
  ::protobuf_dialogs_2eproto::InitDefaultsLoadDndedPeersRsp();
  return *internal_default_instance();
}

LoadDndedPeersRsp* LoadDndedPeersRsp::New(::google::protobuf::Arena* arena) const {
  LoadDndedPeersRsp* n = new LoadDndedPeersRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoadDndedPeersRsp::Swap(LoadDndedPeersRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoadDndedPeersRsp::InternalSwap(LoadDndedPeersRsp* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata LoadDndedPeersRsp::GetMetadata() const {
  protobuf_dialogs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dialogs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PeerBlockedNotify::InitAsDefaultInstance() {
  ::zproto::_PeerBlockedNotify_default_instance_._instance.get_mutable()->peer_ = const_cast< ::zproto::Peer*>(
      ::zproto::Peer::internal_default_instance());
}
void PeerBlockedNotify::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) {
    delete peer_;
  }
  peer_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PeerBlockedNotify::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PeerBlockedNotify::PeerBlockedNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_dialogs_2eproto::InitDefaultsPeerBlockedNotify();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.PeerBlockedNotify)
}
PeerBlockedNotify::PeerBlockedNotify(const PeerBlockedNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::zproto::Peer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:zproto.PeerBlockedNotify)
}

void PeerBlockedNotify::SharedCtor() {
  peer_ = NULL;
  _cached_size_ = 0;
}

PeerBlockedNotify::~PeerBlockedNotify() {
  // @@protoc_insertion_point(destructor:zproto.PeerBlockedNotify)
  SharedDtor();
}

void PeerBlockedNotify::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void PeerBlockedNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PeerBlockedNotify::descriptor() {
  ::protobuf_dialogs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dialogs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PeerBlockedNotify& PeerBlockedNotify::default_instance() {
  ::protobuf_dialogs_2eproto::InitDefaultsPeerBlockedNotify();
  return *internal_default_instance();
}

PeerBlockedNotify* PeerBlockedNotify::New(::google::protobuf::Arena* arena) const {
  PeerBlockedNotify* n = new PeerBlockedNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PeerBlockedNotify::Swap(PeerBlockedNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PeerBlockedNotify::InternalSwap(PeerBlockedNotify* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata PeerBlockedNotify::GetMetadata() const {
  protobuf_dialogs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dialogs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PeerUnblockedNotify::InitAsDefaultInstance() {
  ::zproto::_PeerUnblockedNotify_default_instance_._instance.get_mutable()->peer_ = const_cast< ::zproto::Peer*>(
      ::zproto::Peer::internal_default_instance());
}
void PeerUnblockedNotify::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) {
    delete peer_;
  }
  peer_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PeerUnblockedNotify::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PeerUnblockedNotify::PeerUnblockedNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_dialogs_2eproto::InitDefaultsPeerUnblockedNotify();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.PeerUnblockedNotify)
}
PeerUnblockedNotify::PeerUnblockedNotify(const PeerUnblockedNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::zproto::Peer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:zproto.PeerUnblockedNotify)
}

void PeerUnblockedNotify::SharedCtor() {
  peer_ = NULL;
  _cached_size_ = 0;
}

PeerUnblockedNotify::~PeerUnblockedNotify() {
  // @@protoc_insertion_point(destructor:zproto.PeerUnblockedNotify)
  SharedDtor();
}

void PeerUnblockedNotify::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void PeerUnblockedNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PeerUnblockedNotify::descriptor() {
  ::protobuf_dialogs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dialogs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PeerUnblockedNotify& PeerUnblockedNotify::default_instance() {
  ::protobuf_dialogs_2eproto::InitDefaultsPeerUnblockedNotify();
  return *internal_default_instance();
}

PeerUnblockedNotify* PeerUnblockedNotify::New(::google::protobuf::Arena* arena) const {
  PeerUnblockedNotify* n = new PeerUnblockedNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PeerUnblockedNotify::Swap(PeerUnblockedNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PeerUnblockedNotify::InternalSwap(PeerUnblockedNotify* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata PeerUnblockedNotify::GetMetadata() const {
  protobuf_dialogs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dialogs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PeerTopedNotify::InitAsDefaultInstance() {
  ::zproto::_PeerTopedNotify_default_instance_._instance.get_mutable()->peer_ = const_cast< ::zproto::Peer*>(
      ::zproto::Peer::internal_default_instance());
}
void PeerTopedNotify::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) {
    delete peer_;
  }
  peer_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PeerTopedNotify::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PeerTopedNotify::PeerTopedNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_dialogs_2eproto::InitDefaultsPeerTopedNotify();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.PeerTopedNotify)
}
PeerTopedNotify::PeerTopedNotify(const PeerTopedNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::zproto::Peer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:zproto.PeerTopedNotify)
}

void PeerTopedNotify::SharedCtor() {
  peer_ = NULL;
  _cached_size_ = 0;
}

PeerTopedNotify::~PeerTopedNotify() {
  // @@protoc_insertion_point(destructor:zproto.PeerTopedNotify)
  SharedDtor();
}

void PeerTopedNotify::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void PeerTopedNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PeerTopedNotify::descriptor() {
  ::protobuf_dialogs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dialogs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PeerTopedNotify& PeerTopedNotify::default_instance() {
  ::protobuf_dialogs_2eproto::InitDefaultsPeerTopedNotify();
  return *internal_default_instance();
}

PeerTopedNotify* PeerTopedNotify::New(::google::protobuf::Arena* arena) const {
  PeerTopedNotify* n = new PeerTopedNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PeerTopedNotify::Swap(PeerTopedNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PeerTopedNotify::InternalSwap(PeerTopedNotify* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata PeerTopedNotify::GetMetadata() const {
  protobuf_dialogs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dialogs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PeerUntopedNotify::InitAsDefaultInstance() {
  ::zproto::_PeerUntopedNotify_default_instance_._instance.get_mutable()->peer_ = const_cast< ::zproto::Peer*>(
      ::zproto::Peer::internal_default_instance());
}
void PeerUntopedNotify::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) {
    delete peer_;
  }
  peer_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PeerUntopedNotify::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PeerUntopedNotify::PeerUntopedNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_dialogs_2eproto::InitDefaultsPeerUntopedNotify();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.PeerUntopedNotify)
}
PeerUntopedNotify::PeerUntopedNotify(const PeerUntopedNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::zproto::Peer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:zproto.PeerUntopedNotify)
}

void PeerUntopedNotify::SharedCtor() {
  peer_ = NULL;
  _cached_size_ = 0;
}

PeerUntopedNotify::~PeerUntopedNotify() {
  // @@protoc_insertion_point(destructor:zproto.PeerUntopedNotify)
  SharedDtor();
}

void PeerUntopedNotify::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void PeerUntopedNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PeerUntopedNotify::descriptor() {
  ::protobuf_dialogs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dialogs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PeerUntopedNotify& PeerUntopedNotify::default_instance() {
  ::protobuf_dialogs_2eproto::InitDefaultsPeerUntopedNotify();
  return *internal_default_instance();
}

PeerUntopedNotify* PeerUntopedNotify::New(::google::protobuf::Arena* arena) const {
  PeerUntopedNotify* n = new PeerUntopedNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PeerUntopedNotify::Swap(PeerUntopedNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PeerUntopedNotify::InternalSwap(PeerUntopedNotify* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata PeerUntopedNotify::GetMetadata() const {
  protobuf_dialogs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dialogs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PeerDndedNotify::InitAsDefaultInstance() {
  ::zproto::_PeerDndedNotify_default_instance_._instance.get_mutable()->peer_ = const_cast< ::zproto::Peer*>(
      ::zproto::Peer::internal_default_instance());
}
void PeerDndedNotify::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) {
    delete peer_;
  }
  peer_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PeerDndedNotify::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PeerDndedNotify::PeerDndedNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_dialogs_2eproto::InitDefaultsPeerDndedNotify();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.PeerDndedNotify)
}
PeerDndedNotify::PeerDndedNotify(const PeerDndedNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::zproto::Peer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:zproto.PeerDndedNotify)
}

void PeerDndedNotify::SharedCtor() {
  peer_ = NULL;
  _cached_size_ = 0;
}

PeerDndedNotify::~PeerDndedNotify() {
  // @@protoc_insertion_point(destructor:zproto.PeerDndedNotify)
  SharedDtor();
}

void PeerDndedNotify::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void PeerDndedNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PeerDndedNotify::descriptor() {
  ::protobuf_dialogs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dialogs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PeerDndedNotify& PeerDndedNotify::default_instance() {
  ::protobuf_dialogs_2eproto::InitDefaultsPeerDndedNotify();
  return *internal_default_instance();
}

PeerDndedNotify* PeerDndedNotify::New(::google::protobuf::Arena* arena) const {
  PeerDndedNotify* n = new PeerDndedNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PeerDndedNotify::Swap(PeerDndedNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PeerDndedNotify::InternalSwap(PeerDndedNotify* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata PeerDndedNotify::GetMetadata() const {
  protobuf_dialogs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dialogs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PeerUndndedNotify::InitAsDefaultInstance() {
  ::zproto::_PeerUndndedNotify_default_instance_._instance.get_mutable()->peer_ = const_cast< ::zproto::Peer*>(
      ::zproto::Peer::internal_default_instance());
}
void PeerUndndedNotify::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) {
    delete peer_;
  }
  peer_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PeerUndndedNotify::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PeerUndndedNotify::PeerUndndedNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_dialogs_2eproto::InitDefaultsPeerUndndedNotify();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.PeerUndndedNotify)
}
PeerUndndedNotify::PeerUndndedNotify(const PeerUndndedNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::zproto::Peer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:zproto.PeerUndndedNotify)
}

void PeerUndndedNotify::SharedCtor() {
  peer_ = NULL;
  _cached_size_ = 0;
}

PeerUndndedNotify::~PeerUndndedNotify() {
  // @@protoc_insertion_point(destructor:zproto.PeerUndndedNotify)
  SharedDtor();
}

void PeerUndndedNotify::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void PeerUndndedNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PeerUndndedNotify::descriptor() {
  ::protobuf_dialogs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dialogs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PeerUndndedNotify& PeerUndndedNotify::default_instance() {
  ::protobuf_dialogs_2eproto::InitDefaultsPeerUndndedNotify();
  return *internal_default_instance();
}

PeerUndndedNotify* PeerUndndedNotify::New(::google::protobuf::Arena* arena) const {
  PeerUndndedNotify* n = new PeerUndndedNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PeerUndndedNotify::Swap(PeerUndndedNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PeerUndndedNotify::InternalSwap(PeerUndndedNotify* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata PeerUndndedNotify::GetMetadata() const {
  protobuf_dialogs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dialogs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace zproto

// @@protoc_insertion_point(global_scope)
