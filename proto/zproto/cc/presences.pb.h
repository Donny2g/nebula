// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: presences.proto

#ifndef PROTOBUF_presences_2eproto__INCLUDED
#define PROTOBUF_presences_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "bases.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_presences_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[6];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsClientOnlineReqImpl();
void InitDefaultsClientOnlineReq();
void InitDefaultsClientOnlineRspImpl();
void InitDefaultsClientOnlineRsp();
void InitDefaultsClientOfflineReqImpl();
void InitDefaultsClientOfflineReq();
void InitDefaultsClientOfflineRspImpl();
void InitDefaultsClientOfflineRsp();
void InitDefaultsQueryOnlineUserReqImpl();
void InitDefaultsQueryOnlineUserReq();
void InitDefaultsQueryOnlineUserRspImpl();
void InitDefaultsQueryOnlineUserRsp();
inline void InitDefaults() {
  InitDefaultsClientOnlineReq();
  InitDefaultsClientOnlineRsp();
  InitDefaultsClientOfflineReq();
  InitDefaultsClientOfflineRsp();
  InitDefaultsQueryOnlineUserReq();
  InitDefaultsQueryOnlineUserRsp();
}
}  // namespace protobuf_presences_2eproto
namespace zproto {
class ClientOfflineReq;
class ClientOfflineReqDefaultTypeInternal;
extern ClientOfflineReqDefaultTypeInternal _ClientOfflineReq_default_instance_;
class ClientOfflineRsp;
class ClientOfflineRspDefaultTypeInternal;
extern ClientOfflineRspDefaultTypeInternal _ClientOfflineRsp_default_instance_;
class ClientOnlineReq;
class ClientOnlineReqDefaultTypeInternal;
extern ClientOnlineReqDefaultTypeInternal _ClientOnlineReq_default_instance_;
class ClientOnlineRsp;
class ClientOnlineRspDefaultTypeInternal;
extern ClientOnlineRspDefaultTypeInternal _ClientOnlineRsp_default_instance_;
class QueryOnlineUserReq;
class QueryOnlineUserReqDefaultTypeInternal;
extern QueryOnlineUserReqDefaultTypeInternal _QueryOnlineUserReq_default_instance_;
class QueryOnlineUserRsp;
class QueryOnlineUserRspDefaultTypeInternal;
extern QueryOnlineUserRspDefaultTypeInternal _QueryOnlineUserRsp_default_instance_;
}  // namespace zproto
namespace zproto {

// ===================================================================

class ClientOnlineReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.ClientOnlineReq) */ {
 public:
  ClientOnlineReq();
  virtual ~ClientOnlineReq();

  ClientOnlineReq(const ClientOnlineReq& from);

  inline ClientOnlineReq& operator=(const ClientOnlineReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientOnlineReq(ClientOnlineReq&& from) noexcept
    : ClientOnlineReq() {
    *this = ::std::move(from);
  }

  inline ClientOnlineReq& operator=(ClientOnlineReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientOnlineReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ClientOnlineReq* internal_default_instance() {
    return reinterpret_cast<const ClientOnlineReq*>(
               &_ClientOnlineReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ClientOnlineReq* other);
  friend void swap(ClientOnlineReq& a, ClientOnlineReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientOnlineReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientOnlineReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClientOnlineReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string user_id = 4;
  void clear_user_id();
  static const int kUserIdFieldNumber = 4;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  #if LANG_CXX11
  void set_user_id(::std::string&& value);
  #endif
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // uint64 conn_id = 2;
  void clear_conn_id();
  static const int kConnIdFieldNumber = 2;
  ::google::protobuf::uint64 conn_id() const;
  void set_conn_id(::google::protobuf::uint64 value);

  // uint32 server_id = 1;
  void clear_server_id();
  static const int kServerIdFieldNumber = 1;
  ::google::protobuf::uint32 server_id() const;
  void set_server_id(::google::protobuf::uint32 value);

  // uint32 app_id = 3;
  void clear_app_id();
  static const int kAppIdFieldNumber = 3;
  ::google::protobuf::uint32 app_id() const;
  void set_app_id(::google::protobuf::uint32 value);

  // uint32 state = 5;
  void clear_state();
  static const int kStateFieldNumber = 5;
  ::google::protobuf::uint32 state() const;
  void set_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:zproto.ClientOnlineReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::uint64 conn_id_;
  ::google::protobuf::uint32 server_id_;
  ::google::protobuf::uint32 app_id_;
  ::google::protobuf::uint32 state_;
  mutable int _cached_size_;
  friend struct ::protobuf_presences_2eproto::TableStruct;
  friend void ::protobuf_presences_2eproto::InitDefaultsClientOnlineReqImpl();
};
// -------------------------------------------------------------------

class ClientOnlineRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.ClientOnlineRsp) */ {
 public:
  ClientOnlineRsp();
  virtual ~ClientOnlineRsp();

  ClientOnlineRsp(const ClientOnlineRsp& from);

  inline ClientOnlineRsp& operator=(const ClientOnlineRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientOnlineRsp(ClientOnlineRsp&& from) noexcept
    : ClientOnlineRsp() {
    *this = ::std::move(from);
  }

  inline ClientOnlineRsp& operator=(ClientOnlineRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientOnlineRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ClientOnlineRsp* internal_default_instance() {
    return reinterpret_cast<const ClientOnlineRsp*>(
               &_ClientOnlineRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(ClientOnlineRsp* other);
  friend void swap(ClientOnlineRsp& a, ClientOnlineRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientOnlineRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientOnlineRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClientOnlineRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 index_id = 1;
  void clear_index_id();
  static const int kIndexIdFieldNumber = 1;
  ::google::protobuf::uint64 index_id() const;
  void set_index_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:zproto.ClientOnlineRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 index_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_presences_2eproto::TableStruct;
  friend void ::protobuf_presences_2eproto::InitDefaultsClientOnlineRspImpl();
};
// -------------------------------------------------------------------

class ClientOfflineReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.ClientOfflineReq) */ {
 public:
  ClientOfflineReq();
  virtual ~ClientOfflineReq();

  ClientOfflineReq(const ClientOfflineReq& from);

  inline ClientOfflineReq& operator=(const ClientOfflineReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientOfflineReq(ClientOfflineReq&& from) noexcept
    : ClientOfflineReq() {
    *this = ::std::move(from);
  }

  inline ClientOfflineReq& operator=(ClientOfflineReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientOfflineReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ClientOfflineReq* internal_default_instance() {
    return reinterpret_cast<const ClientOfflineReq*>(
               &_ClientOfflineReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(ClientOfflineReq* other);
  friend void swap(ClientOfflineReq& a, ClientOfflineReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientOfflineReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientOfflineReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClientOfflineReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 conn_id = 2;
  void clear_conn_id();
  static const int kConnIdFieldNumber = 2;
  ::google::protobuf::uint64 conn_id() const;
  void set_conn_id(::google::protobuf::uint64 value);

  // uint32 server_id = 1;
  void clear_server_id();
  static const int kServerIdFieldNumber = 1;
  ::google::protobuf::uint32 server_id() const;
  void set_server_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:zproto.ClientOfflineReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 conn_id_;
  ::google::protobuf::uint32 server_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_presences_2eproto::TableStruct;
  friend void ::protobuf_presences_2eproto::InitDefaultsClientOfflineReqImpl();
};
// -------------------------------------------------------------------

class ClientOfflineRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.ClientOfflineRsp) */ {
 public:
  ClientOfflineRsp();
  virtual ~ClientOfflineRsp();

  ClientOfflineRsp(const ClientOfflineRsp& from);

  inline ClientOfflineRsp& operator=(const ClientOfflineRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientOfflineRsp(ClientOfflineRsp&& from) noexcept
    : ClientOfflineRsp() {
    *this = ::std::move(from);
  }

  inline ClientOfflineRsp& operator=(ClientOfflineRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientOfflineRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ClientOfflineRsp* internal_default_instance() {
    return reinterpret_cast<const ClientOfflineRsp*>(
               &_ClientOfflineRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(ClientOfflineRsp* other);
  friend void swap(ClientOfflineRsp& a, ClientOfflineRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientOfflineRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientOfflineRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClientOfflineRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 index_id = 1;
  void clear_index_id();
  static const int kIndexIdFieldNumber = 1;
  ::google::protobuf::uint64 index_id() const;
  void set_index_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:zproto.ClientOfflineRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 index_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_presences_2eproto::TableStruct;
  friend void ::protobuf_presences_2eproto::InitDefaultsClientOfflineRspImpl();
};
// -------------------------------------------------------------------

class QueryOnlineUserReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.QueryOnlineUserReq) */ {
 public:
  QueryOnlineUserReq();
  virtual ~QueryOnlineUserReq();

  QueryOnlineUserReq(const QueryOnlineUserReq& from);

  inline QueryOnlineUserReq& operator=(const QueryOnlineUserReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QueryOnlineUserReq(QueryOnlineUserReq&& from) noexcept
    : QueryOnlineUserReq() {
    *this = ::std::move(from);
  }

  inline QueryOnlineUserReq& operator=(QueryOnlineUserReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryOnlineUserReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QueryOnlineUserReq* internal_default_instance() {
    return reinterpret_cast<const QueryOnlineUserReq*>(
               &_QueryOnlineUserReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(QueryOnlineUserReq* other);
  friend void swap(QueryOnlineUserReq& a, QueryOnlineUserReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QueryOnlineUserReq* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryOnlineUserReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryOnlineUserReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .zproto.UserID user_id_list = 1;
  int user_id_list_size() const;
  void clear_user_id_list();
  static const int kUserIdListFieldNumber = 1;
  const ::zproto::UserID& user_id_list(int index) const;
  ::zproto::UserID* mutable_user_id_list(int index);
  ::zproto::UserID* add_user_id_list();
  ::google::protobuf::RepeatedPtrField< ::zproto::UserID >*
      mutable_user_id_list();
  const ::google::protobuf::RepeatedPtrField< ::zproto::UserID >&
      user_id_list() const;

  // @@protoc_insertion_point(class_scope:zproto.QueryOnlineUserReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::zproto::UserID > user_id_list_;
  mutable int _cached_size_;
  friend struct ::protobuf_presences_2eproto::TableStruct;
  friend void ::protobuf_presences_2eproto::InitDefaultsQueryOnlineUserReqImpl();
};
// -------------------------------------------------------------------

class QueryOnlineUserRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.QueryOnlineUserRsp) */ {
 public:
  QueryOnlineUserRsp();
  virtual ~QueryOnlineUserRsp();

  QueryOnlineUserRsp(const QueryOnlineUserRsp& from);

  inline QueryOnlineUserRsp& operator=(const QueryOnlineUserRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QueryOnlineUserRsp(QueryOnlineUserRsp&& from) noexcept
    : QueryOnlineUserRsp() {
    *this = ::std::move(from);
  }

  inline QueryOnlineUserRsp& operator=(QueryOnlineUserRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryOnlineUserRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QueryOnlineUserRsp* internal_default_instance() {
    return reinterpret_cast<const QueryOnlineUserRsp*>(
               &_QueryOnlineUserRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(QueryOnlineUserRsp* other);
  friend void swap(QueryOnlineUserRsp& a, QueryOnlineUserRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QueryOnlineUserRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryOnlineUserRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryOnlineUserRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .zproto.OnlineUser online_users = 1;
  int online_users_size() const;
  void clear_online_users();
  static const int kOnlineUsersFieldNumber = 1;
  const ::zproto::OnlineUser& online_users(int index) const;
  ::zproto::OnlineUser* mutable_online_users(int index);
  ::zproto::OnlineUser* add_online_users();
  ::google::protobuf::RepeatedPtrField< ::zproto::OnlineUser >*
      mutable_online_users();
  const ::google::protobuf::RepeatedPtrField< ::zproto::OnlineUser >&
      online_users() const;

  // @@protoc_insertion_point(class_scope:zproto.QueryOnlineUserRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::zproto::OnlineUser > online_users_;
  mutable int _cached_size_;
  friend struct ::protobuf_presences_2eproto::TableStruct;
  friend void ::protobuf_presences_2eproto::InitDefaultsQueryOnlineUserRspImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ClientOnlineReq

// uint32 server_id = 1;
inline void ClientOnlineReq::clear_server_id() {
  server_id_ = 0u;
}
inline ::google::protobuf::uint32 ClientOnlineReq::server_id() const {
  // @@protoc_insertion_point(field_get:zproto.ClientOnlineReq.server_id)
  return server_id_;
}
inline void ClientOnlineReq::set_server_id(::google::protobuf::uint32 value) {
  
  server_id_ = value;
  // @@protoc_insertion_point(field_set:zproto.ClientOnlineReq.server_id)
}

// uint64 conn_id = 2;
inline void ClientOnlineReq::clear_conn_id() {
  conn_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ClientOnlineReq::conn_id() const {
  // @@protoc_insertion_point(field_get:zproto.ClientOnlineReq.conn_id)
  return conn_id_;
}
inline void ClientOnlineReq::set_conn_id(::google::protobuf::uint64 value) {
  
  conn_id_ = value;
  // @@protoc_insertion_point(field_set:zproto.ClientOnlineReq.conn_id)
}

// uint32 app_id = 3;
inline void ClientOnlineReq::clear_app_id() {
  app_id_ = 0u;
}
inline ::google::protobuf::uint32 ClientOnlineReq::app_id() const {
  // @@protoc_insertion_point(field_get:zproto.ClientOnlineReq.app_id)
  return app_id_;
}
inline void ClientOnlineReq::set_app_id(::google::protobuf::uint32 value) {
  
  app_id_ = value;
  // @@protoc_insertion_point(field_set:zproto.ClientOnlineReq.app_id)
}

// string user_id = 4;
inline void ClientOnlineReq::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClientOnlineReq::user_id() const {
  // @@protoc_insertion_point(field_get:zproto.ClientOnlineReq.user_id)
  return user_id_.GetNoArena();
}
inline void ClientOnlineReq::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.ClientOnlineReq.user_id)
}
#if LANG_CXX11
inline void ClientOnlineReq::set_user_id(::std::string&& value) {
  
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zproto.ClientOnlineReq.user_id)
}
#endif
inline void ClientOnlineReq::set_user_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.ClientOnlineReq.user_id)
}
inline void ClientOnlineReq::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.ClientOnlineReq.user_id)
}
inline ::std::string* ClientOnlineReq::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:zproto.ClientOnlineReq.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientOnlineReq::release_user_id() {
  // @@protoc_insertion_point(field_release:zproto.ClientOnlineReq.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientOnlineReq::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:zproto.ClientOnlineReq.user_id)
}

// uint32 state = 5;
inline void ClientOnlineReq::clear_state() {
  state_ = 0u;
}
inline ::google::protobuf::uint32 ClientOnlineReq::state() const {
  // @@protoc_insertion_point(field_get:zproto.ClientOnlineReq.state)
  return state_;
}
inline void ClientOnlineReq::set_state(::google::protobuf::uint32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:zproto.ClientOnlineReq.state)
}

// -------------------------------------------------------------------

// ClientOnlineRsp

// uint64 index_id = 1;
inline void ClientOnlineRsp::clear_index_id() {
  index_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ClientOnlineRsp::index_id() const {
  // @@protoc_insertion_point(field_get:zproto.ClientOnlineRsp.index_id)
  return index_id_;
}
inline void ClientOnlineRsp::set_index_id(::google::protobuf::uint64 value) {
  
  index_id_ = value;
  // @@protoc_insertion_point(field_set:zproto.ClientOnlineRsp.index_id)
}

// -------------------------------------------------------------------

// ClientOfflineReq

// uint32 server_id = 1;
inline void ClientOfflineReq::clear_server_id() {
  server_id_ = 0u;
}
inline ::google::protobuf::uint32 ClientOfflineReq::server_id() const {
  // @@protoc_insertion_point(field_get:zproto.ClientOfflineReq.server_id)
  return server_id_;
}
inline void ClientOfflineReq::set_server_id(::google::protobuf::uint32 value) {
  
  server_id_ = value;
  // @@protoc_insertion_point(field_set:zproto.ClientOfflineReq.server_id)
}

// uint64 conn_id = 2;
inline void ClientOfflineReq::clear_conn_id() {
  conn_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ClientOfflineReq::conn_id() const {
  // @@protoc_insertion_point(field_get:zproto.ClientOfflineReq.conn_id)
  return conn_id_;
}
inline void ClientOfflineReq::set_conn_id(::google::protobuf::uint64 value) {
  
  conn_id_ = value;
  // @@protoc_insertion_point(field_set:zproto.ClientOfflineReq.conn_id)
}

// -------------------------------------------------------------------

// ClientOfflineRsp

// uint64 index_id = 1;
inline void ClientOfflineRsp::clear_index_id() {
  index_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ClientOfflineRsp::index_id() const {
  // @@protoc_insertion_point(field_get:zproto.ClientOfflineRsp.index_id)
  return index_id_;
}
inline void ClientOfflineRsp::set_index_id(::google::protobuf::uint64 value) {
  
  index_id_ = value;
  // @@protoc_insertion_point(field_set:zproto.ClientOfflineRsp.index_id)
}

// -------------------------------------------------------------------

// QueryOnlineUserReq

// repeated .zproto.UserID user_id_list = 1;
inline int QueryOnlineUserReq::user_id_list_size() const {
  return user_id_list_.size();
}
inline const ::zproto::UserID& QueryOnlineUserReq::user_id_list(int index) const {
  // @@protoc_insertion_point(field_get:zproto.QueryOnlineUserReq.user_id_list)
  return user_id_list_.Get(index);
}
inline ::zproto::UserID* QueryOnlineUserReq::mutable_user_id_list(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.QueryOnlineUserReq.user_id_list)
  return user_id_list_.Mutable(index);
}
inline ::zproto::UserID* QueryOnlineUserReq::add_user_id_list() {
  // @@protoc_insertion_point(field_add:zproto.QueryOnlineUserReq.user_id_list)
  return user_id_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::zproto::UserID >*
QueryOnlineUserReq::mutable_user_id_list() {
  // @@protoc_insertion_point(field_mutable_list:zproto.QueryOnlineUserReq.user_id_list)
  return &user_id_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::zproto::UserID >&
QueryOnlineUserReq::user_id_list() const {
  // @@protoc_insertion_point(field_list:zproto.QueryOnlineUserReq.user_id_list)
  return user_id_list_;
}

// -------------------------------------------------------------------

// QueryOnlineUserRsp

// repeated .zproto.OnlineUser online_users = 1;
inline int QueryOnlineUserRsp::online_users_size() const {
  return online_users_.size();
}
inline const ::zproto::OnlineUser& QueryOnlineUserRsp::online_users(int index) const {
  // @@protoc_insertion_point(field_get:zproto.QueryOnlineUserRsp.online_users)
  return online_users_.Get(index);
}
inline ::zproto::OnlineUser* QueryOnlineUserRsp::mutable_online_users(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.QueryOnlineUserRsp.online_users)
  return online_users_.Mutable(index);
}
inline ::zproto::OnlineUser* QueryOnlineUserRsp::add_online_users() {
  // @@protoc_insertion_point(field_add:zproto.QueryOnlineUserRsp.online_users)
  return online_users_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::zproto::OnlineUser >*
QueryOnlineUserRsp::mutable_online_users() {
  // @@protoc_insertion_point(field_mutable_list:zproto.QueryOnlineUserRsp.online_users)
  return &online_users_;
}
inline const ::google::protobuf::RepeatedPtrField< ::zproto::OnlineUser >&
QueryOnlineUserRsp::online_users() const {
  // @@protoc_insertion_point(field_list:zproto.QueryOnlineUserRsp.online_users)
  return online_users_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace zproto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_presences_2eproto__INCLUDED
