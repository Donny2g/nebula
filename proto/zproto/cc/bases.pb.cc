// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bases.proto

#include "bases.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace zproto {
class EnumHelperDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EnumHelper>
      _instance;
} _EnumHelper_default_instance_;
class UserIDDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserID>
      _instance;
} _UserID_default_instance_;
class OnlineSessionStatusEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OnlineSessionStatusEntry>
      _instance;
} _OnlineSessionStatusEntry_default_instance_;
class UserToekenDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserToeken>
      _instance;
} _UserToeken_default_instance_;
class UserInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserInfo>
      _instance;
} _UserInfo_default_instance_;
class OnlineUserDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OnlineUser>
      _instance;
} _OnlineUser_default_instance_;
class MessageContainerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageContainer>
      _instance;
} _MessageContainer_default_instance_;
class DialogDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Dialog>
      _instance;
} _Dialog_default_instance_;
}  // namespace zproto
namespace protobuf_bases_2eproto {
void InitDefaultsEnumHelperImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::zproto::_EnumHelper_default_instance_;
    new (ptr) ::zproto::EnumHelper();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::EnumHelper::InitAsDefaultInstance();
}

void InitDefaultsEnumHelper() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEnumHelperImpl);
}

void InitDefaultsUserIDImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::zproto::_UserID_default_instance_;
    new (ptr) ::zproto::UserID();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::UserID::InitAsDefaultInstance();
}

void InitDefaultsUserID() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserIDImpl);
}

void InitDefaultsOnlineSessionStatusEntryImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::zproto::_OnlineSessionStatusEntry_default_instance_;
    new (ptr) ::zproto::OnlineSessionStatusEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::OnlineSessionStatusEntry::InitAsDefaultInstance();
}

void InitDefaultsOnlineSessionStatusEntry() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOnlineSessionStatusEntryImpl);
}

void InitDefaultsUserToekenImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::zproto::_UserToeken_default_instance_;
    new (ptr) ::zproto::UserToeken();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::UserToeken::InitAsDefaultInstance();
}

void InitDefaultsUserToeken() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserToekenImpl);
}

void InitDefaultsUserInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::zproto::_UserInfo_default_instance_;
    new (ptr) ::zproto::UserInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::UserInfo::InitAsDefaultInstance();
}

void InitDefaultsUserInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserInfoImpl);
}

void InitDefaultsOnlineUserImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::zproto::_OnlineUser_default_instance_;
    new (ptr) ::zproto::OnlineUser();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::OnlineUser::InitAsDefaultInstance();
}

void InitDefaultsOnlineUser() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOnlineUserImpl);
}

void InitDefaultsMessageContainerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_peers_2eproto::InitDefaultsPeer();
  {
    void* ptr = &::zproto::_MessageContainer_default_instance_;
    new (ptr) ::zproto::MessageContainer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::MessageContainer::InitAsDefaultInstance();
}

void InitDefaultsMessageContainer() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMessageContainerImpl);
}

void InitDefaultsDialogImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_peers_2eproto::InitDefaultsPeer();
  {
    void* ptr = &::zproto::_Dialog_default_instance_;
    new (ptr) ::zproto::Dialog();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zproto::Dialog::InitAsDefaultInstance();
}

void InitDefaultsDialog() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDialogImpl);
}

::google::protobuf::Metadata file_level_metadata[8];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::EnumHelper, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::UserID, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::UserID, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::UserID, user_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::OnlineSessionStatusEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::OnlineSessionStatusEntry, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::OnlineSessionStatusEntry, user_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::UserToeken, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::UserToeken, app_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::UserToeken, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::UserToeken, user_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::UserInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::UserInfo, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::UserInfo, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::UserInfo, push_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::UserInfo, avatar_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::OnlineUser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::OnlineUser, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::OnlineUser, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::OnlineUser, server_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::OnlineUser, conn_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageContainer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageContainer, message_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageContainer, sender_user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageContainer, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageContainer, client_message_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageContainer, message_seq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageContainer, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageContainer, message_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageContainer, message_content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageContainer, passthrough_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::MessageContainer, updated_at_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::Dialog, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zproto::Dialog, peer_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::zproto::EnumHelper)},
  { 5, -1, sizeof(::zproto::UserID)},
  { 12, -1, sizeof(::zproto::OnlineSessionStatusEntry)},
  { 19, -1, sizeof(::zproto::UserToeken)},
  { 27, -1, sizeof(::zproto::UserInfo)},
  { 36, -1, sizeof(::zproto::OnlineUser)},
  { 45, -1, sizeof(::zproto::MessageContainer)},
  { 60, -1, sizeof(::zproto::Dialog)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_EnumHelper_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_UserID_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_OnlineSessionStatusEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_UserToeken_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_UserInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_OnlineUser_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_MessageContainer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zproto::_Dialog_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "bases.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013bases.proto\022\006zproto\032\013peers.proto\"\346\001\n\nE"
      "numHelper\"J\n\014ListLoadMode\022\025\n\021ListLoadMod"
      "e_NONE\020\000\022\013\n\007FOWRARD\020\001\022\014\n\010BACKWARD\020\002\022\010\n\004B"
      "OTH\020\003\"G\n\014MessageState\022\025\n\021MessageState_NO"
      "NE\020\000\022\010\n\004SENT\020\001\022\014\n\010RECEIVED\020\002\022\010\n\004READ\020\003\"C"
      "\n\013MessageType\022\024\n\020MessageType_NONE\020\000\022\010\n\004T"
      "EXT\020\001\022\t\n\005AUDIO\020\002\022\t\n\005VIDEO\020\003\")\n\006UserID\022\016\n"
      "\006app_id\030\001 \001(\r\022\017\n\007user_id\030\002 \001(\t\";\n\030Online"
      "SessionStatusEntry\022\016\n\006app_id\030\001 \001(\r\022\017\n\007us"
      "er_id\030\002 \001(\t\"B\n\nUserToeken\022\017\n\007app_key\030\001 \001"
      "(\t\022\017\n\007user_id\030\002 \001(\t\022\022\n\nuser_token\030\003 \001(\t\""
      "N\n\010UserInfo\022\016\n\006app_id\030\001 \001(\r\022\017\n\007user_id\030\002"
      " \001(\t\022\021\n\tpush_name\030\003 \001(\t\022\016\n\006avatar\030\004 \001(\t\""
      "Q\n\nOnlineUser\022\016\n\006app_id\030\001 \001(\r\022\017\n\007user_id"
      "\030\002 \001(\t\022\021\n\tserver_id\030\003 \001(\r\022\017\n\007conn_id\030\004 \001"
      "(\004\"\267\002\n\020MessageContainer\022\022\n\nmessage_id\030\001 "
      "\001(\004\022\026\n\016sender_user_id\030\002 \001(\t\022\032\n\004peer\030\003 \001("
      "\0132\014.zproto.Peer\022\031\n\021client_message_id\030\004 \001"
      "(\004\022\023\n\013message_seq\030\005 \001(\004\022.\n\005state\030\006 \001(\0162\037"
      ".zproto.EnumHelper.MessageState\0224\n\014messa"
      "ge_type\030\007 \001(\0162\036.zproto.EnumHelper.Messag"
      "eType\022\027\n\017message_content\030\010 \001(\014\022\030\n\020passth"
      "rough_data\030\t \001(\014\022\022\n\nupdated_at\030\n \001(\004\"$\n\006"
      "Dialog\022\032\n\004peer\030\001 \001(\0132\014.zproto.PeerB#\n\027co"
      "m.zchat.engine.zprotoB\006ZProtoH\002b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 999);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "bases.proto", &protobuf_RegisterTypes);
  ::protobuf_peers_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_bases_2eproto
namespace zproto {
const ::google::protobuf::EnumDescriptor* EnumHelper_ListLoadMode_descriptor() {
  protobuf_bases_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bases_2eproto::file_level_enum_descriptors[0];
}
bool EnumHelper_ListLoadMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EnumHelper_ListLoadMode EnumHelper::ListLoadMode_NONE;
const EnumHelper_ListLoadMode EnumHelper::FOWRARD;
const EnumHelper_ListLoadMode EnumHelper::BACKWARD;
const EnumHelper_ListLoadMode EnumHelper::BOTH;
const EnumHelper_ListLoadMode EnumHelper::ListLoadMode_MIN;
const EnumHelper_ListLoadMode EnumHelper::ListLoadMode_MAX;
const int EnumHelper::ListLoadMode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EnumHelper_MessageState_descriptor() {
  protobuf_bases_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bases_2eproto::file_level_enum_descriptors[1];
}
bool EnumHelper_MessageState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EnumHelper_MessageState EnumHelper::MessageState_NONE;
const EnumHelper_MessageState EnumHelper::SENT;
const EnumHelper_MessageState EnumHelper::RECEIVED;
const EnumHelper_MessageState EnumHelper::READ;
const EnumHelper_MessageState EnumHelper::MessageState_MIN;
const EnumHelper_MessageState EnumHelper::MessageState_MAX;
const int EnumHelper::MessageState_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EnumHelper_MessageType_descriptor() {
  protobuf_bases_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bases_2eproto::file_level_enum_descriptors[2];
}
bool EnumHelper_MessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EnumHelper_MessageType EnumHelper::MessageType_NONE;
const EnumHelper_MessageType EnumHelper::TEXT;
const EnumHelper_MessageType EnumHelper::AUDIO;
const EnumHelper_MessageType EnumHelper::VIDEO;
const EnumHelper_MessageType EnumHelper::MessageType_MIN;
const EnumHelper_MessageType EnumHelper::MessageType_MAX;
const int EnumHelper::MessageType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void EnumHelper::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnumHelper::EnumHelper()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_bases_2eproto::InitDefaultsEnumHelper();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.EnumHelper)
}
EnumHelper::EnumHelper(const EnumHelper& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:zproto.EnumHelper)
}

void EnumHelper::SharedCtor() {
  _cached_size_ = 0;
}

EnumHelper::~EnumHelper() {
  // @@protoc_insertion_point(destructor:zproto.EnumHelper)
  SharedDtor();
}

void EnumHelper::SharedDtor() {
}

void EnumHelper::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnumHelper::descriptor() {
  ::protobuf_bases_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bases_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnumHelper& EnumHelper::default_instance() {
  ::protobuf_bases_2eproto::InitDefaultsEnumHelper();
  return *internal_default_instance();
}

EnumHelper* EnumHelper::New(::google::protobuf::Arena* arena) const {
  EnumHelper* n = new EnumHelper;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnumHelper::Swap(EnumHelper* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnumHelper::InternalSwap(EnumHelper* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata EnumHelper::GetMetadata() const {
  protobuf_bases_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bases_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserID::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserID::kAppIdFieldNumber;
const int UserID::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserID::UserID()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_bases_2eproto::InitDefaultsUserID();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.UserID)
}
UserID::UserID(const UserID& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_id().size() > 0) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  app_id_ = from.app_id_;
  // @@protoc_insertion_point(copy_constructor:zproto.UserID)
}

void UserID::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_id_ = 0u;
  _cached_size_ = 0;
}

UserID::~UserID() {
  // @@protoc_insertion_point(destructor:zproto.UserID)
  SharedDtor();
}

void UserID::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserID::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserID::descriptor() {
  ::protobuf_bases_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bases_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserID& UserID::default_instance() {
  ::protobuf_bases_2eproto::InitDefaultsUserID();
  return *internal_default_instance();
}

UserID* UserID::New(::google::protobuf::Arena* arena) const {
  UserID* n = new UserID;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserID::Swap(UserID* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserID::InternalSwap(UserID* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata UserID::GetMetadata() const {
  protobuf_bases_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bases_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OnlineSessionStatusEntry::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OnlineSessionStatusEntry::kAppIdFieldNumber;
const int OnlineSessionStatusEntry::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OnlineSessionStatusEntry::OnlineSessionStatusEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_bases_2eproto::InitDefaultsOnlineSessionStatusEntry();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.OnlineSessionStatusEntry)
}
OnlineSessionStatusEntry::OnlineSessionStatusEntry(const OnlineSessionStatusEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_id().size() > 0) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  app_id_ = from.app_id_;
  // @@protoc_insertion_point(copy_constructor:zproto.OnlineSessionStatusEntry)
}

void OnlineSessionStatusEntry::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_id_ = 0u;
  _cached_size_ = 0;
}

OnlineSessionStatusEntry::~OnlineSessionStatusEntry() {
  // @@protoc_insertion_point(destructor:zproto.OnlineSessionStatusEntry)
  SharedDtor();
}

void OnlineSessionStatusEntry::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OnlineSessionStatusEntry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OnlineSessionStatusEntry::descriptor() {
  ::protobuf_bases_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bases_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OnlineSessionStatusEntry& OnlineSessionStatusEntry::default_instance() {
  ::protobuf_bases_2eproto::InitDefaultsOnlineSessionStatusEntry();
  return *internal_default_instance();
}

OnlineSessionStatusEntry* OnlineSessionStatusEntry::New(::google::protobuf::Arena* arena) const {
  OnlineSessionStatusEntry* n = new OnlineSessionStatusEntry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OnlineSessionStatusEntry::Swap(OnlineSessionStatusEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OnlineSessionStatusEntry::InternalSwap(OnlineSessionStatusEntry* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata OnlineSessionStatusEntry::GetMetadata() const {
  protobuf_bases_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bases_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserToeken::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserToeken::kAppKeyFieldNumber;
const int UserToeken::kUserIdFieldNumber;
const int UserToeken::kUserTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserToeken::UserToeken()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_bases_2eproto::InitDefaultsUserToeken();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.UserToeken)
}
UserToeken::UserToeken(const UserToeken& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  app_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.app_key().size() > 0) {
    app_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_key_);
  }
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_id().size() > 0) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  user_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_token().size() > 0) {
    user_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_token_);
  }
  // @@protoc_insertion_point(copy_constructor:zproto.UserToeken)
}

void UserToeken::SharedCtor() {
  app_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

UserToeken::~UserToeken() {
  // @@protoc_insertion_point(destructor:zproto.UserToeken)
  SharedDtor();
}

void UserToeken::SharedDtor() {
  app_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserToeken::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserToeken::descriptor() {
  ::protobuf_bases_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bases_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserToeken& UserToeken::default_instance() {
  ::protobuf_bases_2eproto::InitDefaultsUserToeken();
  return *internal_default_instance();
}

UserToeken* UserToeken::New(::google::protobuf::Arena* arena) const {
  UserToeken* n = new UserToeken;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserToeken::Swap(UserToeken* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserToeken::InternalSwap(UserToeken* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata UserToeken::GetMetadata() const {
  protobuf_bases_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bases_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserInfo::kAppIdFieldNumber;
const int UserInfo::kUserIdFieldNumber;
const int UserInfo::kPushNameFieldNumber;
const int UserInfo::kAvatarFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserInfo::UserInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_bases_2eproto::InitDefaultsUserInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.UserInfo)
}
UserInfo::UserInfo(const UserInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_id().size() > 0) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  push_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.push_name().size() > 0) {
    push_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.push_name_);
  }
  avatar_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.avatar().size() > 0) {
    avatar_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.avatar_);
  }
  app_id_ = from.app_id_;
  // @@protoc_insertion_point(copy_constructor:zproto.UserInfo)
}

void UserInfo::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  push_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_id_ = 0u;
  _cached_size_ = 0;
}

UserInfo::~UserInfo() {
  // @@protoc_insertion_point(destructor:zproto.UserInfo)
  SharedDtor();
}

void UserInfo::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  push_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserInfo::descriptor() {
  ::protobuf_bases_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bases_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserInfo& UserInfo::default_instance() {
  ::protobuf_bases_2eproto::InitDefaultsUserInfo();
  return *internal_default_instance();
}

UserInfo* UserInfo::New(::google::protobuf::Arena* arena) const {
  UserInfo* n = new UserInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserInfo::Swap(UserInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserInfo::InternalSwap(UserInfo* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata UserInfo::GetMetadata() const {
  protobuf_bases_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bases_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OnlineUser::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OnlineUser::kAppIdFieldNumber;
const int OnlineUser::kUserIdFieldNumber;
const int OnlineUser::kServerIdFieldNumber;
const int OnlineUser::kConnIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OnlineUser::OnlineUser()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_bases_2eproto::InitDefaultsOnlineUser();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.OnlineUser)
}
OnlineUser::OnlineUser(const OnlineUser& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_id().size() > 0) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&conn_id_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(conn_id_));
  // @@protoc_insertion_point(copy_constructor:zproto.OnlineUser)
}

void OnlineUser::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&conn_id_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(conn_id_));
  _cached_size_ = 0;
}

OnlineUser::~OnlineUser() {
  // @@protoc_insertion_point(destructor:zproto.OnlineUser)
  SharedDtor();
}

void OnlineUser::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OnlineUser::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OnlineUser::descriptor() {
  ::protobuf_bases_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bases_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OnlineUser& OnlineUser::default_instance() {
  ::protobuf_bases_2eproto::InitDefaultsOnlineUser();
  return *internal_default_instance();
}

OnlineUser* OnlineUser::New(::google::protobuf::Arena* arena) const {
  OnlineUser* n = new OnlineUser;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OnlineUser::Swap(OnlineUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OnlineUser::InternalSwap(OnlineUser* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata OnlineUser::GetMetadata() const {
  protobuf_bases_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bases_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MessageContainer::InitAsDefaultInstance() {
  ::zproto::_MessageContainer_default_instance_._instance.get_mutable()->peer_ = const_cast< ::zproto::Peer*>(
      ::zproto::Peer::internal_default_instance());
}
void MessageContainer::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) {
    delete peer_;
  }
  peer_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageContainer::kMessageIdFieldNumber;
const int MessageContainer::kSenderUserIdFieldNumber;
const int MessageContainer::kPeerFieldNumber;
const int MessageContainer::kClientMessageIdFieldNumber;
const int MessageContainer::kMessageSeqFieldNumber;
const int MessageContainer::kStateFieldNumber;
const int MessageContainer::kMessageTypeFieldNumber;
const int MessageContainer::kMessageContentFieldNumber;
const int MessageContainer::kPassthroughDataFieldNumber;
const int MessageContainer::kUpdatedAtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageContainer::MessageContainer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_bases_2eproto::InitDefaultsMessageContainer();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.MessageContainer)
}
MessageContainer::MessageContainer(const MessageContainer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sender_user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sender_user_id().size() > 0) {
    sender_user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sender_user_id_);
  }
  message_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message_content().size() > 0) {
    message_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_content_);
  }
  passthrough_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.passthrough_data().size() > 0) {
    passthrough_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passthrough_data_);
  }
  if (from.has_peer()) {
    peer_ = new ::zproto::Peer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  ::memcpy(&message_id_, &from.message_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&updated_at_) -
    reinterpret_cast<char*>(&message_id_)) + sizeof(updated_at_));
  // @@protoc_insertion_point(copy_constructor:zproto.MessageContainer)
}

void MessageContainer::SharedCtor() {
  sender_user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passthrough_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&updated_at_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(updated_at_));
  _cached_size_ = 0;
}

MessageContainer::~MessageContainer() {
  // @@protoc_insertion_point(destructor:zproto.MessageContainer)
  SharedDtor();
}

void MessageContainer::SharedDtor() {
  sender_user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passthrough_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete peer_;
}

void MessageContainer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageContainer::descriptor() {
  ::protobuf_bases_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bases_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageContainer& MessageContainer::default_instance() {
  ::protobuf_bases_2eproto::InitDefaultsMessageContainer();
  return *internal_default_instance();
}

MessageContainer* MessageContainer::New(::google::protobuf::Arena* arena) const {
  MessageContainer* n = new MessageContainer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageContainer::Swap(MessageContainer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageContainer::InternalSwap(MessageContainer* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata MessageContainer::GetMetadata() const {
  protobuf_bases_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bases_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Dialog::InitAsDefaultInstance() {
  ::zproto::_Dialog_default_instance_._instance.get_mutable()->peer_ = const_cast< ::zproto::Peer*>(
      ::zproto::Peer::internal_default_instance());
}
void Dialog::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) {
    delete peer_;
  }
  peer_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Dialog::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Dialog::Dialog()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_bases_2eproto::InitDefaultsDialog();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.Dialog)
}
Dialog::Dialog(const Dialog& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::zproto::Peer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:zproto.Dialog)
}

void Dialog::SharedCtor() {
  peer_ = NULL;
  _cached_size_ = 0;
}

Dialog::~Dialog() {
  // @@protoc_insertion_point(destructor:zproto.Dialog)
  SharedDtor();
}

void Dialog::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void Dialog::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Dialog::descriptor() {
  ::protobuf_bases_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bases_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Dialog& Dialog::default_instance() {
  ::protobuf_bases_2eproto::InitDefaultsDialog();
  return *internal_default_instance();
}

Dialog* Dialog::New(::google::protobuf::Arena* arena) const {
  Dialog* n = new Dialog;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Dialog::Swap(Dialog* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Dialog::InternalSwap(Dialog* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata Dialog::GetMetadata() const {
  protobuf_bases_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bases_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace zproto

// @@protoc_insertion_point(global_scope)
