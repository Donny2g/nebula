// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages.proto

#ifndef PROTOBUF_messages_2eproto__INCLUDED
#define PROTOBUF_messages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "bases.pb.h"
#include "peers.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_messages_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[13];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsVoidRspImpl();
void InitDefaultsVoidRsp();
void InitDefaultsSendMessageReqImpl();
void InitDefaultsSendMessageReq();
void InitDefaultsSeqDateRspImpl();
void InitDefaultsSeqDateRsp();
void InitDefaultsForwardMessageReqImpl();
void InitDefaultsForwardMessageReq();
void InitDefaultsMessageNotifyImpl();
void InitDefaultsMessageNotify();
void InitDefaultsMessageDataNotifyImpl();
void InitDefaultsMessageDataNotify();
void InitDefaultsMessageSyncReqImpl();
void InitDefaultsMessageSyncReq();
void InitDefaultsMessageSyncRspImpl();
void InitDefaultsMessageSyncRsp();
void InitDefaultsMessageReadReqImpl();
void InitDefaultsMessageReadReq();
void InitDefaultsLoadHistoryMessageReqImpl();
void InitDefaultsLoadHistoryMessageReq();
void InitDefaultsLoadHistoryMessageRspImpl();
void InitDefaultsLoadHistoryMessageRsp();
void InitDefaultsLoadDialogsReqImpl();
void InitDefaultsLoadDialogsReq();
void InitDefaultsLoadDialogsRspImpl();
void InitDefaultsLoadDialogsRsp();
inline void InitDefaults() {
  InitDefaultsVoidRsp();
  InitDefaultsSendMessageReq();
  InitDefaultsSeqDateRsp();
  InitDefaultsForwardMessageReq();
  InitDefaultsMessageNotify();
  InitDefaultsMessageDataNotify();
  InitDefaultsMessageSyncReq();
  InitDefaultsMessageSyncRsp();
  InitDefaultsMessageReadReq();
  InitDefaultsLoadHistoryMessageReq();
  InitDefaultsLoadHistoryMessageRsp();
  InitDefaultsLoadDialogsReq();
  InitDefaultsLoadDialogsRsp();
}
}  // namespace protobuf_messages_2eproto
namespace zproto {
class ForwardMessageReq;
class ForwardMessageReqDefaultTypeInternal;
extern ForwardMessageReqDefaultTypeInternal _ForwardMessageReq_default_instance_;
class LoadDialogsReq;
class LoadDialogsReqDefaultTypeInternal;
extern LoadDialogsReqDefaultTypeInternal _LoadDialogsReq_default_instance_;
class LoadDialogsRsp;
class LoadDialogsRspDefaultTypeInternal;
extern LoadDialogsRspDefaultTypeInternal _LoadDialogsRsp_default_instance_;
class LoadHistoryMessageReq;
class LoadHistoryMessageReqDefaultTypeInternal;
extern LoadHistoryMessageReqDefaultTypeInternal _LoadHistoryMessageReq_default_instance_;
class LoadHistoryMessageRsp;
class LoadHistoryMessageRspDefaultTypeInternal;
extern LoadHistoryMessageRspDefaultTypeInternal _LoadHistoryMessageRsp_default_instance_;
class MessageDataNotify;
class MessageDataNotifyDefaultTypeInternal;
extern MessageDataNotifyDefaultTypeInternal _MessageDataNotify_default_instance_;
class MessageNotify;
class MessageNotifyDefaultTypeInternal;
extern MessageNotifyDefaultTypeInternal _MessageNotify_default_instance_;
class MessageReadReq;
class MessageReadReqDefaultTypeInternal;
extern MessageReadReqDefaultTypeInternal _MessageReadReq_default_instance_;
class MessageSyncReq;
class MessageSyncReqDefaultTypeInternal;
extern MessageSyncReqDefaultTypeInternal _MessageSyncReq_default_instance_;
class MessageSyncRsp;
class MessageSyncRspDefaultTypeInternal;
extern MessageSyncRspDefaultTypeInternal _MessageSyncRsp_default_instance_;
class SendMessageReq;
class SendMessageReqDefaultTypeInternal;
extern SendMessageReqDefaultTypeInternal _SendMessageReq_default_instance_;
class SeqDateRsp;
class SeqDateRspDefaultTypeInternal;
extern SeqDateRspDefaultTypeInternal _SeqDateRsp_default_instance_;
class VoidRsp;
class VoidRspDefaultTypeInternal;
extern VoidRspDefaultTypeInternal _VoidRsp_default_instance_;
}  // namespace zproto
namespace zproto {

// ===================================================================

class VoidRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.VoidRsp) */ {
 public:
  VoidRsp();
  virtual ~VoidRsp();

  VoidRsp(const VoidRsp& from);

  inline VoidRsp& operator=(const VoidRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VoidRsp(VoidRsp&& from) noexcept
    : VoidRsp() {
    *this = ::std::move(from);
  }

  inline VoidRsp& operator=(VoidRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VoidRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VoidRsp* internal_default_instance() {
    return reinterpret_cast<const VoidRsp*>(
               &_VoidRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(VoidRsp* other);
  friend void swap(VoidRsp& a, VoidRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VoidRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  VoidRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VoidRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:zproto.VoidRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_messages_2eproto::TableStruct;
  friend void ::protobuf_messages_2eproto::InitDefaultsVoidRspImpl();
};
// -------------------------------------------------------------------

class SendMessageReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.SendMessageReq) */ {
 public:
  SendMessageReq();
  virtual ~SendMessageReq();

  SendMessageReq(const SendMessageReq& from);

  inline SendMessageReq& operator=(const SendMessageReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SendMessageReq(SendMessageReq&& from) noexcept
    : SendMessageReq() {
    *this = ::std::move(from);
  }

  inline SendMessageReq& operator=(SendMessageReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SendMessageReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SendMessageReq* internal_default_instance() {
    return reinterpret_cast<const SendMessageReq*>(
               &_SendMessageReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(SendMessageReq* other);
  friend void swap(SendMessageReq& a, SendMessageReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SendMessageReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SendMessageReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SendMessageReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .zproto.MessageContainer message_data = 1;
  bool has_message_data() const;
  void clear_message_data();
  static const int kMessageDataFieldNumber = 1;
  const ::zproto::MessageContainer& message_data() const;
  ::zproto::MessageContainer* release_message_data();
  ::zproto::MessageContainer* mutable_message_data();
  void set_allocated_message_data(::zproto::MessageContainer* message_data);

  // @@protoc_insertion_point(class_scope:zproto.SendMessageReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::zproto::MessageContainer* message_data_;
  mutable int _cached_size_;
  friend struct ::protobuf_messages_2eproto::TableStruct;
  friend void ::protobuf_messages_2eproto::InitDefaultsSendMessageReqImpl();
};
// -------------------------------------------------------------------

class SeqDateRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.SeqDateRsp) */ {
 public:
  SeqDateRsp();
  virtual ~SeqDateRsp();

  SeqDateRsp(const SeqDateRsp& from);

  inline SeqDateRsp& operator=(const SeqDateRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SeqDateRsp(SeqDateRsp&& from) noexcept
    : SeqDateRsp() {
    *this = ::std::move(from);
  }

  inline SeqDateRsp& operator=(SeqDateRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SeqDateRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SeqDateRsp* internal_default_instance() {
    return reinterpret_cast<const SeqDateRsp*>(
               &_SeqDateRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(SeqDateRsp* other);
  friend void swap(SeqDateRsp& a, SeqDateRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SeqDateRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SeqDateRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SeqDateRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 seq = 1;
  void clear_seq();
  static const int kSeqFieldNumber = 1;
  ::google::protobuf::uint64 seq() const;
  void set_seq(::google::protobuf::uint64 value);

  // uint64 created = 2;
  void clear_created();
  static const int kCreatedFieldNumber = 2;
  ::google::protobuf::uint64 created() const;
  void set_created(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:zproto.SeqDateRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 seq_;
  ::google::protobuf::uint64 created_;
  mutable int _cached_size_;
  friend struct ::protobuf_messages_2eproto::TableStruct;
  friend void ::protobuf_messages_2eproto::InitDefaultsSeqDateRspImpl();
};
// -------------------------------------------------------------------

class ForwardMessageReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.ForwardMessageReq) */ {
 public:
  ForwardMessageReq();
  virtual ~ForwardMessageReq();

  ForwardMessageReq(const ForwardMessageReq& from);

  inline ForwardMessageReq& operator=(const ForwardMessageReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ForwardMessageReq(ForwardMessageReq&& from) noexcept
    : ForwardMessageReq() {
    *this = ::std::move(from);
  }

  inline ForwardMessageReq& operator=(ForwardMessageReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ForwardMessageReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ForwardMessageReq* internal_default_instance() {
    return reinterpret_cast<const ForwardMessageReq*>(
               &_ForwardMessageReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(ForwardMessageReq* other);
  friend void swap(ForwardMessageReq& a, ForwardMessageReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ForwardMessageReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ForwardMessageReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ForwardMessageReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 not_send_conn_ids = 2;
  int not_send_conn_ids_size() const;
  void clear_not_send_conn_ids();
  static const int kNotSendConnIdsFieldNumber = 2;
  ::google::protobuf::uint64 not_send_conn_ids(int index) const;
  void set_not_send_conn_ids(int index, ::google::protobuf::uint64 value);
  void add_not_send_conn_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      not_send_conn_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_not_send_conn_ids();

  // .zproto.MessageContainer message_data = 1;
  bool has_message_data() const;
  void clear_message_data();
  static const int kMessageDataFieldNumber = 1;
  const ::zproto::MessageContainer& message_data() const;
  ::zproto::MessageContainer* release_message_data();
  ::zproto::MessageContainer* mutable_message_data();
  void set_allocated_message_data(::zproto::MessageContainer* message_data);

  // uint64 my_conn_id = 3;
  void clear_my_conn_id();
  static const int kMyConnIdFieldNumber = 3;
  ::google::protobuf::uint64 my_conn_id() const;
  void set_my_conn_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:zproto.ForwardMessageReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > not_send_conn_ids_;
  ::zproto::MessageContainer* message_data_;
  ::google::protobuf::uint64 my_conn_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_messages_2eproto::TableStruct;
  friend void ::protobuf_messages_2eproto::InitDefaultsForwardMessageReqImpl();
};
// -------------------------------------------------------------------

class MessageNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.MessageNotify) */ {
 public:
  MessageNotify();
  virtual ~MessageNotify();

  MessageNotify(const MessageNotify& from);

  inline MessageNotify& operator=(const MessageNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MessageNotify(MessageNotify&& from) noexcept
    : MessageNotify() {
    *this = ::std::move(from);
  }

  inline MessageNotify& operator=(MessageNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageNotify& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MessageNotify* internal_default_instance() {
    return reinterpret_cast<const MessageNotify*>(
               &_MessageNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(MessageNotify* other);
  friend void swap(MessageNotify& a, MessageNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MessageNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  MessageNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MessageNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:zproto.MessageNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_messages_2eproto::TableStruct;
  friend void ::protobuf_messages_2eproto::InitDefaultsMessageNotifyImpl();
};
// -------------------------------------------------------------------

class MessageDataNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.MessageDataNotify) */ {
 public:
  MessageDataNotify();
  virtual ~MessageDataNotify();

  MessageDataNotify(const MessageDataNotify& from);

  inline MessageDataNotify& operator=(const MessageDataNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MessageDataNotify(MessageDataNotify&& from) noexcept
    : MessageDataNotify() {
    *this = ::std::move(from);
  }

  inline MessageDataNotify& operator=(MessageDataNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageDataNotify& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MessageDataNotify* internal_default_instance() {
    return reinterpret_cast<const MessageDataNotify*>(
               &_MessageDataNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(MessageDataNotify* other);
  friend void swap(MessageDataNotify& a, MessageDataNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MessageDataNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  MessageDataNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MessageDataNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .zproto.MessageContainer message_data = 1;
  bool has_message_data() const;
  void clear_message_data();
  static const int kMessageDataFieldNumber = 1;
  const ::zproto::MessageContainer& message_data() const;
  ::zproto::MessageContainer* release_message_data();
  ::zproto::MessageContainer* mutable_message_data();
  void set_allocated_message_data(::zproto::MessageContainer* message_data);

  // @@protoc_insertion_point(class_scope:zproto.MessageDataNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::zproto::MessageContainer* message_data_;
  mutable int _cached_size_;
  friend struct ::protobuf_messages_2eproto::TableStruct;
  friend void ::protobuf_messages_2eproto::InitDefaultsMessageDataNotifyImpl();
};
// -------------------------------------------------------------------

class MessageSyncReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.MessageSyncReq) */ {
 public:
  MessageSyncReq();
  virtual ~MessageSyncReq();

  MessageSyncReq(const MessageSyncReq& from);

  inline MessageSyncReq& operator=(const MessageSyncReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MessageSyncReq(MessageSyncReq&& from) noexcept
    : MessageSyncReq() {
    *this = ::std::move(from);
  }

  inline MessageSyncReq& operator=(MessageSyncReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageSyncReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MessageSyncReq* internal_default_instance() {
    return reinterpret_cast<const MessageSyncReq*>(
               &_MessageSyncReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(MessageSyncReq* other);
  friend void swap(MessageSyncReq& a, MessageSyncReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MessageSyncReq* New() const PROTOBUF_FINAL { return New(NULL); }

  MessageSyncReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MessageSyncReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 received_max_seq = 1;
  void clear_received_max_seq();
  static const int kReceivedMaxSeqFieldNumber = 1;
  ::google::protobuf::uint64 received_max_seq() const;
  void set_received_max_seq(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:zproto.MessageSyncReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 received_max_seq_;
  mutable int _cached_size_;
  friend struct ::protobuf_messages_2eproto::TableStruct;
  friend void ::protobuf_messages_2eproto::InitDefaultsMessageSyncReqImpl();
};
// -------------------------------------------------------------------

class MessageSyncRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.MessageSyncRsp) */ {
 public:
  MessageSyncRsp();
  virtual ~MessageSyncRsp();

  MessageSyncRsp(const MessageSyncRsp& from);

  inline MessageSyncRsp& operator=(const MessageSyncRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MessageSyncRsp(MessageSyncRsp&& from) noexcept
    : MessageSyncRsp() {
    *this = ::std::move(from);
  }

  inline MessageSyncRsp& operator=(MessageSyncRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageSyncRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MessageSyncRsp* internal_default_instance() {
    return reinterpret_cast<const MessageSyncRsp*>(
               &_MessageSyncRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(MessageSyncRsp* other);
  friend void swap(MessageSyncRsp& a, MessageSyncRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MessageSyncRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  MessageSyncRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MessageSyncRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .zproto.MessageContainer message_data = 1;
  int message_data_size() const;
  void clear_message_data();
  static const int kMessageDataFieldNumber = 1;
  const ::zproto::MessageContainer& message_data(int index) const;
  ::zproto::MessageContainer* mutable_message_data(int index);
  ::zproto::MessageContainer* add_message_data();
  ::google::protobuf::RepeatedPtrField< ::zproto::MessageContainer >*
      mutable_message_data();
  const ::google::protobuf::RepeatedPtrField< ::zproto::MessageContainer >&
      message_data() const;

  // @@protoc_insertion_point(class_scope:zproto.MessageSyncRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::zproto::MessageContainer > message_data_;
  mutable int _cached_size_;
  friend struct ::protobuf_messages_2eproto::TableStruct;
  friend void ::protobuf_messages_2eproto::InitDefaultsMessageSyncRspImpl();
};
// -------------------------------------------------------------------

class MessageReadReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.MessageReadReq) */ {
 public:
  MessageReadReq();
  virtual ~MessageReadReq();

  MessageReadReq(const MessageReadReq& from);

  inline MessageReadReq& operator=(const MessageReadReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MessageReadReq(MessageReadReq&& from) noexcept
    : MessageReadReq() {
    *this = ::std::move(from);
  }

  inline MessageReadReq& operator=(MessageReadReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageReadReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MessageReadReq* internal_default_instance() {
    return reinterpret_cast<const MessageReadReq*>(
               &_MessageReadReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(MessageReadReq* other);
  friend void swap(MessageReadReq& a, MessageReadReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MessageReadReq* New() const PROTOBUF_FINAL { return New(NULL); }

  MessageReadReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MessageReadReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .zproto.Peer peer = 1;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 1;
  const ::zproto::Peer& peer() const;
  ::zproto::Peer* release_peer();
  ::zproto::Peer* mutable_peer();
  void set_allocated_peer(::zproto::Peer* peer);

  // uint64 read_max_seq = 2;
  void clear_read_max_seq();
  static const int kReadMaxSeqFieldNumber = 2;
  ::google::protobuf::uint64 read_max_seq() const;
  void set_read_max_seq(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:zproto.MessageReadReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::zproto::Peer* peer_;
  ::google::protobuf::uint64 read_max_seq_;
  mutable int _cached_size_;
  friend struct ::protobuf_messages_2eproto::TableStruct;
  friend void ::protobuf_messages_2eproto::InitDefaultsMessageReadReqImpl();
};
// -------------------------------------------------------------------

class LoadHistoryMessageReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.LoadHistoryMessageReq) */ {
 public:
  LoadHistoryMessageReq();
  virtual ~LoadHistoryMessageReq();

  LoadHistoryMessageReq(const LoadHistoryMessageReq& from);

  inline LoadHistoryMessageReq& operator=(const LoadHistoryMessageReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoadHistoryMessageReq(LoadHistoryMessageReq&& from) noexcept
    : LoadHistoryMessageReq() {
    *this = ::std::move(from);
  }

  inline LoadHistoryMessageReq& operator=(LoadHistoryMessageReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LoadHistoryMessageReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoadHistoryMessageReq* internal_default_instance() {
    return reinterpret_cast<const LoadHistoryMessageReq*>(
               &_LoadHistoryMessageReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(LoadHistoryMessageReq* other);
  friend void swap(LoadHistoryMessageReq& a, LoadHistoryMessageReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoadHistoryMessageReq* New() const PROTOBUF_FINAL { return New(NULL); }

  LoadHistoryMessageReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoadHistoryMessageReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .zproto.Peer peer = 1;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 1;
  const ::zproto::Peer& peer() const;
  ::zproto::Peer* release_peer();
  ::zproto::Peer* mutable_peer();
  void set_allocated_peer(::zproto::Peer* peer);

  // uint32 date = 2;
  void clear_date();
  static const int kDateFieldNumber = 2;
  ::google::protobuf::uint32 date() const;
  void set_date(::google::protobuf::uint32 value);

  // .zproto.EnumHelper.ListLoadMode load_mode = 3;
  void clear_load_mode();
  static const int kLoadModeFieldNumber = 3;
  ::zproto::EnumHelper_ListLoadMode load_mode() const;
  void set_load_mode(::zproto::EnumHelper_ListLoadMode value);

  // uint32 limit = 4;
  void clear_limit();
  static const int kLimitFieldNumber = 4;
  ::google::protobuf::uint32 limit() const;
  void set_limit(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:zproto.LoadHistoryMessageReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::zproto::Peer* peer_;
  ::google::protobuf::uint32 date_;
  int load_mode_;
  ::google::protobuf::uint32 limit_;
  mutable int _cached_size_;
  friend struct ::protobuf_messages_2eproto::TableStruct;
  friend void ::protobuf_messages_2eproto::InitDefaultsLoadHistoryMessageReqImpl();
};
// -------------------------------------------------------------------

class LoadHistoryMessageRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.LoadHistoryMessageRsp) */ {
 public:
  LoadHistoryMessageRsp();
  virtual ~LoadHistoryMessageRsp();

  LoadHistoryMessageRsp(const LoadHistoryMessageRsp& from);

  inline LoadHistoryMessageRsp& operator=(const LoadHistoryMessageRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoadHistoryMessageRsp(LoadHistoryMessageRsp&& from) noexcept
    : LoadHistoryMessageRsp() {
    *this = ::std::move(from);
  }

  inline LoadHistoryMessageRsp& operator=(LoadHistoryMessageRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LoadHistoryMessageRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoadHistoryMessageRsp* internal_default_instance() {
    return reinterpret_cast<const LoadHistoryMessageRsp*>(
               &_LoadHistoryMessageRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(LoadHistoryMessageRsp* other);
  friend void swap(LoadHistoryMessageRsp& a, LoadHistoryMessageRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoadHistoryMessageRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  LoadHistoryMessageRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoadHistoryMessageRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .zproto.MessageContainer history = 1;
  int history_size() const;
  void clear_history();
  static const int kHistoryFieldNumber = 1;
  const ::zproto::MessageContainer& history(int index) const;
  ::zproto::MessageContainer* mutable_history(int index);
  ::zproto::MessageContainer* add_history();
  ::google::protobuf::RepeatedPtrField< ::zproto::MessageContainer >*
      mutable_history();
  const ::google::protobuf::RepeatedPtrField< ::zproto::MessageContainer >&
      history() const;

  // @@protoc_insertion_point(class_scope:zproto.LoadHistoryMessageRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::zproto::MessageContainer > history_;
  mutable int _cached_size_;
  friend struct ::protobuf_messages_2eproto::TableStruct;
  friend void ::protobuf_messages_2eproto::InitDefaultsLoadHistoryMessageRspImpl();
};
// -------------------------------------------------------------------

class LoadDialogsReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.LoadDialogsReq) */ {
 public:
  LoadDialogsReq();
  virtual ~LoadDialogsReq();

  LoadDialogsReq(const LoadDialogsReq& from);

  inline LoadDialogsReq& operator=(const LoadDialogsReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoadDialogsReq(LoadDialogsReq&& from) noexcept
    : LoadDialogsReq() {
    *this = ::std::move(from);
  }

  inline LoadDialogsReq& operator=(LoadDialogsReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LoadDialogsReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoadDialogsReq* internal_default_instance() {
    return reinterpret_cast<const LoadDialogsReq*>(
               &_LoadDialogsReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(LoadDialogsReq* other);
  friend void swap(LoadDialogsReq& a, LoadDialogsReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoadDialogsReq* New() const PROTOBUF_FINAL { return New(NULL); }

  LoadDialogsReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoadDialogsReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 date = 1;
  void clear_date();
  static const int kDateFieldNumber = 1;
  ::google::protobuf::uint64 date() const;
  void set_date(::google::protobuf::uint64 value);

  // .zproto.EnumHelper.ListLoadMode load_mode = 2;
  void clear_load_mode();
  static const int kLoadModeFieldNumber = 2;
  ::zproto::EnumHelper_ListLoadMode load_mode() const;
  void set_load_mode(::zproto::EnumHelper_ListLoadMode value);

  // uint32 limit = 3;
  void clear_limit();
  static const int kLimitFieldNumber = 3;
  ::google::protobuf::uint32 limit() const;
  void set_limit(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:zproto.LoadDialogsReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 date_;
  int load_mode_;
  ::google::protobuf::uint32 limit_;
  mutable int _cached_size_;
  friend struct ::protobuf_messages_2eproto::TableStruct;
  friend void ::protobuf_messages_2eproto::InitDefaultsLoadDialogsReqImpl();
};
// -------------------------------------------------------------------

class LoadDialogsRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.LoadDialogsRsp) */ {
 public:
  LoadDialogsRsp();
  virtual ~LoadDialogsRsp();

  LoadDialogsRsp(const LoadDialogsRsp& from);

  inline LoadDialogsRsp& operator=(const LoadDialogsRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoadDialogsRsp(LoadDialogsRsp&& from) noexcept
    : LoadDialogsRsp() {
    *this = ::std::move(from);
  }

  inline LoadDialogsRsp& operator=(LoadDialogsRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LoadDialogsRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoadDialogsRsp* internal_default_instance() {
    return reinterpret_cast<const LoadDialogsRsp*>(
               &_LoadDialogsRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(LoadDialogsRsp* other);
  friend void swap(LoadDialogsRsp& a, LoadDialogsRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoadDialogsRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  LoadDialogsRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoadDialogsRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .zproto.Dialog dialogs = 1;
  int dialogs_size() const;
  void clear_dialogs();
  static const int kDialogsFieldNumber = 1;
  const ::zproto::Dialog& dialogs(int index) const;
  ::zproto::Dialog* mutable_dialogs(int index);
  ::zproto::Dialog* add_dialogs();
  ::google::protobuf::RepeatedPtrField< ::zproto::Dialog >*
      mutable_dialogs();
  const ::google::protobuf::RepeatedPtrField< ::zproto::Dialog >&
      dialogs() const;

  // @@protoc_insertion_point(class_scope:zproto.LoadDialogsRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::zproto::Dialog > dialogs_;
  mutable int _cached_size_;
  friend struct ::protobuf_messages_2eproto::TableStruct;
  friend void ::protobuf_messages_2eproto::InitDefaultsLoadDialogsRspImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// VoidRsp

// -------------------------------------------------------------------

// SendMessageReq

// .zproto.MessageContainer message_data = 1;
inline bool SendMessageReq::has_message_data() const {
  return this != internal_default_instance() && message_data_ != NULL;
}
inline const ::zproto::MessageContainer& SendMessageReq::message_data() const {
  const ::zproto::MessageContainer* p = message_data_;
  // @@protoc_insertion_point(field_get:zproto.SendMessageReq.message_data)
  return p != NULL ? *p : *reinterpret_cast<const ::zproto::MessageContainer*>(
      &::zproto::_MessageContainer_default_instance_);
}
inline ::zproto::MessageContainer* SendMessageReq::release_message_data() {
  // @@protoc_insertion_point(field_release:zproto.SendMessageReq.message_data)
  
  ::zproto::MessageContainer* temp = message_data_;
  message_data_ = NULL;
  return temp;
}
inline ::zproto::MessageContainer* SendMessageReq::mutable_message_data() {
  
  if (message_data_ == NULL) {
    message_data_ = new ::zproto::MessageContainer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.SendMessageReq.message_data)
  return message_data_;
}
inline void SendMessageReq::set_allocated_message_data(::zproto::MessageContainer* message_data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(message_data_);
  }
  if (message_data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      message_data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, message_data, submessage_arena);
    }
    
  } else {
    
  }
  message_data_ = message_data;
  // @@protoc_insertion_point(field_set_allocated:zproto.SendMessageReq.message_data)
}

// -------------------------------------------------------------------

// SeqDateRsp

// uint64 seq = 1;
inline void SeqDateRsp::clear_seq() {
  seq_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SeqDateRsp::seq() const {
  // @@protoc_insertion_point(field_get:zproto.SeqDateRsp.seq)
  return seq_;
}
inline void SeqDateRsp::set_seq(::google::protobuf::uint64 value) {
  
  seq_ = value;
  // @@protoc_insertion_point(field_set:zproto.SeqDateRsp.seq)
}

// uint64 created = 2;
inline void SeqDateRsp::clear_created() {
  created_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SeqDateRsp::created() const {
  // @@protoc_insertion_point(field_get:zproto.SeqDateRsp.created)
  return created_;
}
inline void SeqDateRsp::set_created(::google::protobuf::uint64 value) {
  
  created_ = value;
  // @@protoc_insertion_point(field_set:zproto.SeqDateRsp.created)
}

// -------------------------------------------------------------------

// ForwardMessageReq

// .zproto.MessageContainer message_data = 1;
inline bool ForwardMessageReq::has_message_data() const {
  return this != internal_default_instance() && message_data_ != NULL;
}
inline const ::zproto::MessageContainer& ForwardMessageReq::message_data() const {
  const ::zproto::MessageContainer* p = message_data_;
  // @@protoc_insertion_point(field_get:zproto.ForwardMessageReq.message_data)
  return p != NULL ? *p : *reinterpret_cast<const ::zproto::MessageContainer*>(
      &::zproto::_MessageContainer_default_instance_);
}
inline ::zproto::MessageContainer* ForwardMessageReq::release_message_data() {
  // @@protoc_insertion_point(field_release:zproto.ForwardMessageReq.message_data)
  
  ::zproto::MessageContainer* temp = message_data_;
  message_data_ = NULL;
  return temp;
}
inline ::zproto::MessageContainer* ForwardMessageReq::mutable_message_data() {
  
  if (message_data_ == NULL) {
    message_data_ = new ::zproto::MessageContainer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.ForwardMessageReq.message_data)
  return message_data_;
}
inline void ForwardMessageReq::set_allocated_message_data(::zproto::MessageContainer* message_data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(message_data_);
  }
  if (message_data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      message_data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, message_data, submessage_arena);
    }
    
  } else {
    
  }
  message_data_ = message_data;
  // @@protoc_insertion_point(field_set_allocated:zproto.ForwardMessageReq.message_data)
}

// repeated uint64 not_send_conn_ids = 2;
inline int ForwardMessageReq::not_send_conn_ids_size() const {
  return not_send_conn_ids_.size();
}
inline void ForwardMessageReq::clear_not_send_conn_ids() {
  not_send_conn_ids_.Clear();
}
inline ::google::protobuf::uint64 ForwardMessageReq::not_send_conn_ids(int index) const {
  // @@protoc_insertion_point(field_get:zproto.ForwardMessageReq.not_send_conn_ids)
  return not_send_conn_ids_.Get(index);
}
inline void ForwardMessageReq::set_not_send_conn_ids(int index, ::google::protobuf::uint64 value) {
  not_send_conn_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:zproto.ForwardMessageReq.not_send_conn_ids)
}
inline void ForwardMessageReq::add_not_send_conn_ids(::google::protobuf::uint64 value) {
  not_send_conn_ids_.Add(value);
  // @@protoc_insertion_point(field_add:zproto.ForwardMessageReq.not_send_conn_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ForwardMessageReq::not_send_conn_ids() const {
  // @@protoc_insertion_point(field_list:zproto.ForwardMessageReq.not_send_conn_ids)
  return not_send_conn_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ForwardMessageReq::mutable_not_send_conn_ids() {
  // @@protoc_insertion_point(field_mutable_list:zproto.ForwardMessageReq.not_send_conn_ids)
  return &not_send_conn_ids_;
}

// uint64 my_conn_id = 3;
inline void ForwardMessageReq::clear_my_conn_id() {
  my_conn_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ForwardMessageReq::my_conn_id() const {
  // @@protoc_insertion_point(field_get:zproto.ForwardMessageReq.my_conn_id)
  return my_conn_id_;
}
inline void ForwardMessageReq::set_my_conn_id(::google::protobuf::uint64 value) {
  
  my_conn_id_ = value;
  // @@protoc_insertion_point(field_set:zproto.ForwardMessageReq.my_conn_id)
}

// -------------------------------------------------------------------

// MessageNotify

// -------------------------------------------------------------------

// MessageDataNotify

// .zproto.MessageContainer message_data = 1;
inline bool MessageDataNotify::has_message_data() const {
  return this != internal_default_instance() && message_data_ != NULL;
}
inline const ::zproto::MessageContainer& MessageDataNotify::message_data() const {
  const ::zproto::MessageContainer* p = message_data_;
  // @@protoc_insertion_point(field_get:zproto.MessageDataNotify.message_data)
  return p != NULL ? *p : *reinterpret_cast<const ::zproto::MessageContainer*>(
      &::zproto::_MessageContainer_default_instance_);
}
inline ::zproto::MessageContainer* MessageDataNotify::release_message_data() {
  // @@protoc_insertion_point(field_release:zproto.MessageDataNotify.message_data)
  
  ::zproto::MessageContainer* temp = message_data_;
  message_data_ = NULL;
  return temp;
}
inline ::zproto::MessageContainer* MessageDataNotify::mutable_message_data() {
  
  if (message_data_ == NULL) {
    message_data_ = new ::zproto::MessageContainer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.MessageDataNotify.message_data)
  return message_data_;
}
inline void MessageDataNotify::set_allocated_message_data(::zproto::MessageContainer* message_data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(message_data_);
  }
  if (message_data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      message_data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, message_data, submessage_arena);
    }
    
  } else {
    
  }
  message_data_ = message_data;
  // @@protoc_insertion_point(field_set_allocated:zproto.MessageDataNotify.message_data)
}

// -------------------------------------------------------------------

// MessageSyncReq

// uint64 received_max_seq = 1;
inline void MessageSyncReq::clear_received_max_seq() {
  received_max_seq_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MessageSyncReq::received_max_seq() const {
  // @@protoc_insertion_point(field_get:zproto.MessageSyncReq.received_max_seq)
  return received_max_seq_;
}
inline void MessageSyncReq::set_received_max_seq(::google::protobuf::uint64 value) {
  
  received_max_seq_ = value;
  // @@protoc_insertion_point(field_set:zproto.MessageSyncReq.received_max_seq)
}

// -------------------------------------------------------------------

// MessageSyncRsp

// repeated .zproto.MessageContainer message_data = 1;
inline int MessageSyncRsp::message_data_size() const {
  return message_data_.size();
}
inline const ::zproto::MessageContainer& MessageSyncRsp::message_data(int index) const {
  // @@protoc_insertion_point(field_get:zproto.MessageSyncRsp.message_data)
  return message_data_.Get(index);
}
inline ::zproto::MessageContainer* MessageSyncRsp::mutable_message_data(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.MessageSyncRsp.message_data)
  return message_data_.Mutable(index);
}
inline ::zproto::MessageContainer* MessageSyncRsp::add_message_data() {
  // @@protoc_insertion_point(field_add:zproto.MessageSyncRsp.message_data)
  return message_data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::zproto::MessageContainer >*
MessageSyncRsp::mutable_message_data() {
  // @@protoc_insertion_point(field_mutable_list:zproto.MessageSyncRsp.message_data)
  return &message_data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::zproto::MessageContainer >&
MessageSyncRsp::message_data() const {
  // @@protoc_insertion_point(field_list:zproto.MessageSyncRsp.message_data)
  return message_data_;
}

// -------------------------------------------------------------------

// MessageReadReq

// .zproto.Peer peer = 1;
inline bool MessageReadReq::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline const ::zproto::Peer& MessageReadReq::peer() const {
  const ::zproto::Peer* p = peer_;
  // @@protoc_insertion_point(field_get:zproto.MessageReadReq.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::zproto::Peer*>(
      &::zproto::_Peer_default_instance_);
}
inline ::zproto::Peer* MessageReadReq::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.MessageReadReq.peer)
  
  ::zproto::Peer* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline ::zproto::Peer* MessageReadReq::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::Peer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.MessageReadReq.peer)
  return peer_;
}
inline void MessageReadReq::set_allocated_peer(::zproto::Peer* peer) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(peer_);
  }
  if (peer) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      peer = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, peer, submessage_arena);
    }
    
  } else {
    
  }
  peer_ = peer;
  // @@protoc_insertion_point(field_set_allocated:zproto.MessageReadReq.peer)
}

// uint64 read_max_seq = 2;
inline void MessageReadReq::clear_read_max_seq() {
  read_max_seq_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MessageReadReq::read_max_seq() const {
  // @@protoc_insertion_point(field_get:zproto.MessageReadReq.read_max_seq)
  return read_max_seq_;
}
inline void MessageReadReq::set_read_max_seq(::google::protobuf::uint64 value) {
  
  read_max_seq_ = value;
  // @@protoc_insertion_point(field_set:zproto.MessageReadReq.read_max_seq)
}

// -------------------------------------------------------------------

// LoadHistoryMessageReq

// .zproto.Peer peer = 1;
inline bool LoadHistoryMessageReq::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline const ::zproto::Peer& LoadHistoryMessageReq::peer() const {
  const ::zproto::Peer* p = peer_;
  // @@protoc_insertion_point(field_get:zproto.LoadHistoryMessageReq.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::zproto::Peer*>(
      &::zproto::_Peer_default_instance_);
}
inline ::zproto::Peer* LoadHistoryMessageReq::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.LoadHistoryMessageReq.peer)
  
  ::zproto::Peer* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline ::zproto::Peer* LoadHistoryMessageReq::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::Peer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.LoadHistoryMessageReq.peer)
  return peer_;
}
inline void LoadHistoryMessageReq::set_allocated_peer(::zproto::Peer* peer) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(peer_);
  }
  if (peer) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      peer = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, peer, submessage_arena);
    }
    
  } else {
    
  }
  peer_ = peer;
  // @@protoc_insertion_point(field_set_allocated:zproto.LoadHistoryMessageReq.peer)
}

// uint32 date = 2;
inline void LoadHistoryMessageReq::clear_date() {
  date_ = 0u;
}
inline ::google::protobuf::uint32 LoadHistoryMessageReq::date() const {
  // @@protoc_insertion_point(field_get:zproto.LoadHistoryMessageReq.date)
  return date_;
}
inline void LoadHistoryMessageReq::set_date(::google::protobuf::uint32 value) {
  
  date_ = value;
  // @@protoc_insertion_point(field_set:zproto.LoadHistoryMessageReq.date)
}

// .zproto.EnumHelper.ListLoadMode load_mode = 3;
inline void LoadHistoryMessageReq::clear_load_mode() {
  load_mode_ = 0;
}
inline ::zproto::EnumHelper_ListLoadMode LoadHistoryMessageReq::load_mode() const {
  // @@protoc_insertion_point(field_get:zproto.LoadHistoryMessageReq.load_mode)
  return static_cast< ::zproto::EnumHelper_ListLoadMode >(load_mode_);
}
inline void LoadHistoryMessageReq::set_load_mode(::zproto::EnumHelper_ListLoadMode value) {
  
  load_mode_ = value;
  // @@protoc_insertion_point(field_set:zproto.LoadHistoryMessageReq.load_mode)
}

// uint32 limit = 4;
inline void LoadHistoryMessageReq::clear_limit() {
  limit_ = 0u;
}
inline ::google::protobuf::uint32 LoadHistoryMessageReq::limit() const {
  // @@protoc_insertion_point(field_get:zproto.LoadHistoryMessageReq.limit)
  return limit_;
}
inline void LoadHistoryMessageReq::set_limit(::google::protobuf::uint32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:zproto.LoadHistoryMessageReq.limit)
}

// -------------------------------------------------------------------

// LoadHistoryMessageRsp

// repeated .zproto.MessageContainer history = 1;
inline int LoadHistoryMessageRsp::history_size() const {
  return history_.size();
}
inline const ::zproto::MessageContainer& LoadHistoryMessageRsp::history(int index) const {
  // @@protoc_insertion_point(field_get:zproto.LoadHistoryMessageRsp.history)
  return history_.Get(index);
}
inline ::zproto::MessageContainer* LoadHistoryMessageRsp::mutable_history(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.LoadHistoryMessageRsp.history)
  return history_.Mutable(index);
}
inline ::zproto::MessageContainer* LoadHistoryMessageRsp::add_history() {
  // @@protoc_insertion_point(field_add:zproto.LoadHistoryMessageRsp.history)
  return history_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::zproto::MessageContainer >*
LoadHistoryMessageRsp::mutable_history() {
  // @@protoc_insertion_point(field_mutable_list:zproto.LoadHistoryMessageRsp.history)
  return &history_;
}
inline const ::google::protobuf::RepeatedPtrField< ::zproto::MessageContainer >&
LoadHistoryMessageRsp::history() const {
  // @@protoc_insertion_point(field_list:zproto.LoadHistoryMessageRsp.history)
  return history_;
}

// -------------------------------------------------------------------

// LoadDialogsReq

// uint64 date = 1;
inline void LoadDialogsReq::clear_date() {
  date_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LoadDialogsReq::date() const {
  // @@protoc_insertion_point(field_get:zproto.LoadDialogsReq.date)
  return date_;
}
inline void LoadDialogsReq::set_date(::google::protobuf::uint64 value) {
  
  date_ = value;
  // @@protoc_insertion_point(field_set:zproto.LoadDialogsReq.date)
}

// .zproto.EnumHelper.ListLoadMode load_mode = 2;
inline void LoadDialogsReq::clear_load_mode() {
  load_mode_ = 0;
}
inline ::zproto::EnumHelper_ListLoadMode LoadDialogsReq::load_mode() const {
  // @@protoc_insertion_point(field_get:zproto.LoadDialogsReq.load_mode)
  return static_cast< ::zproto::EnumHelper_ListLoadMode >(load_mode_);
}
inline void LoadDialogsReq::set_load_mode(::zproto::EnumHelper_ListLoadMode value) {
  
  load_mode_ = value;
  // @@protoc_insertion_point(field_set:zproto.LoadDialogsReq.load_mode)
}

// uint32 limit = 3;
inline void LoadDialogsReq::clear_limit() {
  limit_ = 0u;
}
inline ::google::protobuf::uint32 LoadDialogsReq::limit() const {
  // @@protoc_insertion_point(field_get:zproto.LoadDialogsReq.limit)
  return limit_;
}
inline void LoadDialogsReq::set_limit(::google::protobuf::uint32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:zproto.LoadDialogsReq.limit)
}

// -------------------------------------------------------------------

// LoadDialogsRsp

// repeated .zproto.Dialog dialogs = 1;
inline int LoadDialogsRsp::dialogs_size() const {
  return dialogs_.size();
}
inline const ::zproto::Dialog& LoadDialogsRsp::dialogs(int index) const {
  // @@protoc_insertion_point(field_get:zproto.LoadDialogsRsp.dialogs)
  return dialogs_.Get(index);
}
inline ::zproto::Dialog* LoadDialogsRsp::mutable_dialogs(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.LoadDialogsRsp.dialogs)
  return dialogs_.Mutable(index);
}
inline ::zproto::Dialog* LoadDialogsRsp::add_dialogs() {
  // @@protoc_insertion_point(field_add:zproto.LoadDialogsRsp.dialogs)
  return dialogs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::zproto::Dialog >*
LoadDialogsRsp::mutable_dialogs() {
  // @@protoc_insertion_point(field_mutable_list:zproto.LoadDialogsRsp.dialogs)
  return &dialogs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::zproto::Dialog >&
LoadDialogsRsp::dialogs() const {
  // @@protoc_insertion_point(field_list:zproto.LoadDialogsRsp.dialogs)
  return dialogs_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace zproto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_messages_2eproto__INCLUDED
