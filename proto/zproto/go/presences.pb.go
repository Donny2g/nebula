// Code generated by protoc-gen-go. DO NOT EDIT.
// source: presences.proto

package zproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// /////////////////////////////////////////////////////////////////////
// online
// ClientOnlineReq -> VoidRsp
type ClientOnlineReq struct {
	ServerId uint32 `protobuf:"varint,1,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	ConnId   uint64 `protobuf:"varint,2,opt,name=conn_id,json=connId" json:"conn_id,omitempty"`
	AppId    uint32 `protobuf:"varint,3,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	UserId   string `protobuf:"bytes,4,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	State    uint32 `protobuf:"varint,5,opt,name=state" json:"state,omitempty"`
}

func (m *ClientOnlineReq) Reset()                    { *m = ClientOnlineReq{} }
func (m *ClientOnlineReq) String() string            { return proto.CompactTextString(m) }
func (*ClientOnlineReq) ProtoMessage()               {}
func (*ClientOnlineReq) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{0} }

func (m *ClientOnlineReq) GetServerId() uint32 {
	if m != nil {
		return m.ServerId
	}
	return 0
}

func (m *ClientOnlineReq) GetConnId() uint64 {
	if m != nil {
		return m.ConnId
	}
	return 0
}

func (m *ClientOnlineReq) GetAppId() uint32 {
	if m != nil {
		return m.AppId
	}
	return 0
}

func (m *ClientOnlineReq) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *ClientOnlineReq) GetState() uint32 {
	if m != nil {
		return m.State
	}
	return 0
}

// CLIENT_ONLINE_RSP
type ClientOnlineRsp struct {
	IndexId uint64 `protobuf:"varint,1,opt,name=index_id,json=indexId" json:"index_id,omitempty"`
}

func (m *ClientOnlineRsp) Reset()                    { *m = ClientOnlineRsp{} }
func (m *ClientOnlineRsp) String() string            { return proto.CompactTextString(m) }
func (*ClientOnlineRsp) ProtoMessage()               {}
func (*ClientOnlineRsp) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{1} }

func (m *ClientOnlineRsp) GetIndexId() uint64 {
	if m != nil {
		return m.IndexId
	}
	return 0
}

// ClientOfflineReq
type ClientOfflineReq struct {
	ServerId uint32 `protobuf:"varint,1,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	ConnId   uint64 `protobuf:"varint,2,opt,name=conn_id,json=connId" json:"conn_id,omitempty"`
}

func (m *ClientOfflineReq) Reset()                    { *m = ClientOfflineReq{} }
func (m *ClientOfflineReq) String() string            { return proto.CompactTextString(m) }
func (*ClientOfflineReq) ProtoMessage()               {}
func (*ClientOfflineReq) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{2} }

func (m *ClientOfflineReq) GetServerId() uint32 {
	if m != nil {
		return m.ServerId
	}
	return 0
}

func (m *ClientOfflineReq) GetConnId() uint64 {
	if m != nil {
		return m.ConnId
	}
	return 0
}

// CLIENT_OFFLINE_RSP
type ClientOfflineRsp struct {
	IndexId uint64 `protobuf:"varint,1,opt,name=index_id,json=indexId" json:"index_id,omitempty"`
}

func (m *ClientOfflineRsp) Reset()                    { *m = ClientOfflineRsp{} }
func (m *ClientOfflineRsp) String() string            { return proto.CompactTextString(m) }
func (*ClientOfflineRsp) ProtoMessage()               {}
func (*ClientOfflineRsp) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{3} }

func (m *ClientOfflineRsp) GetIndexId() uint64 {
	if m != nil {
		return m.IndexId
	}
	return 0
}

//
type QueryOnlineUserReq struct {
	UserIdList []*UserID `protobuf:"bytes,1,rep,name=user_id_list,json=userIdList" json:"user_id_list,omitempty"`
}

func (m *QueryOnlineUserReq) Reset()                    { *m = QueryOnlineUserReq{} }
func (m *QueryOnlineUserReq) String() string            { return proto.CompactTextString(m) }
func (*QueryOnlineUserReq) ProtoMessage()               {}
func (*QueryOnlineUserReq) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{4} }

func (m *QueryOnlineUserReq) GetUserIdList() []*UserID {
	if m != nil {
		return m.UserIdList
	}
	return nil
}

//
type QueryOnlineUserRsp struct {
	OnlineUsers []*OnlineUser `protobuf:"bytes,1,rep,name=online_users,json=onlineUsers" json:"online_users,omitempty"`
}

func (m *QueryOnlineUserRsp) Reset()                    { *m = QueryOnlineUserRsp{} }
func (m *QueryOnlineUserRsp) String() string            { return proto.CompactTextString(m) }
func (*QueryOnlineUserRsp) ProtoMessage()               {}
func (*QueryOnlineUserRsp) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{5} }

func (m *QueryOnlineUserRsp) GetOnlineUsers() []*OnlineUser {
	if m != nil {
		return m.OnlineUsers
	}
	return nil
}

func init() {
	proto.RegisterType((*ClientOnlineReq)(nil), "zproto.ClientOnlineReq")
	proto.RegisterType((*ClientOnlineRsp)(nil), "zproto.ClientOnlineRsp")
	proto.RegisterType((*ClientOfflineReq)(nil), "zproto.ClientOfflineReq")
	proto.RegisterType((*ClientOfflineRsp)(nil), "zproto.ClientOfflineRsp")
	proto.RegisterType((*QueryOnlineUserReq)(nil), "zproto.QueryOnlineUserReq")
	proto.RegisterType((*QueryOnlineUserRsp)(nil), "zproto.QueryOnlineUserRsp")
}

func init() { proto.RegisterFile("presences.proto", fileDescriptor7) }

var fileDescriptor7 = []byte{
	// 315 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x52, 0x4d, 0x4b, 0xc3, 0x40,
	0x10, 0x25, 0xfd, 0x48, 0xdb, 0x69, 0xb5, 0xb2, 0x28, 0xad, 0x7a, 0x09, 0x39, 0xe5, 0x50, 0x83,
	0x28, 0xfe, 0x81, 0x2a, 0xd2, 0xa0, 0x60, 0x0d, 0x78, 0xf1, 0x52, 0xd2, 0x64, 0xaa, 0x0b, 0x71,
	0xb3, 0x66, 0xb6, 0xa2, 0xfd, 0x0f, 0xfe, 0x67, 0xd9, 0xdd, 0x44, 0xa4, 0x82, 0x17, 0x4f, 0x93,
	0xf7, 0xe6, 0xcd, 0x9b, 0x97, 0x61, 0x61, 0x28, 0x4b, 0x24, 0x14, 0x29, 0x52, 0x28, 0xcb, 0x42,
	0x15, 0xcc, 0xdd, 0x98, 0x7a, 0xd4, 0x5f, 0x26, 0x54, 0x93, 0xfe, 0xa7, 0x03, 0xc3, 0xcb, 0x9c,
	0xa3, 0x50, 0x77, 0x22, 0xe7, 0x02, 0x63, 0x7c, 0x65, 0xc7, 0xd0, 0x23, 0x2c, 0xdf, 0xb0, 0x5c,
	0xf0, 0x6c, 0xec, 0x78, 0x4e, 0xb0, 0x13, 0x77, 0x2d, 0x11, 0x65, 0x6c, 0x04, 0x9d, 0xb4, 0x10,
	0x42, 0xb7, 0x1a, 0x9e, 0x13, 0xb4, 0x62, 0x57, 0xc3, 0x28, 0x63, 0x07, 0xe0, 0x26, 0x52, 0x6a,
	0xbe, 0x69, 0x46, 0xda, 0x89, 0x94, 0x56, 0xbf, 0x26, 0x6b, 0xd5, 0xf2, 0x9c, 0xa0, 0x17, 0xbb,
	0x1a, 0x46, 0x19, 0xdb, 0x87, 0x36, 0xa9, 0x44, 0xe1, 0xb8, 0x6d, 0xe5, 0x06, 0xf8, 0x93, 0xad,
	0x38, 0x24, 0xd9, 0x21, 0x74, 0xb9, 0xc8, 0xf0, 0xbd, 0x4e, 0xd3, 0x8a, 0x3b, 0x06, 0x47, 0x99,
	0x3f, 0x83, 0xbd, 0x4a, 0xbd, 0x5a, 0xfd, 0x2b, 0xbd, 0x7f, 0xb2, 0xed, 0xf4, 0xf7, 0xe2, 0x6b,
	0x60, 0xf7, 0x6b, 0x2c, 0x3f, 0x6c, 0xca, 0x07, 0xc2, 0x52, 0xaf, 0x3e, 0x85, 0x41, 0xf5, 0xaf,
	0x8b, 0x9c, 0x93, 0x1a, 0x3b, 0x5e, 0x33, 0xe8, 0x9f, 0xed, 0x86, 0xf6, 0xf0, 0xa1, 0x96, 0x45,
	0x57, 0x31, 0xd8, 0x03, 0xdc, 0x72, 0x52, 0xfe, 0xcd, 0x6f, 0x1f, 0x92, 0xec, 0x02, 0x06, 0x85,
	0x21, 0x16, 0x5a, 0x4a, 0x95, 0x0f, 0xab, 0x7d, 0x7e, 0x88, 0xfb, 0xc5, 0xf7, 0x37, 0x4d, 0x27,
	0x30, 0x4a, 0x8b, 0x97, 0x70, 0x93, 0x3e, 0x27, 0x2a, 0x44, 0xf1, 0xc4, 0x05, 0x56, 0x23, 0xd3,
	0xe1, 0xe3, 0x5c, 0xd7, 0x79, 0xfd, 0x24, 0x66, 0x8d, 0xa5, 0x6b, 0x3a, 0xe7, 0x5f, 0x01, 0x00,
	0x00, 0xff, 0xff, 0xb9, 0x46, 0x76, 0xdc, 0x28, 0x02, 0x00, 0x00,
}
